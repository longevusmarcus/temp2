import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { ListResourceOrder, ListResourceOrder$Outbound } from "../components/listresourceorder.js";
import { OrderSortProperty } from "../components/ordersortproperty.js";
import { ProductBillingType } from "../components/productbillingtype.js";
import { ProductPriceType } from "../components/productpricetype.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Filter by organization ID.
 */
export type OrdersListQueryParamOrganizationIDFilter = string | Array<string>;
/**
 * Filter by product ID.
 */
export type OrdersListQueryParamProductIDFilter = string | Array<string>;
/**
 * Filter by product billing type. `recurring` will filter data corresponding to subscriptions creations or renewals. `one_time` will filter data corresponding to one-time purchases.
 */
export type ProductBillingTypeFilter = ProductBillingType | Array<ProductBillingType>;
export type ProductPriceTypeFilter = ProductPriceType | Array<ProductPriceType>;
/**
 * Filter by discount ID.
 */
export type QueryParamDiscountIDFilter = string | Array<string>;
/**
 * Filter by customer ID.
 */
export type OrdersListQueryParamCustomerIDFilter = string | Array<string>;
/**
 * Filter by checkout ID.
 */
export type CheckoutIDFilter = string | Array<string>;
export type OrdersListRequest = {
    /**
     * Filter by organization ID.
     */
    organizationId?: string | Array<string> | null | undefined;
    /**
     * Filter by product ID.
     */
    productId?: string | Array<string> | null | undefined;
    /**
     * Filter by product billing type. `recurring` will filter data corresponding to subscriptions creations or renewals. `one_time` will filter data corresponding to one-time purchases.
     */
    productBillingType?: ProductBillingType | Array<ProductBillingType> | null | undefined;
    /**
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    productPriceType?: ProductPriceType | Array<ProductPriceType> | null | undefined;
    /**
     * Filter by discount ID.
     */
    discountId?: string | Array<string> | null | undefined;
    /**
     * Filter by customer ID.
     */
    customerId?: string | Array<string> | null | undefined;
    /**
     * Filter by checkout ID.
     */
    checkoutId?: string | Array<string> | null | undefined;
    /**
     * Page number, defaults to 1.
     */
    page?: number | undefined;
    /**
     * Size of a page, defaults to 10. Maximum is 100.
     */
    limit?: number | undefined;
    /**
     * Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.
     */
    sorting?: Array<OrderSortProperty> | null | undefined;
};
export type OrdersListResponse = {
    result: ListResourceOrder;
};
/** @internal */
export declare const OrdersListQueryParamOrganizationIDFilter$inboundSchema: z.ZodType<OrdersListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type OrdersListQueryParamOrganizationIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const OrdersListQueryParamOrganizationIDFilter$outboundSchema: z.ZodType<OrdersListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, OrdersListQueryParamOrganizationIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrdersListQueryParamOrganizationIDFilter$ {
    /** @deprecated use `OrdersListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrdersListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrdersListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrdersListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, OrdersListQueryParamOrganizationIDFilter>;
    /** @deprecated use `OrdersListQueryParamOrganizationIDFilter$Outbound` instead. */
    type Outbound = OrdersListQueryParamOrganizationIDFilter$Outbound;
}
export declare function ordersListQueryParamOrganizationIDFilterToJSON(ordersListQueryParamOrganizationIDFilter: OrdersListQueryParamOrganizationIDFilter): string;
export declare function ordersListQueryParamOrganizationIDFilterFromJSON(jsonString: string): SafeParseResult<OrdersListQueryParamOrganizationIDFilter, SDKValidationError>;
/** @internal */
export declare const OrdersListQueryParamProductIDFilter$inboundSchema: z.ZodType<OrdersListQueryParamProductIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type OrdersListQueryParamProductIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const OrdersListQueryParamProductIDFilter$outboundSchema: z.ZodType<OrdersListQueryParamProductIDFilter$Outbound, z.ZodTypeDef, OrdersListQueryParamProductIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrdersListQueryParamProductIDFilter$ {
    /** @deprecated use `OrdersListQueryParamProductIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrdersListQueryParamProductIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrdersListQueryParamProductIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrdersListQueryParamProductIDFilter$Outbound, z.ZodTypeDef, OrdersListQueryParamProductIDFilter>;
    /** @deprecated use `OrdersListQueryParamProductIDFilter$Outbound` instead. */
    type Outbound = OrdersListQueryParamProductIDFilter$Outbound;
}
export declare function ordersListQueryParamProductIDFilterToJSON(ordersListQueryParamProductIDFilter: OrdersListQueryParamProductIDFilter): string;
export declare function ordersListQueryParamProductIDFilterFromJSON(jsonString: string): SafeParseResult<OrdersListQueryParamProductIDFilter, SDKValidationError>;
/** @internal */
export declare const ProductBillingTypeFilter$inboundSchema: z.ZodType<ProductBillingTypeFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductBillingTypeFilter$Outbound = string | Array<string>;
/** @internal */
export declare const ProductBillingTypeFilter$outboundSchema: z.ZodType<ProductBillingTypeFilter$Outbound, z.ZodTypeDef, ProductBillingTypeFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductBillingTypeFilter$ {
    /** @deprecated use `ProductBillingTypeFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductBillingTypeFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductBillingTypeFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductBillingTypeFilter$Outbound, z.ZodTypeDef, ProductBillingTypeFilter>;
    /** @deprecated use `ProductBillingTypeFilter$Outbound` instead. */
    type Outbound = ProductBillingTypeFilter$Outbound;
}
export declare function productBillingTypeFilterToJSON(productBillingTypeFilter: ProductBillingTypeFilter): string;
export declare function productBillingTypeFilterFromJSON(jsonString: string): SafeParseResult<ProductBillingTypeFilter, SDKValidationError>;
/** @internal */
export declare const ProductPriceTypeFilter$inboundSchema: z.ZodType<ProductPriceTypeFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductPriceTypeFilter$Outbound = string | Array<string>;
/** @internal */
export declare const ProductPriceTypeFilter$outboundSchema: z.ZodType<ProductPriceTypeFilter$Outbound, z.ZodTypeDef, ProductPriceTypeFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductPriceTypeFilter$ {
    /** @deprecated use `ProductPriceTypeFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductPriceTypeFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductPriceTypeFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductPriceTypeFilter$Outbound, z.ZodTypeDef, ProductPriceTypeFilter>;
    /** @deprecated use `ProductPriceTypeFilter$Outbound` instead. */
    type Outbound = ProductPriceTypeFilter$Outbound;
}
export declare function productPriceTypeFilterToJSON(productPriceTypeFilter: ProductPriceTypeFilter): string;
export declare function productPriceTypeFilterFromJSON(jsonString: string): SafeParseResult<ProductPriceTypeFilter, SDKValidationError>;
/** @internal */
export declare const QueryParamDiscountIDFilter$inboundSchema: z.ZodType<QueryParamDiscountIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryParamDiscountIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const QueryParamDiscountIDFilter$outboundSchema: z.ZodType<QueryParamDiscountIDFilter$Outbound, z.ZodTypeDef, QueryParamDiscountIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryParamDiscountIDFilter$ {
    /** @deprecated use `QueryParamDiscountIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryParamDiscountIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryParamDiscountIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryParamDiscountIDFilter$Outbound, z.ZodTypeDef, QueryParamDiscountIDFilter>;
    /** @deprecated use `QueryParamDiscountIDFilter$Outbound` instead. */
    type Outbound = QueryParamDiscountIDFilter$Outbound;
}
export declare function queryParamDiscountIDFilterToJSON(queryParamDiscountIDFilter: QueryParamDiscountIDFilter): string;
export declare function queryParamDiscountIDFilterFromJSON(jsonString: string): SafeParseResult<QueryParamDiscountIDFilter, SDKValidationError>;
/** @internal */
export declare const OrdersListQueryParamCustomerIDFilter$inboundSchema: z.ZodType<OrdersListQueryParamCustomerIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type OrdersListQueryParamCustomerIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const OrdersListQueryParamCustomerIDFilter$outboundSchema: z.ZodType<OrdersListQueryParamCustomerIDFilter$Outbound, z.ZodTypeDef, OrdersListQueryParamCustomerIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrdersListQueryParamCustomerIDFilter$ {
    /** @deprecated use `OrdersListQueryParamCustomerIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrdersListQueryParamCustomerIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrdersListQueryParamCustomerIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrdersListQueryParamCustomerIDFilter$Outbound, z.ZodTypeDef, OrdersListQueryParamCustomerIDFilter>;
    /** @deprecated use `OrdersListQueryParamCustomerIDFilter$Outbound` instead. */
    type Outbound = OrdersListQueryParamCustomerIDFilter$Outbound;
}
export declare function ordersListQueryParamCustomerIDFilterToJSON(ordersListQueryParamCustomerIDFilter: OrdersListQueryParamCustomerIDFilter): string;
export declare function ordersListQueryParamCustomerIDFilterFromJSON(jsonString: string): SafeParseResult<OrdersListQueryParamCustomerIDFilter, SDKValidationError>;
/** @internal */
export declare const CheckoutIDFilter$inboundSchema: z.ZodType<CheckoutIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type CheckoutIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const CheckoutIDFilter$outboundSchema: z.ZodType<CheckoutIDFilter$Outbound, z.ZodTypeDef, CheckoutIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CheckoutIDFilter$ {
    /** @deprecated use `CheckoutIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CheckoutIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `CheckoutIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CheckoutIDFilter$Outbound, z.ZodTypeDef, CheckoutIDFilter>;
    /** @deprecated use `CheckoutIDFilter$Outbound` instead. */
    type Outbound = CheckoutIDFilter$Outbound;
}
export declare function checkoutIDFilterToJSON(checkoutIDFilter: CheckoutIDFilter): string;
export declare function checkoutIDFilterFromJSON(jsonString: string): SafeParseResult<CheckoutIDFilter, SDKValidationError>;
/** @internal */
export declare const OrdersListRequest$inboundSchema: z.ZodType<OrdersListRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type OrdersListRequest$Outbound = {
    organization_id?: string | Array<string> | null | undefined;
    product_id?: string | Array<string> | null | undefined;
    product_billing_type?: string | Array<string> | null | undefined;
    product_price_type?: string | Array<string> | null | undefined;
    discount_id?: string | Array<string> | null | undefined;
    customer_id?: string | Array<string> | null | undefined;
    checkout_id?: string | Array<string> | null | undefined;
    page: number;
    limit: number;
    sorting?: Array<string> | null | undefined;
};
/** @internal */
export declare const OrdersListRequest$outboundSchema: z.ZodType<OrdersListRequest$Outbound, z.ZodTypeDef, OrdersListRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrdersListRequest$ {
    /** @deprecated use `OrdersListRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrdersListRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrdersListRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrdersListRequest$Outbound, z.ZodTypeDef, OrdersListRequest>;
    /** @deprecated use `OrdersListRequest$Outbound` instead. */
    type Outbound = OrdersListRequest$Outbound;
}
export declare function ordersListRequestToJSON(ordersListRequest: OrdersListRequest): string;
export declare function ordersListRequestFromJSON(jsonString: string): SafeParseResult<OrdersListRequest, SDKValidationError>;
/** @internal */
export declare const OrdersListResponse$inboundSchema: z.ZodType<OrdersListResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type OrdersListResponse$Outbound = {
    Result: ListResourceOrder$Outbound;
};
/** @internal */
export declare const OrdersListResponse$outboundSchema: z.ZodType<OrdersListResponse$Outbound, z.ZodTypeDef, OrdersListResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrdersListResponse$ {
    /** @deprecated use `OrdersListResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrdersListResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrdersListResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrdersListResponse$Outbound, z.ZodTypeDef, OrdersListResponse>;
    /** @deprecated use `OrdersListResponse$Outbound` instead. */
    type Outbound = OrdersListResponse$Outbound;
}
export declare function ordersListResponseToJSON(ordersListResponse: OrdersListResponse): string;
export declare function ordersListResponseFromJSON(jsonString: string): SafeParseResult<OrdersListResponse, SDKValidationError>;
//# sourceMappingURL=orderslist.d.ts.map