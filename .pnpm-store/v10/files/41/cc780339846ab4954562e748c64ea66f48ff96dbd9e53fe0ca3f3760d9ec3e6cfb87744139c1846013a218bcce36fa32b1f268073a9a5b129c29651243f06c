/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomersDeleteExternalRequest$inboundSchema = z.object({
    external_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "external_id": "externalId",
    });
});
/** @internal */
export const CustomersDeleteExternalRequest$outboundSchema = z.object({
    externalId: z.string(),
}).transform((v) => {
    return remap$(v, {
        externalId: "external_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomersDeleteExternalRequest$;
(function (CustomersDeleteExternalRequest$) {
    /** @deprecated use `CustomersDeleteExternalRequest$inboundSchema` instead. */
    CustomersDeleteExternalRequest$.inboundSchema = CustomersDeleteExternalRequest$inboundSchema;
    /** @deprecated use `CustomersDeleteExternalRequest$outboundSchema` instead. */
    CustomersDeleteExternalRequest$.outboundSchema = CustomersDeleteExternalRequest$outboundSchema;
})(CustomersDeleteExternalRequest$ || (CustomersDeleteExternalRequest$ = {}));
export function customersDeleteExternalRequestToJSON(customersDeleteExternalRequest) {
    return JSON.stringify(CustomersDeleteExternalRequest$outboundSchema.parse(customersDeleteExternalRequest));
}
export function customersDeleteExternalRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomersDeleteExternalRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomersDeleteExternalRequest' from JSON`);
}
//# sourceMappingURL=customersdeleteexternal.js.map