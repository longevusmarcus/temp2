/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { AlreadyActiveSubscriptionError$inboundSchema, AlreadyActiveSubscriptionError$outboundSchema, } from "./alreadyactivesubscriptionerror.js";
import { NotOpenCheckout$inboundSchema, NotOpenCheckout$outboundSchema, } from "./notopencheckout.js";
/** @internal */
export const CheckoutForbiddenError$inboundSchema = z.union([
    AlreadyActiveSubscriptionError$inboundSchema,
    NotOpenCheckout$inboundSchema,
]);
/** @internal */
export const CheckoutForbiddenError$outboundSchema = z.union([
    AlreadyActiveSubscriptionError$outboundSchema,
    NotOpenCheckout$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CheckoutForbiddenError$;
(function (CheckoutForbiddenError$) {
    /** @deprecated use `CheckoutForbiddenError$inboundSchema` instead. */
    CheckoutForbiddenError$.inboundSchema = CheckoutForbiddenError$inboundSchema;
    /** @deprecated use `CheckoutForbiddenError$outboundSchema` instead. */
    CheckoutForbiddenError$.outboundSchema = CheckoutForbiddenError$outboundSchema;
})(CheckoutForbiddenError$ || (CheckoutForbiddenError$ = {}));
export function checkoutForbiddenErrorToJSON(checkoutForbiddenError) {
    return JSON.stringify(CheckoutForbiddenError$outboundSchema.parse(checkoutForbiddenError));
}
export function checkoutForbiddenErrorFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CheckoutForbiddenError$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutForbiddenError' from JSON`);
}
//# sourceMappingURL=checkoutforbiddenerror.js.map