"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.tool$customersDelete = void 0;
const customersDelete_js_1 = require("../../funcs/customersDelete.js");
const customersdelete_js_1 = require("../../models/operations/customersdelete.js");
const tools_js_1 = require("../tools.js");
const args = {
    request: customersdelete_js_1.CustomersDeleteRequest$inboundSchema,
};
exports.tool$customersDelete = {
    name: "customers-delete",
    description: `Delete Customer

Delete a customer.

This action cannot be undone and will immediately:
- Cancel any active subscriptions for the customer
- Revoke all their benefits
- Clear any \`external_id\`

Use it only in the context of deleting a user within your
own service. Otherwise, use more granular API endpoints to cancel
a specific subscription or revoke certain benefits.

Note: The customers information will nonetheless be retained for historic
orders and subscriptions.

**Scopes**: \`customers:write\``,
    scopes: ["write", "customers"],
    args,
    tool: async (client, args, ctx) => {
        const [result, apiCall] = await (0, customersDelete_js_1.customersDelete)(client, args.request, { fetchOptions: { signal: ctx.signal } }).$inspect();
        if (!result.ok) {
            return {
                content: [{ type: "text", text: result.error.message }],
                isError: true,
            };
        }
        return (0, tools_js_1.formatResult)(void 0, apiCall);
    },
};
//# sourceMappingURL=customersDelete.js.map