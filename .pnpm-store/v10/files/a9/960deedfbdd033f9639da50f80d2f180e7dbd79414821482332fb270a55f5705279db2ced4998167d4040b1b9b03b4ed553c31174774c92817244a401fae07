/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { CustomFieldDateProperties$inboundSchema, CustomFieldDateProperties$outboundSchema, } from "./customfielddateproperties.js";
/** @internal */
export const CustomFieldUpdateDateMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
export const CustomFieldUpdateDateMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldUpdateDateMetadata$;
(function (CustomFieldUpdateDateMetadata$) {
    /** @deprecated use `CustomFieldUpdateDateMetadata$inboundSchema` instead. */
    CustomFieldUpdateDateMetadata$.inboundSchema = CustomFieldUpdateDateMetadata$inboundSchema;
    /** @deprecated use `CustomFieldUpdateDateMetadata$outboundSchema` instead. */
    CustomFieldUpdateDateMetadata$.outboundSchema = CustomFieldUpdateDateMetadata$outboundSchema;
})(CustomFieldUpdateDateMetadata$ || (CustomFieldUpdateDateMetadata$ = {}));
export function customFieldUpdateDateMetadataToJSON(customFieldUpdateDateMetadata) {
    return JSON.stringify(CustomFieldUpdateDateMetadata$outboundSchema.parse(customFieldUpdateDateMetadata));
}
export function customFieldUpdateDateMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldUpdateDateMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldUpdateDateMetadata' from JSON`);
}
/** @internal */
export const CustomFieldUpdateDate$inboundSchema = z.object({
    metadata: z.nullable(z.record(z.union([z.string(), z.number().int(), z.boolean()]))).optional(),
    name: z.nullable(z.string()).optional(),
    slug: z.nullable(z.string()).optional(),
    type: z.literal("date").optional(),
    properties: z.nullable(CustomFieldDateProperties$inboundSchema).optional(),
});
/** @internal */
export const CustomFieldUpdateDate$outboundSchema = z.object({
    metadata: z.nullable(z.record(z.union([z.string(), z.number().int(), z.boolean()]))).optional(),
    name: z.nullable(z.string()).optional(),
    slug: z.nullable(z.string()).optional(),
    type: z.literal("date").default("date"),
    properties: z.nullable(CustomFieldDateProperties$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldUpdateDate$;
(function (CustomFieldUpdateDate$) {
    /** @deprecated use `CustomFieldUpdateDate$inboundSchema` instead. */
    CustomFieldUpdateDate$.inboundSchema = CustomFieldUpdateDate$inboundSchema;
    /** @deprecated use `CustomFieldUpdateDate$outboundSchema` instead. */
    CustomFieldUpdateDate$.outboundSchema = CustomFieldUpdateDate$outboundSchema;
})(CustomFieldUpdateDate$ || (CustomFieldUpdateDate$ = {}));
export function customFieldUpdateDateToJSON(customFieldUpdateDate) {
    return JSON.stringify(CustomFieldUpdateDate$outboundSchema.parse(customFieldUpdateDate));
}
export function customFieldUpdateDateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldUpdateDate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldUpdateDate' from JSON`);
}
//# sourceMappingURL=customfieldupdatedate.js.map