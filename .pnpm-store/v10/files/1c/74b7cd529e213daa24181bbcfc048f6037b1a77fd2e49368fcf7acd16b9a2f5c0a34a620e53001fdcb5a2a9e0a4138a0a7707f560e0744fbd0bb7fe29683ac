/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { customerPortalLicenseKeysActivate } from "../funcs/customerPortalLicenseKeysActivate.js";
import { customerPortalLicenseKeysDeactivate } from "../funcs/customerPortalLicenseKeysDeactivate.js";
import { customerPortalLicenseKeysGet } from "../funcs/customerPortalLicenseKeysGet.js";
import { customerPortalLicenseKeysList } from "../funcs/customerPortalLicenseKeysList.js";
import { customerPortalLicenseKeysValidate } from "../funcs/customerPortalLicenseKeysValidate.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
import { unwrapResultIterator } from "../types/operations.js";
export class PolarLicenseKeys extends ClientSDK {
    /**
     * List License Keys
     *
     * @remarks
     * **Scopes**: `customer_portal:read` `customer_portal:write`
     */
    async list(security, request, options) {
        return unwrapResultIterator(customerPortalLicenseKeysList(this, security, request, options));
    }
    /**
     * Get License Key
     *
     * @remarks
     * Get a license key.
     *
     * **Scopes**: `customer_portal:read` `customer_portal:write`
     */
    async get(security, request, options) {
        return unwrapAsync(customerPortalLicenseKeysGet(this, security, request, options));
    }
    /**
     * Validate License Key
     *
     * @remarks
     * Validate a license key.
     */
    async validate(request, options) {
        return unwrapAsync(customerPortalLicenseKeysValidate(this, request, options));
    }
    /**
     * Activate License Key
     *
     * @remarks
     * Activate a license key instance.
     */
    async activate(request, options) {
        return unwrapAsync(customerPortalLicenseKeysActivate(this, request, options));
    }
    /**
     * Deactivate License Key
     *
     * @remarks
     * Deactivate a license key instance.
     */
    async deactivate(request, options) {
        return unwrapAsync(customerPortalLicenseKeysDeactivate(this, request, options));
    }
}
//# sourceMappingURL=polarlicensekeys.js.map