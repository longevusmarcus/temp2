"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerProduct$ = exports.CustomerProduct$outboundSchema = exports.CustomerProduct$inboundSchema = exports.CustomerProductPrices$ = exports.CustomerProductPrices$outboundSchema = exports.CustomerProductPrices$inboundSchema = void 0;
exports.customerProductPricesToJSON = customerProductPricesToJSON;
exports.customerProductPricesFromJSON = customerProductPricesFromJSON;
exports.customerProductToJSON = customerProductToJSON;
exports.customerProductFromJSON = customerProductFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const benefitbase_js_1 = require("./benefitbase.js");
const legacyrecurringproductprice_js_1 = require("./legacyrecurringproductprice.js");
const productmediafileread_js_1 = require("./productmediafileread.js");
const productprice_js_1 = require("./productprice.js");
const subscriptionrecurringinterval_js_1 = require("./subscriptionrecurringinterval.js");
/** @internal */
exports.CustomerProductPrices$inboundSchema = z.union([
    legacyrecurringproductprice_js_1.LegacyRecurringProductPrice$inboundSchema,
    productprice_js_1.ProductPrice$inboundSchema,
]);
/** @internal */
exports.CustomerProductPrices$outboundSchema = z.union([
    legacyrecurringproductprice_js_1.LegacyRecurringProductPrice$outboundSchema,
    productprice_js_1.ProductPrice$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerProductPrices$;
(function (CustomerProductPrices$) {
    /** @deprecated use `CustomerProductPrices$inboundSchema` instead. */
    CustomerProductPrices$.inboundSchema = exports.CustomerProductPrices$inboundSchema;
    /** @deprecated use `CustomerProductPrices$outboundSchema` instead. */
    CustomerProductPrices$.outboundSchema = exports.CustomerProductPrices$outboundSchema;
})(CustomerProductPrices$ || (exports.CustomerProductPrices$ = CustomerProductPrices$ = {}));
function customerProductPricesToJSON(customerProductPrices) {
    return JSON.stringify(exports.CustomerProductPrices$outboundSchema.parse(customerProductPrices));
}
function customerProductPricesFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerProductPrices$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerProductPrices' from JSON`);
}
/** @internal */
exports.CustomerProduct$inboundSchema = z.object({
    created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    modified_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    id: z.string(),
    name: z.string(),
    description: z.nullable(z.string()),
    recurring_interval: z.nullable(subscriptionrecurringinterval_js_1.SubscriptionRecurringInterval$inboundSchema),
    is_recurring: z.boolean(),
    is_archived: z.boolean(),
    organization_id: z.string(),
    prices: z.array(z.union([
        legacyrecurringproductprice_js_1.LegacyRecurringProductPrice$inboundSchema,
        productprice_js_1.ProductPrice$inboundSchema,
    ])),
    benefits: z.array(benefitbase_js_1.BenefitBase$inboundSchema),
    medias: z.array(productmediafileread_js_1.ProductMediaFileRead$inboundSchema),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "created_at": "createdAt",
        "modified_at": "modifiedAt",
        "recurring_interval": "recurringInterval",
        "is_recurring": "isRecurring",
        "is_archived": "isArchived",
        "organization_id": "organizationId",
    });
});
/** @internal */
exports.CustomerProduct$outboundSchema = z.object({
    createdAt: z.date().transform(v => v.toISOString()),
    modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),
    id: z.string(),
    name: z.string(),
    description: z.nullable(z.string()),
    recurringInterval: z.nullable(subscriptionrecurringinterval_js_1.SubscriptionRecurringInterval$outboundSchema),
    isRecurring: z.boolean(),
    isArchived: z.boolean(),
    organizationId: z.string(),
    prices: z.array(z.union([
        legacyrecurringproductprice_js_1.LegacyRecurringProductPrice$outboundSchema,
        productprice_js_1.ProductPrice$outboundSchema,
    ])),
    benefits: z.array(benefitbase_js_1.BenefitBase$outboundSchema),
    medias: z.array(productmediafileread_js_1.ProductMediaFileRead$outboundSchema),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        createdAt: "created_at",
        modifiedAt: "modified_at",
        recurringInterval: "recurring_interval",
        isRecurring: "is_recurring",
        isArchived: "is_archived",
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerProduct$;
(function (CustomerProduct$) {
    /** @deprecated use `CustomerProduct$inboundSchema` instead. */
    CustomerProduct$.inboundSchema = exports.CustomerProduct$inboundSchema;
    /** @deprecated use `CustomerProduct$outboundSchema` instead. */
    CustomerProduct$.outboundSchema = exports.CustomerProduct$outboundSchema;
})(CustomerProduct$ || (exports.CustomerProduct$ = CustomerProduct$ = {}));
function customerProductToJSON(customerProduct) {
    return JSON.stringify(exports.CustomerProduct$outboundSchema.parse(customerProduct));
}
function customerProductFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerProduct$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerProduct' from JSON`);
}
//# sourceMappingURL=customerproduct.js.map