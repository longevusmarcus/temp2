/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Pledge$inboundSchema, Pledge$outboundSchema, } from "./pledge.js";
/** @internal */
export const WebhookPledgeCreatedPayload$inboundSchema = z.object({
    type: z.literal("pledge.created").optional(),
    data: Pledge$inboundSchema,
});
/** @internal */
export const WebhookPledgeCreatedPayload$outboundSchema = z.object({
    type: z.literal("pledge.created").default("pledge.created"),
    data: Pledge$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookPledgeCreatedPayload$;
(function (WebhookPledgeCreatedPayload$) {
    /** @deprecated use `WebhookPledgeCreatedPayload$inboundSchema` instead. */
    WebhookPledgeCreatedPayload$.inboundSchema = WebhookPledgeCreatedPayload$inboundSchema;
    /** @deprecated use `WebhookPledgeCreatedPayload$outboundSchema` instead. */
    WebhookPledgeCreatedPayload$.outboundSchema = WebhookPledgeCreatedPayload$outboundSchema;
})(WebhookPledgeCreatedPayload$ || (WebhookPledgeCreatedPayload$ = {}));
export function webhookPledgeCreatedPayloadToJSON(webhookPledgeCreatedPayload) {
    return JSON.stringify(WebhookPledgeCreatedPayload$outboundSchema.parse(webhookPledgeCreatedPayload));
}
export function webhookPledgeCreatedPayloadFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookPledgeCreatedPayload$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookPledgeCreatedPayload' from JSON`);
}
//# sourceMappingURL=webhookpledgecreatedpayload.js.map