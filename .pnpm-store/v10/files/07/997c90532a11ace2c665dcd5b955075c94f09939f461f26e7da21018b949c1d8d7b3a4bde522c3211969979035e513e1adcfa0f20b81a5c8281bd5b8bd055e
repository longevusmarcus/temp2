"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductsListResponse$ = exports.ProductsListResponse$outboundSchema = exports.ProductsListResponse$inboundSchema = exports.ProductsListRequest$ = exports.ProductsListRequest$outboundSchema = exports.ProductsListRequest$inboundSchema = exports.BenefitIDFilter$ = exports.BenefitIDFilter$outboundSchema = exports.BenefitIDFilter$inboundSchema = exports.ProductsListQueryParamOrganizationIDFilter$ = exports.ProductsListQueryParamOrganizationIDFilter$outboundSchema = exports.ProductsListQueryParamOrganizationIDFilter$inboundSchema = exports.QueryParamProductIDFilter$ = exports.QueryParamProductIDFilter$outboundSchema = exports.QueryParamProductIDFilter$inboundSchema = void 0;
exports.queryParamProductIDFilterToJSON = queryParamProductIDFilterToJSON;
exports.queryParamProductIDFilterFromJSON = queryParamProductIDFilterFromJSON;
exports.productsListQueryParamOrganizationIDFilterToJSON = productsListQueryParamOrganizationIDFilterToJSON;
exports.productsListQueryParamOrganizationIDFilterFromJSON = productsListQueryParamOrganizationIDFilterFromJSON;
exports.benefitIDFilterToJSON = benefitIDFilterToJSON;
exports.benefitIDFilterFromJSON = benefitIDFilterFromJSON;
exports.productsListRequestToJSON = productsListRequestToJSON;
exports.productsListRequestFromJSON = productsListRequestFromJSON;
exports.productsListResponseToJSON = productsListResponseToJSON;
exports.productsListResponseFromJSON = productsListResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const listresourceproduct_js_1 = require("../components/listresourceproduct.js");
const productsortproperty_js_1 = require("../components/productsortproperty.js");
/** @internal */
exports.QueryParamProductIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.QueryParamProductIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var QueryParamProductIDFilter$;
(function (QueryParamProductIDFilter$) {
    /** @deprecated use `QueryParamProductIDFilter$inboundSchema` instead. */
    QueryParamProductIDFilter$.inboundSchema = exports.QueryParamProductIDFilter$inboundSchema;
    /** @deprecated use `QueryParamProductIDFilter$outboundSchema` instead. */
    QueryParamProductIDFilter$.outboundSchema = exports.QueryParamProductIDFilter$outboundSchema;
})(QueryParamProductIDFilter$ || (exports.QueryParamProductIDFilter$ = QueryParamProductIDFilter$ = {}));
function queryParamProductIDFilterToJSON(queryParamProductIDFilter) {
    return JSON.stringify(exports.QueryParamProductIDFilter$outboundSchema.parse(queryParamProductIDFilter));
}
function queryParamProductIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.QueryParamProductIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamProductIDFilter' from JSON`);
}
/** @internal */
exports.ProductsListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.ProductsListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ProductsListQueryParamOrganizationIDFilter$;
(function (ProductsListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `ProductsListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    ProductsListQueryParamOrganizationIDFilter$.inboundSchema = exports.ProductsListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `ProductsListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    ProductsListQueryParamOrganizationIDFilter$.outboundSchema = exports.ProductsListQueryParamOrganizationIDFilter$outboundSchema;
})(ProductsListQueryParamOrganizationIDFilter$ || (exports.ProductsListQueryParamOrganizationIDFilter$ = ProductsListQueryParamOrganizationIDFilter$ = {}));
function productsListQueryParamOrganizationIDFilterToJSON(productsListQueryParamOrganizationIDFilter) {
    return JSON.stringify(exports.ProductsListQueryParamOrganizationIDFilter$outboundSchema.parse(productsListQueryParamOrganizationIDFilter));
}
function productsListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ProductsListQueryParamOrganizationIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductsListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
exports.BenefitIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.BenefitIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BenefitIDFilter$;
(function (BenefitIDFilter$) {
    /** @deprecated use `BenefitIDFilter$inboundSchema` instead. */
    BenefitIDFilter$.inboundSchema = exports.BenefitIDFilter$inboundSchema;
    /** @deprecated use `BenefitIDFilter$outboundSchema` instead. */
    BenefitIDFilter$.outboundSchema = exports.BenefitIDFilter$outboundSchema;
})(BenefitIDFilter$ || (exports.BenefitIDFilter$ = BenefitIDFilter$ = {}));
function benefitIDFilterToJSON(benefitIDFilter) {
    return JSON.stringify(exports.BenefitIDFilter$outboundSchema.parse(benefitIDFilter));
}
function benefitIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.BenefitIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitIDFilter' from JSON`);
}
/** @internal */
exports.ProductsListRequest$inboundSchema = z.object({
    id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    query: z.nullable(z.string()).optional(),
    is_archived: z.nullable(z.boolean()).optional(),
    is_recurring: z.nullable(z.boolean()).optional(),
    benefit_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(productsortproperty_js_1.ProductSortProperty$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
        "is_archived": "isArchived",
        "is_recurring": "isRecurring",
        "benefit_id": "benefitId",
    });
});
/** @internal */
exports.ProductsListRequest$outboundSchema = z.object({
    id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    query: z.nullable(z.string()).optional(),
    isArchived: z.nullable(z.boolean()).optional(),
    isRecurring: z.nullable(z.boolean()).optional(),
    benefitId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(productsortproperty_js_1.ProductSortProperty$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
        isArchived: "is_archived",
        isRecurring: "is_recurring",
        benefitId: "benefit_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ProductsListRequest$;
(function (ProductsListRequest$) {
    /** @deprecated use `ProductsListRequest$inboundSchema` instead. */
    ProductsListRequest$.inboundSchema = exports.ProductsListRequest$inboundSchema;
    /** @deprecated use `ProductsListRequest$outboundSchema` instead. */
    ProductsListRequest$.outboundSchema = exports.ProductsListRequest$outboundSchema;
})(ProductsListRequest$ || (exports.ProductsListRequest$ = ProductsListRequest$ = {}));
function productsListRequestToJSON(productsListRequest) {
    return JSON.stringify(exports.ProductsListRequest$outboundSchema.parse(productsListRequest));
}
function productsListRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ProductsListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductsListRequest' from JSON`);
}
/** @internal */
exports.ProductsListResponse$inboundSchema = z.object({
    Result: listresourceproduct_js_1.ListResourceProduct$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Result": "result",
    });
});
/** @internal */
exports.ProductsListResponse$outboundSchema = z.object({
    result: listresourceproduct_js_1.ListResourceProduct$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ProductsListResponse$;
(function (ProductsListResponse$) {
    /** @deprecated use `ProductsListResponse$inboundSchema` instead. */
    ProductsListResponse$.inboundSchema = exports.ProductsListResponse$inboundSchema;
    /** @deprecated use `ProductsListResponse$outboundSchema` instead. */
    ProductsListResponse$.outboundSchema = exports.ProductsListResponse$outboundSchema;
})(ProductsListResponse$ || (exports.ProductsListResponse$ = ProductsListResponse$ = {}));
function productsListResponseToJSON(productsListResponse) {
    return JSON.stringify(exports.ProductsListResponse$outboundSchema.parse(productsListResponse));
}
function productsListResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ProductsListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductsListResponse' from JSON`);
}
//# sourceMappingURL=productslist.js.map