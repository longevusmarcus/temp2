/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CustomFieldCheckboxProperties$inboundSchema, CustomFieldCheckboxProperties$outboundSchema, } from "./customfieldcheckboxproperties.js";
/** @internal */
export const CustomFieldCheckboxMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
export const CustomFieldCheckboxMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldCheckboxMetadata$;
(function (CustomFieldCheckboxMetadata$) {
    /** @deprecated use `CustomFieldCheckboxMetadata$inboundSchema` instead. */
    CustomFieldCheckboxMetadata$.inboundSchema = CustomFieldCheckboxMetadata$inboundSchema;
    /** @deprecated use `CustomFieldCheckboxMetadata$outboundSchema` instead. */
    CustomFieldCheckboxMetadata$.outboundSchema = CustomFieldCheckboxMetadata$outboundSchema;
})(CustomFieldCheckboxMetadata$ || (CustomFieldCheckboxMetadata$ = {}));
export function customFieldCheckboxMetadataToJSON(customFieldCheckboxMetadata) {
    return JSON.stringify(CustomFieldCheckboxMetadata$outboundSchema.parse(customFieldCheckboxMetadata));
}
export function customFieldCheckboxMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldCheckboxMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldCheckboxMetadata' from JSON`);
}
/** @internal */
export const CustomFieldCheckbox$inboundSchema = z.object({
    created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    modified_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    id: z.string(),
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()])),
    type: z.literal("checkbox").optional(),
    slug: z.string(),
    name: z.string(),
    organization_id: z.string(),
    properties: CustomFieldCheckboxProperties$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "created_at": "createdAt",
        "modified_at": "modifiedAt",
        "organization_id": "organizationId",
    });
});
/** @internal */
export const CustomFieldCheckbox$outboundSchema = z.object({
    createdAt: z.date().transform(v => v.toISOString()),
    modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),
    id: z.string(),
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()])),
    type: z.literal("checkbox").default("checkbox"),
    slug: z.string(),
    name: z.string(),
    organizationId: z.string(),
    properties: CustomFieldCheckboxProperties$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        createdAt: "created_at",
        modifiedAt: "modified_at",
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldCheckbox$;
(function (CustomFieldCheckbox$) {
    /** @deprecated use `CustomFieldCheckbox$inboundSchema` instead. */
    CustomFieldCheckbox$.inboundSchema = CustomFieldCheckbox$inboundSchema;
    /** @deprecated use `CustomFieldCheckbox$outboundSchema` instead. */
    CustomFieldCheckbox$.outboundSchema = CustomFieldCheckbox$outboundSchema;
})(CustomFieldCheckbox$ || (CustomFieldCheckbox$ = {}));
export function customFieldCheckboxToJSON(customFieldCheckbox) {
    return JSON.stringify(CustomFieldCheckbox$outboundSchema.parse(customFieldCheckbox));
}
export function customFieldCheckboxFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldCheckbox$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldCheckbox' from JSON`);
}
//# sourceMappingURL=customfieldcheckbox.js.map