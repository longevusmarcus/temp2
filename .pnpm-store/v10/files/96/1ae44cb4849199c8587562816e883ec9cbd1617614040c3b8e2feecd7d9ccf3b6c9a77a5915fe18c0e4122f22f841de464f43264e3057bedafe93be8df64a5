/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Benefit$inboundSchema, Benefit$outboundSchema, } from "./benefit.js";
/** @internal */
export const WebhookBenefitUpdatedPayload$inboundSchema = z.object({
    type: z.literal("benefit.updated").optional(),
    data: Benefit$inboundSchema,
});
/** @internal */
export const WebhookBenefitUpdatedPayload$outboundSchema = z.object({
    type: z.literal("benefit.updated").default("benefit.updated"),
    data: Benefit$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookBenefitUpdatedPayload$;
(function (WebhookBenefitUpdatedPayload$) {
    /** @deprecated use `WebhookBenefitUpdatedPayload$inboundSchema` instead. */
    WebhookBenefitUpdatedPayload$.inboundSchema = WebhookBenefitUpdatedPayload$inboundSchema;
    /** @deprecated use `WebhookBenefitUpdatedPayload$outboundSchema` instead. */
    WebhookBenefitUpdatedPayload$.outboundSchema = WebhookBenefitUpdatedPayload$outboundSchema;
})(WebhookBenefitUpdatedPayload$ || (WebhookBenefitUpdatedPayload$ = {}));
export function webhookBenefitUpdatedPayloadToJSON(webhookBenefitUpdatedPayload) {
    return JSON.stringify(WebhookBenefitUpdatedPayload$outboundSchema.parse(webhookBenefitUpdatedPayload));
}
export function webhookBenefitUpdatedPayloadFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookBenefitUpdatedPayload$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookBenefitUpdatedPayload' from JSON`);
}
//# sourceMappingURL=webhookbenefitupdatedpayload.js.map