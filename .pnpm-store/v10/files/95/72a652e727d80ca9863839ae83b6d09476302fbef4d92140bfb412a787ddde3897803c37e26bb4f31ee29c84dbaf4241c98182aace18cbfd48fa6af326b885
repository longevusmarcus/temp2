import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { CustomFieldSelectProperties, CustomFieldSelectProperties$Outbound } from "./customfieldselectproperties.js";
export type CustomFieldUpdateSelectMetadata = string | number | boolean;
/**
 * Schema to update a custom field of type select.
 */
export type CustomFieldUpdateSelect = {
    metadata?: {
        [k: string]: string | number | boolean;
    } | null | undefined;
    name?: string | null | undefined;
    slug?: string | null | undefined;
    type?: "select" | undefined;
    properties?: CustomFieldSelectProperties | null | undefined;
};
/** @internal */
export declare const CustomFieldUpdateSelectMetadata$inboundSchema: z.ZodType<CustomFieldUpdateSelectMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomFieldUpdateSelectMetadata$Outbound = string | number | boolean;
/** @internal */
export declare const CustomFieldUpdateSelectMetadata$outboundSchema: z.ZodType<CustomFieldUpdateSelectMetadata$Outbound, z.ZodTypeDef, CustomFieldUpdateSelectMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldUpdateSelectMetadata$ {
    /** @deprecated use `CustomFieldUpdateSelectMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomFieldUpdateSelectMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomFieldUpdateSelectMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomFieldUpdateSelectMetadata$Outbound, z.ZodTypeDef, CustomFieldUpdateSelectMetadata>;
    /** @deprecated use `CustomFieldUpdateSelectMetadata$Outbound` instead. */
    type Outbound = CustomFieldUpdateSelectMetadata$Outbound;
}
export declare function customFieldUpdateSelectMetadataToJSON(customFieldUpdateSelectMetadata: CustomFieldUpdateSelectMetadata): string;
export declare function customFieldUpdateSelectMetadataFromJSON(jsonString: string): SafeParseResult<CustomFieldUpdateSelectMetadata, SDKValidationError>;
/** @internal */
export declare const CustomFieldUpdateSelect$inboundSchema: z.ZodType<CustomFieldUpdateSelect, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomFieldUpdateSelect$Outbound = {
    metadata?: {
        [k: string]: string | number | boolean;
    } | null | undefined;
    name?: string | null | undefined;
    slug?: string | null | undefined;
    type: "select";
    properties?: CustomFieldSelectProperties$Outbound | null | undefined;
};
/** @internal */
export declare const CustomFieldUpdateSelect$outboundSchema: z.ZodType<CustomFieldUpdateSelect$Outbound, z.ZodTypeDef, CustomFieldUpdateSelect>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomFieldUpdateSelect$ {
    /** @deprecated use `CustomFieldUpdateSelect$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomFieldUpdateSelect, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomFieldUpdateSelect$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomFieldUpdateSelect$Outbound, z.ZodTypeDef, CustomFieldUpdateSelect>;
    /** @deprecated use `CustomFieldUpdateSelect$Outbound` instead. */
    type Outbound = CustomFieldUpdateSelect$Outbound;
}
export declare function customFieldUpdateSelectToJSON(customFieldUpdateSelect: CustomFieldUpdateSelect): string;
export declare function customFieldUpdateSelectFromJSON(jsonString: string): SafeParseResult<CustomFieldUpdateSelect, SDKValidationError>;
//# sourceMappingURL=customfieldupdateselect.d.ts.map