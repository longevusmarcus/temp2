/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const RepositoriesGetRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const RepositoriesGetRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RepositoriesGetRequest$;
(function (RepositoriesGetRequest$) {
    /** @deprecated use `RepositoriesGetRequest$inboundSchema` instead. */
    RepositoriesGetRequest$.inboundSchema = RepositoriesGetRequest$inboundSchema;
    /** @deprecated use `RepositoriesGetRequest$outboundSchema` instead. */
    RepositoriesGetRequest$.outboundSchema = RepositoriesGetRequest$outboundSchema;
})(RepositoriesGetRequest$ || (RepositoriesGetRequest$ = {}));
export function repositoriesGetRequestToJSON(repositoriesGetRequest) {
    return JSON.stringify(RepositoriesGetRequest$outboundSchema.parse(repositoriesGetRequest));
}
export function repositoriesGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RepositoriesGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RepositoriesGetRequest' from JSON`);
}
//# sourceMappingURL=repositoriesget.js.map