/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const FilesDeleteRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const FilesDeleteRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilesDeleteRequest$;
(function (FilesDeleteRequest$) {
    /** @deprecated use `FilesDeleteRequest$inboundSchema` instead. */
    FilesDeleteRequest$.inboundSchema = FilesDeleteRequest$inboundSchema;
    /** @deprecated use `FilesDeleteRequest$outboundSchema` instead. */
    FilesDeleteRequest$.outboundSchema = FilesDeleteRequest$outboundSchema;
})(FilesDeleteRequest$ || (FilesDeleteRequest$ = {}));
export function filesDeleteRequestToJSON(filesDeleteRequest) {
    return JSON.stringify(FilesDeleteRequest$outboundSchema.parse(filesDeleteRequest));
}
export function filesDeleteRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilesDeleteRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilesDeleteRequest' from JSON`);
}
//# sourceMappingURL=filesdelete.js.map