/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { MeterQuantity$inboundSchema, MeterQuantity$outboundSchema, } from "./meterquantity.js";
/** @internal */
export const MeterQuantities$inboundSchema = z.object({
    quantities: z.array(MeterQuantity$inboundSchema),
});
/** @internal */
export const MeterQuantities$outboundSchema = z.object({
    quantities: z.array(MeterQuantity$outboundSchema),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var MeterQuantities$;
(function (MeterQuantities$) {
    /** @deprecated use `MeterQuantities$inboundSchema` instead. */
    MeterQuantities$.inboundSchema = MeterQuantities$inboundSchema;
    /** @deprecated use `MeterQuantities$outboundSchema` instead. */
    MeterQuantities$.outboundSchema = MeterQuantities$outboundSchema;
})(MeterQuantities$ || (MeterQuantities$ = {}));
export function meterQuantitiesToJSON(meterQuantities) {
    return JSON.stringify(MeterQuantities$outboundSchema.parse(meterQuantities));
}
export function meterQuantitiesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => MeterQuantities$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'MeterQuantities' from JSON`);
}
//# sourceMappingURL=meterquantities.js.map