/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomerPortalCustomersUpdateSecurity$inboundSchema = z.object({
    customer_session: z.string(),
}).transform((v) => {
    return remap$(v, {
        "customer_session": "customerSession",
    });
});
/** @internal */
export const CustomerPortalCustomersUpdateSecurity$outboundSchema = z.object({
    customerSession: z.string(),
}).transform((v) => {
    return remap$(v, {
        customerSession: "customer_session",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalCustomersUpdateSecurity$;
(function (CustomerPortalCustomersUpdateSecurity$) {
    /** @deprecated use `CustomerPortalCustomersUpdateSecurity$inboundSchema` instead. */
    CustomerPortalCustomersUpdateSecurity$.inboundSchema = CustomerPortalCustomersUpdateSecurity$inboundSchema;
    /** @deprecated use `CustomerPortalCustomersUpdateSecurity$outboundSchema` instead. */
    CustomerPortalCustomersUpdateSecurity$.outboundSchema = CustomerPortalCustomersUpdateSecurity$outboundSchema;
})(CustomerPortalCustomersUpdateSecurity$ || (CustomerPortalCustomersUpdateSecurity$ = {}));
export function customerPortalCustomersUpdateSecurityToJSON(customerPortalCustomersUpdateSecurity) {
    return JSON.stringify(CustomerPortalCustomersUpdateSecurity$outboundSchema.parse(customerPortalCustomersUpdateSecurity));
}
export function customerPortalCustomersUpdateSecurityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalCustomersUpdateSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalCustomersUpdateSecurity' from JSON`);
}
//# sourceMappingURL=customerportalcustomersupdate.js.map