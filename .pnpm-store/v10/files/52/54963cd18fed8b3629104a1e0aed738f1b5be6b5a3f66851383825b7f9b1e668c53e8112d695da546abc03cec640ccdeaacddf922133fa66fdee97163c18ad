"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckoutProductsCreate$ = exports.CheckoutProductsCreate$outboundSchema = exports.CheckoutProductsCreate$inboundSchema = exports.CheckoutProductsCreateCustomerMetadata$ = exports.CheckoutProductsCreateCustomerMetadata$outboundSchema = exports.CheckoutProductsCreateCustomerMetadata$inboundSchema = exports.CheckoutProductsCreateCustomFieldData$ = exports.CheckoutProductsCreateCustomFieldData$outboundSchema = exports.CheckoutProductsCreateCustomFieldData$inboundSchema = exports.CheckoutProductsCreateMetadata$ = exports.CheckoutProductsCreateMetadata$outboundSchema = exports.CheckoutProductsCreateMetadata$inboundSchema = void 0;
exports.checkoutProductsCreateMetadataToJSON = checkoutProductsCreateMetadataToJSON;
exports.checkoutProductsCreateMetadataFromJSON = checkoutProductsCreateMetadataFromJSON;
exports.checkoutProductsCreateCustomFieldDataToJSON = checkoutProductsCreateCustomFieldDataToJSON;
exports.checkoutProductsCreateCustomFieldDataFromJSON = checkoutProductsCreateCustomFieldDataFromJSON;
exports.checkoutProductsCreateCustomerMetadataToJSON = checkoutProductsCreateCustomerMetadataToJSON;
exports.checkoutProductsCreateCustomerMetadataFromJSON = checkoutProductsCreateCustomerMetadataFromJSON;
exports.checkoutProductsCreateToJSON = checkoutProductsCreateToJSON;
exports.checkoutProductsCreateFromJSON = checkoutProductsCreateFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const address_js_1 = require("./address.js");
/** @internal */
exports.CheckoutProductsCreateMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
exports.CheckoutProductsCreateMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckoutProductsCreateMetadata$;
(function (CheckoutProductsCreateMetadata$) {
    /** @deprecated use `CheckoutProductsCreateMetadata$inboundSchema` instead. */
    CheckoutProductsCreateMetadata$.inboundSchema = exports.CheckoutProductsCreateMetadata$inboundSchema;
    /** @deprecated use `CheckoutProductsCreateMetadata$outboundSchema` instead. */
    CheckoutProductsCreateMetadata$.outboundSchema = exports.CheckoutProductsCreateMetadata$outboundSchema;
})(CheckoutProductsCreateMetadata$ || (exports.CheckoutProductsCreateMetadata$ = CheckoutProductsCreateMetadata$ = {}));
function checkoutProductsCreateMetadataToJSON(checkoutProductsCreateMetadata) {
    return JSON.stringify(exports.CheckoutProductsCreateMetadata$outboundSchema.parse(checkoutProductsCreateMetadata));
}
function checkoutProductsCreateMetadataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CheckoutProductsCreateMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutProductsCreateMetadata' from JSON`);
}
/** @internal */
exports.CheckoutProductsCreateCustomFieldData$inboundSchema = z.union([
    z.string(),
    z.number().int(),
    z.boolean(),
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
]);
/** @internal */
exports.CheckoutProductsCreateCustomFieldData$outboundSchema = z.union([
    z.string(),
    z.number().int(),
    z.boolean(),
    z.date().transform(v => v.toISOString()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckoutProductsCreateCustomFieldData$;
(function (CheckoutProductsCreateCustomFieldData$) {
    /** @deprecated use `CheckoutProductsCreateCustomFieldData$inboundSchema` instead. */
    CheckoutProductsCreateCustomFieldData$.inboundSchema = exports.CheckoutProductsCreateCustomFieldData$inboundSchema;
    /** @deprecated use `CheckoutProductsCreateCustomFieldData$outboundSchema` instead. */
    CheckoutProductsCreateCustomFieldData$.outboundSchema = exports.CheckoutProductsCreateCustomFieldData$outboundSchema;
})(CheckoutProductsCreateCustomFieldData$ || (exports.CheckoutProductsCreateCustomFieldData$ = CheckoutProductsCreateCustomFieldData$ = {}));
function checkoutProductsCreateCustomFieldDataToJSON(checkoutProductsCreateCustomFieldData) {
    return JSON.stringify(exports.CheckoutProductsCreateCustomFieldData$outboundSchema.parse(checkoutProductsCreateCustomFieldData));
}
function checkoutProductsCreateCustomFieldDataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CheckoutProductsCreateCustomFieldData$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutProductsCreateCustomFieldData' from JSON`);
}
/** @internal */
exports.CheckoutProductsCreateCustomerMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
exports.CheckoutProductsCreateCustomerMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckoutProductsCreateCustomerMetadata$;
(function (CheckoutProductsCreateCustomerMetadata$) {
    /** @deprecated use `CheckoutProductsCreateCustomerMetadata$inboundSchema` instead. */
    CheckoutProductsCreateCustomerMetadata$.inboundSchema = exports.CheckoutProductsCreateCustomerMetadata$inboundSchema;
    /** @deprecated use `CheckoutProductsCreateCustomerMetadata$outboundSchema` instead. */
    CheckoutProductsCreateCustomerMetadata$.outboundSchema = exports.CheckoutProductsCreateCustomerMetadata$outboundSchema;
})(CheckoutProductsCreateCustomerMetadata$ || (exports.CheckoutProductsCreateCustomerMetadata$ = CheckoutProductsCreateCustomerMetadata$ = {}));
function checkoutProductsCreateCustomerMetadataToJSON(checkoutProductsCreateCustomerMetadata) {
    return JSON.stringify(exports.CheckoutProductsCreateCustomerMetadata$outboundSchema.parse(checkoutProductsCreateCustomerMetadata));
}
function checkoutProductsCreateCustomerMetadataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CheckoutProductsCreateCustomerMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutProductsCreateCustomerMetadata' from JSON`);
}
/** @internal */
exports.CheckoutProductsCreate$inboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    custom_field_data: z.record(z.nullable(z.union([
        z.string(),
        z.number().int(),
        z.boolean(),
        z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ]))).optional(),
    discount_id: z.nullable(z.string()).optional(),
    allow_discount_codes: z.boolean().default(true),
    amount: z.nullable(z.number().int()).optional(),
    customer_id: z.nullable(z.string()).optional(),
    customer_external_id: z.nullable(z.string()).optional(),
    customer_name: z.nullable(z.string()).optional(),
    customer_email: z.nullable(z.string()).optional(),
    customer_ip_address: z.nullable(z.string()).optional(),
    customer_billing_address: z.nullable(address_js_1.Address$inboundSchema).optional(),
    customer_tax_id: z.nullable(z.string()).optional(),
    customer_metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()])).optional(),
    subscription_id: z.nullable(z.string()).optional(),
    success_url: z.nullable(z.string()).optional(),
    embed_origin: z.nullable(z.string()).optional(),
    products: z.array(z.string()),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "custom_field_data": "customFieldData",
        "discount_id": "discountId",
        "allow_discount_codes": "allowDiscountCodes",
        "customer_id": "customerId",
        "customer_external_id": "customerExternalId",
        "customer_name": "customerName",
        "customer_email": "customerEmail",
        "customer_ip_address": "customerIpAddress",
        "customer_billing_address": "customerBillingAddress",
        "customer_tax_id": "customerTaxId",
        "customer_metadata": "customerMetadata",
        "subscription_id": "subscriptionId",
        "success_url": "successUrl",
        "embed_origin": "embedOrigin",
    });
});
/** @internal */
exports.CheckoutProductsCreate$outboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    customFieldData: z.record(z.nullable(z.union([
        z.string(),
        z.number().int(),
        z.boolean(),
        z.date().transform(v => v.toISOString()),
    ]))).optional(),
    discountId: z.nullable(z.string()).optional(),
    allowDiscountCodes: z.boolean().default(true),
    amount: z.nullable(z.number().int()).optional(),
    customerId: z.nullable(z.string()).optional(),
    customerExternalId: z.nullable(z.string()).optional(),
    customerName: z.nullable(z.string()).optional(),
    customerEmail: z.nullable(z.string()).optional(),
    customerIpAddress: z.nullable(z.string()).optional(),
    customerBillingAddress: z.nullable(address_js_1.Address$outboundSchema).optional(),
    customerTaxId: z.nullable(z.string()).optional(),
    customerMetadata: z.record(z.union([z.string(), z.number().int(), z.boolean()])).optional(),
    subscriptionId: z.nullable(z.string()).optional(),
    successUrl: z.nullable(z.string()).optional(),
    embedOrigin: z.nullable(z.string()).optional(),
    products: z.array(z.string()),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        customFieldData: "custom_field_data",
        discountId: "discount_id",
        allowDiscountCodes: "allow_discount_codes",
        customerId: "customer_id",
        customerExternalId: "customer_external_id",
        customerName: "customer_name",
        customerEmail: "customer_email",
        customerIpAddress: "customer_ip_address",
        customerBillingAddress: "customer_billing_address",
        customerTaxId: "customer_tax_id",
        customerMetadata: "customer_metadata",
        subscriptionId: "subscription_id",
        successUrl: "success_url",
        embedOrigin: "embed_origin",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckoutProductsCreate$;
(function (CheckoutProductsCreate$) {
    /** @deprecated use `CheckoutProductsCreate$inboundSchema` instead. */
    CheckoutProductsCreate$.inboundSchema = exports.CheckoutProductsCreate$inboundSchema;
    /** @deprecated use `CheckoutProductsCreate$outboundSchema` instead. */
    CheckoutProductsCreate$.outboundSchema = exports.CheckoutProductsCreate$outboundSchema;
})(CheckoutProductsCreate$ || (exports.CheckoutProductsCreate$ = CheckoutProductsCreate$ = {}));
function checkoutProductsCreateToJSON(checkoutProductsCreate) {
    return JSON.stringify(exports.CheckoutProductsCreate$outboundSchema.parse(checkoutProductsCreate));
}
function checkoutProductsCreateFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CheckoutProductsCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutProductsCreate' from JSON`);
}
//# sourceMappingURL=checkoutproductscreate.js.map