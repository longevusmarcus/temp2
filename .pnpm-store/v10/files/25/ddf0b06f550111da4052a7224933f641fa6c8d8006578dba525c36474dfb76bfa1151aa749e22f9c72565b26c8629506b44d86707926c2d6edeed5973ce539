/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const RevokeTokenResponse$inboundSchema = z.object({});
/** @internal */
export const RevokeTokenResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RevokeTokenResponse$;
(function (RevokeTokenResponse$) {
    /** @deprecated use `RevokeTokenResponse$inboundSchema` instead. */
    RevokeTokenResponse$.inboundSchema = RevokeTokenResponse$inboundSchema;
    /** @deprecated use `RevokeTokenResponse$outboundSchema` instead. */
    RevokeTokenResponse$.outboundSchema = RevokeTokenResponse$outboundSchema;
})(RevokeTokenResponse$ || (RevokeTokenResponse$ = {}));
export function revokeTokenResponseToJSON(revokeTokenResponse) {
    return JSON.stringify(RevokeTokenResponse$outboundSchema.parse(revokeTokenResponse));
}
export function revokeTokenResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RevokeTokenResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RevokeTokenResponse' from JSON`);
}
//# sourceMappingURL=revoketokenresponse.js.map