import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Schema to create a free price.
 */
export type ProductPriceFreeCreate = {
    amountType?: "free" | undefined;
};
/** @internal */
export declare const ProductPriceFreeCreate$inboundSchema: z.ZodType<ProductPriceFreeCreate, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductPriceFreeCreate$Outbound = {
    amount_type: "free";
};
/** @internal */
export declare const ProductPriceFreeCreate$outboundSchema: z.ZodType<ProductPriceFreeCreate$Outbound, z.ZodTypeDef, ProductPriceFreeCreate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductPriceFreeCreate$ {
    /** @deprecated use `ProductPriceFreeCreate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductPriceFreeCreate, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductPriceFreeCreate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductPriceFreeCreate$Outbound, z.ZodTypeDef, ProductPriceFreeCreate>;
    /** @deprecated use `ProductPriceFreeCreate$Outbound` instead. */
    type Outbound = ProductPriceFreeCreate$Outbound;
}
export declare function productPriceFreeCreateToJSON(productPriceFreeCreate: ProductPriceFreeCreate): string;
export declare function productPriceFreeCreateFromJSON(jsonString: string): SafeParseResult<ProductPriceFreeCreate, SDKValidationError>;
//# sourceMappingURL=productpricefreecreate.d.ts.map