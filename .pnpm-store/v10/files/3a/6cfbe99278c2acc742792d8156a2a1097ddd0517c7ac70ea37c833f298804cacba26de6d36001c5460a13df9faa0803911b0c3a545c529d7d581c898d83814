/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CurrencyAmount$inboundSchema = z.object({
    currency: z.string(),
    amount: z.number().int(),
});
/** @internal */
export const CurrencyAmount$outboundSchema = z.object({
    currency: z.string(),
    amount: z.number().int(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CurrencyAmount$;
(function (CurrencyAmount$) {
    /** @deprecated use `CurrencyAmount$inboundSchema` instead. */
    CurrencyAmount$.inboundSchema = CurrencyAmount$inboundSchema;
    /** @deprecated use `CurrencyAmount$outboundSchema` instead. */
    CurrencyAmount$.outboundSchema = CurrencyAmount$outboundSchema;
})(CurrencyAmount$ || (CurrencyAmount$ = {}));
export function currencyAmountToJSON(currencyAmount) {
    return JSON.stringify(CurrencyAmount$outboundSchema.parse(currencyAmount));
}
export function currencyAmountFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CurrencyAmount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CurrencyAmount' from JSON`);
}
//# sourceMappingURL=currencyamount.js.map