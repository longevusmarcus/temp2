/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { oauth2Authorize } from "../funcs/oauth2Authorize.js";
import { oauth2Introspect } from "../funcs/oauth2Introspect.js";
import { oauth2Revoke } from "../funcs/oauth2Revoke.js";
import { oauth2Token } from "../funcs/oauth2Token.js";
import { oauth2Userinfo } from "../funcs/oauth2Userinfo.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
import { Clients } from "./clients.js";
export class Oauth2 extends ClientSDK {
    get clients() {
        return (this._clients ?? (this._clients = new Clients(this._options)));
    }
    /**
     * Authorize
     */
    async authorize(options) {
        return unwrapAsync(oauth2Authorize(this, options));
    }
    /**
     * Request Token
     *
     * @remarks
     * Request an access token using a valid grant.
     */
    async token(request, options) {
        return unwrapAsync(oauth2Token(this, request, options));
    }
    /**
     * Revoke Token
     *
     * @remarks
     * Revoke an access token or a refresh token.
     */
    async revoke(request, options) {
        return unwrapAsync(oauth2Revoke(this, request, options));
    }
    /**
     * Introspect Token
     *
     * @remarks
     * Get information about an access token.
     */
    async introspect(request, options) {
        return unwrapAsync(oauth2Introspect(this, request, options));
    }
    /**
     * Get User Info
     *
     * @remarks
     * Get information about the authenticated user.
     */
    async userinfo(options) {
        return unwrapAsync(oauth2Userinfo(this, options));
    }
}
//# sourceMappingURL=oauth2.js.map