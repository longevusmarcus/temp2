"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerPortalSubscriptionsListResponse$ = exports.CustomerPortalSubscriptionsListResponse$outboundSchema = exports.CustomerPortalSubscriptionsListResponse$inboundSchema = exports.CustomerPortalSubscriptionsListRequest$ = exports.CustomerPortalSubscriptionsListRequest$outboundSchema = exports.CustomerPortalSubscriptionsListRequest$inboundSchema = exports.CustomerPortalSubscriptionsListQueryParamProductIDFilter$ = exports.CustomerPortalSubscriptionsListQueryParamProductIDFilter$outboundSchema = exports.CustomerPortalSubscriptionsListQueryParamProductIDFilter$inboundSchema = exports.CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$ = exports.CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$outboundSchema = exports.CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$inboundSchema = exports.CustomerPortalSubscriptionsListSecurity$ = exports.CustomerPortalSubscriptionsListSecurity$outboundSchema = exports.CustomerPortalSubscriptionsListSecurity$inboundSchema = void 0;
exports.customerPortalSubscriptionsListSecurityToJSON = customerPortalSubscriptionsListSecurityToJSON;
exports.customerPortalSubscriptionsListSecurityFromJSON = customerPortalSubscriptionsListSecurityFromJSON;
exports.customerPortalSubscriptionsListQueryParamOrganizationIDFilterToJSON = customerPortalSubscriptionsListQueryParamOrganizationIDFilterToJSON;
exports.customerPortalSubscriptionsListQueryParamOrganizationIDFilterFromJSON = customerPortalSubscriptionsListQueryParamOrganizationIDFilterFromJSON;
exports.customerPortalSubscriptionsListQueryParamProductIDFilterToJSON = customerPortalSubscriptionsListQueryParamProductIDFilterToJSON;
exports.customerPortalSubscriptionsListQueryParamProductIDFilterFromJSON = customerPortalSubscriptionsListQueryParamProductIDFilterFromJSON;
exports.customerPortalSubscriptionsListRequestToJSON = customerPortalSubscriptionsListRequestToJSON;
exports.customerPortalSubscriptionsListRequestFromJSON = customerPortalSubscriptionsListRequestFromJSON;
exports.customerPortalSubscriptionsListResponseToJSON = customerPortalSubscriptionsListResponseToJSON;
exports.customerPortalSubscriptionsListResponseFromJSON = customerPortalSubscriptionsListResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const customersubscriptionsortproperty_js_1 = require("../components/customersubscriptionsortproperty.js");
const listresourcecustomersubscription_js_1 = require("../components/listresourcecustomersubscription.js");
/** @internal */
exports.CustomerPortalSubscriptionsListSecurity$inboundSchema = z.object({
    customer_session: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "customer_session": "customerSession",
    });
});
/** @internal */
exports.CustomerPortalSubscriptionsListSecurity$outboundSchema = z.object({
    customerSession: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        customerSession: "customer_session",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerPortalSubscriptionsListSecurity$;
(function (CustomerPortalSubscriptionsListSecurity$) {
    /** @deprecated use `CustomerPortalSubscriptionsListSecurity$inboundSchema` instead. */
    CustomerPortalSubscriptionsListSecurity$.inboundSchema = exports.CustomerPortalSubscriptionsListSecurity$inboundSchema;
    /** @deprecated use `CustomerPortalSubscriptionsListSecurity$outboundSchema` instead. */
    CustomerPortalSubscriptionsListSecurity$.outboundSchema = exports.CustomerPortalSubscriptionsListSecurity$outboundSchema;
})(CustomerPortalSubscriptionsListSecurity$ || (exports.CustomerPortalSubscriptionsListSecurity$ = CustomerPortalSubscriptionsListSecurity$ = {}));
function customerPortalSubscriptionsListSecurityToJSON(customerPortalSubscriptionsListSecurity) {
    return JSON.stringify(exports.CustomerPortalSubscriptionsListSecurity$outboundSchema.parse(customerPortalSubscriptionsListSecurity));
}
function customerPortalSubscriptionsListSecurityFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerPortalSubscriptionsListSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalSubscriptionsListSecurity' from JSON`);
}
/** @internal */
exports.CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$;
(function (CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$.inboundSchema = exports.CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$.outboundSchema = exports.CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$outboundSchema;
})(CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$ || (exports.CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$ = CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$ = {}));
function customerPortalSubscriptionsListQueryParamOrganizationIDFilterToJSON(customerPortalSubscriptionsListQueryParamOrganizationIDFilter) {
    return JSON.stringify(exports.CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$outboundSchema
        .parse(customerPortalSubscriptionsListQueryParamOrganizationIDFilter));
}
function customerPortalSubscriptionsListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
exports.CustomerPortalSubscriptionsListQueryParamProductIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.CustomerPortalSubscriptionsListQueryParamProductIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerPortalSubscriptionsListQueryParamProductIDFilter$;
(function (CustomerPortalSubscriptionsListQueryParamProductIDFilter$) {
    /** @deprecated use `CustomerPortalSubscriptionsListQueryParamProductIDFilter$inboundSchema` instead. */
    CustomerPortalSubscriptionsListQueryParamProductIDFilter$.inboundSchema = exports.CustomerPortalSubscriptionsListQueryParamProductIDFilter$inboundSchema;
    /** @deprecated use `CustomerPortalSubscriptionsListQueryParamProductIDFilter$outboundSchema` instead. */
    CustomerPortalSubscriptionsListQueryParamProductIDFilter$.outboundSchema = exports.CustomerPortalSubscriptionsListQueryParamProductIDFilter$outboundSchema;
})(CustomerPortalSubscriptionsListQueryParamProductIDFilter$ || (exports.CustomerPortalSubscriptionsListQueryParamProductIDFilter$ = CustomerPortalSubscriptionsListQueryParamProductIDFilter$ = {}));
function customerPortalSubscriptionsListQueryParamProductIDFilterToJSON(customerPortalSubscriptionsListQueryParamProductIDFilter) {
    return JSON.stringify(exports.CustomerPortalSubscriptionsListQueryParamProductIDFilter$outboundSchema
        .parse(customerPortalSubscriptionsListQueryParamProductIDFilter));
}
function customerPortalSubscriptionsListQueryParamProductIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerPortalSubscriptionsListQueryParamProductIDFilter$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'CustomerPortalSubscriptionsListQueryParamProductIDFilter' from JSON`);
}
/** @internal */
exports.CustomerPortalSubscriptionsListRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    product_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    active: z.nullable(z.boolean()).optional(),
    query: z.nullable(z.string()).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(customersubscriptionsortproperty_js_1.CustomerSubscriptionSortProperty$inboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
        "product_id": "productId",
    });
});
/** @internal */
exports.CustomerPortalSubscriptionsListRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    productId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    active: z.nullable(z.boolean()).optional(),
    query: z.nullable(z.string()).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(customersubscriptionsortproperty_js_1.CustomerSubscriptionSortProperty$outboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
        productId: "product_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerPortalSubscriptionsListRequest$;
(function (CustomerPortalSubscriptionsListRequest$) {
    /** @deprecated use `CustomerPortalSubscriptionsListRequest$inboundSchema` instead. */
    CustomerPortalSubscriptionsListRequest$.inboundSchema = exports.CustomerPortalSubscriptionsListRequest$inboundSchema;
    /** @deprecated use `CustomerPortalSubscriptionsListRequest$outboundSchema` instead. */
    CustomerPortalSubscriptionsListRequest$.outboundSchema = exports.CustomerPortalSubscriptionsListRequest$outboundSchema;
})(CustomerPortalSubscriptionsListRequest$ || (exports.CustomerPortalSubscriptionsListRequest$ = CustomerPortalSubscriptionsListRequest$ = {}));
function customerPortalSubscriptionsListRequestToJSON(customerPortalSubscriptionsListRequest) {
    return JSON.stringify(exports.CustomerPortalSubscriptionsListRequest$outboundSchema.parse(customerPortalSubscriptionsListRequest));
}
function customerPortalSubscriptionsListRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerPortalSubscriptionsListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalSubscriptionsListRequest' from JSON`);
}
/** @internal */
exports.CustomerPortalSubscriptionsListResponse$inboundSchema = z.object({
    Result: listresourcecustomersubscription_js_1.ListResourceCustomerSubscription$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Result": "result",
    });
});
/** @internal */
exports.CustomerPortalSubscriptionsListResponse$outboundSchema = z.object({
    result: listresourcecustomersubscription_js_1.ListResourceCustomerSubscription$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerPortalSubscriptionsListResponse$;
(function (CustomerPortalSubscriptionsListResponse$) {
    /** @deprecated use `CustomerPortalSubscriptionsListResponse$inboundSchema` instead. */
    CustomerPortalSubscriptionsListResponse$.inboundSchema = exports.CustomerPortalSubscriptionsListResponse$inboundSchema;
    /** @deprecated use `CustomerPortalSubscriptionsListResponse$outboundSchema` instead. */
    CustomerPortalSubscriptionsListResponse$.outboundSchema = exports.CustomerPortalSubscriptionsListResponse$outboundSchema;
})(CustomerPortalSubscriptionsListResponse$ || (exports.CustomerPortalSubscriptionsListResponse$ = CustomerPortalSubscriptionsListResponse$ = {}));
function customerPortalSubscriptionsListResponseToJSON(customerPortalSubscriptionsListResponse) {
    return JSON.stringify(exports.CustomerPortalSubscriptionsListResponse$outboundSchema.parse(customerPortalSubscriptionsListResponse));
}
function customerPortalSubscriptionsListResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerPortalSubscriptionsListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalSubscriptionsListResponse' from JSON`);
}
//# sourceMappingURL=customerportalsubscriptionslist.js.map