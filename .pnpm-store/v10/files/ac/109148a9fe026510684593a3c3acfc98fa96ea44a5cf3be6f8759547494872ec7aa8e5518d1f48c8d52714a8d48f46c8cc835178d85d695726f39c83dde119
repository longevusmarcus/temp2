/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { CustomerSubscriptionCancel$inboundSchema, CustomerSubscriptionCancel$outboundSchema, } from "./customersubscriptioncancel.js";
import { CustomerSubscriptionUpdateProduct$inboundSchema, CustomerSubscriptionUpdateProduct$outboundSchema, } from "./customersubscriptionupdateproduct.js";
/** @internal */
export const CustomerSubscriptionUpdate$inboundSchema = z.union([
    CustomerSubscriptionUpdateProduct$inboundSchema,
    CustomerSubscriptionCancel$inboundSchema,
]);
/** @internal */
export const CustomerSubscriptionUpdate$outboundSchema = z.union([
    CustomerSubscriptionUpdateProduct$outboundSchema,
    CustomerSubscriptionCancel$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerSubscriptionUpdate$;
(function (CustomerSubscriptionUpdate$) {
    /** @deprecated use `CustomerSubscriptionUpdate$inboundSchema` instead. */
    CustomerSubscriptionUpdate$.inboundSchema = CustomerSubscriptionUpdate$inboundSchema;
    /** @deprecated use `CustomerSubscriptionUpdate$outboundSchema` instead. */
    CustomerSubscriptionUpdate$.outboundSchema = CustomerSubscriptionUpdate$outboundSchema;
})(CustomerSubscriptionUpdate$ || (CustomerSubscriptionUpdate$ = {}));
export function customerSubscriptionUpdateToJSON(customerSubscriptionUpdate) {
    return JSON.stringify(CustomerSubscriptionUpdate$outboundSchema.parse(customerSubscriptionUpdate));
}
export function customerSubscriptionUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerSubscriptionUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerSubscriptionUpdate' from JSON`);
}
//# sourceMappingURL=customersubscriptionupdate.js.map