/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const BenefitGitHubRepositorySubscriberProperties$inboundSchema = z.object({
    repository_owner: z.string(),
    repository_name: z.string(),
}).transform((v) => {
    return remap$(v, {
        "repository_owner": "repositoryOwner",
        "repository_name": "repositoryName",
    });
});
/** @internal */
export const BenefitGitHubRepositorySubscriberProperties$outboundSchema = z.object({
    repositoryOwner: z.string(),
    repositoryName: z.string(),
}).transform((v) => {
    return remap$(v, {
        repositoryOwner: "repository_owner",
        repositoryName: "repository_name",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitGitHubRepositorySubscriberProperties$;
(function (BenefitGitHubRepositorySubscriberProperties$) {
    /** @deprecated use `BenefitGitHubRepositorySubscriberProperties$inboundSchema` instead. */
    BenefitGitHubRepositorySubscriberProperties$.inboundSchema = BenefitGitHubRepositorySubscriberProperties$inboundSchema;
    /** @deprecated use `BenefitGitHubRepositorySubscriberProperties$outboundSchema` instead. */
    BenefitGitHubRepositorySubscriberProperties$.outboundSchema = BenefitGitHubRepositorySubscriberProperties$outboundSchema;
})(BenefitGitHubRepositorySubscriberProperties$ || (BenefitGitHubRepositorySubscriberProperties$ = {}));
export function benefitGitHubRepositorySubscriberPropertiesToJSON(benefitGitHubRepositorySubscriberProperties) {
    return JSON.stringify(BenefitGitHubRepositorySubscriberProperties$outboundSchema.parse(benefitGitHubRepositorySubscriberProperties));
}
export function benefitGitHubRepositorySubscriberPropertiesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitGitHubRepositorySubscriberProperties$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitGitHubRepositorySubscriberProperties' from JSON`);
}
//# sourceMappingURL=benefitgithubrepositorysubscriberproperties.js.map