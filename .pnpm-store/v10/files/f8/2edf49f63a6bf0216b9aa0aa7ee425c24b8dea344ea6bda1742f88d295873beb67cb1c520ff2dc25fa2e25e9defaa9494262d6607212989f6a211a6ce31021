/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { DownloadableRead$inboundSchema, DownloadableRead$outboundSchema, } from "./downloadableread.js";
import { Pagination$inboundSchema, Pagination$outboundSchema, } from "./pagination.js";
/** @internal */
export const ListResourceDownloadableRead$inboundSchema = z.object({
    items: z.array(DownloadableRead$inboundSchema),
    pagination: Pagination$inboundSchema,
});
/** @internal */
export const ListResourceDownloadableRead$outboundSchema = z.object({
    items: z.array(DownloadableRead$outboundSchema),
    pagination: Pagination$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListResourceDownloadableRead$;
(function (ListResourceDownloadableRead$) {
    /** @deprecated use `ListResourceDownloadableRead$inboundSchema` instead. */
    ListResourceDownloadableRead$.inboundSchema = ListResourceDownloadableRead$inboundSchema;
    /** @deprecated use `ListResourceDownloadableRead$outboundSchema` instead. */
    ListResourceDownloadableRead$.outboundSchema = ListResourceDownloadableRead$outboundSchema;
})(ListResourceDownloadableRead$ || (ListResourceDownloadableRead$ = {}));
export function listResourceDownloadableReadToJSON(listResourceDownloadableRead) {
    return JSON.stringify(ListResourceDownloadableRead$outboundSchema.parse(listResourceDownloadableRead));
}
export function listResourceDownloadableReadFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListResourceDownloadableRead$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListResourceDownloadableRead' from JSON`);
}
//# sourceMappingURL=listresourcedownloadableread.js.map