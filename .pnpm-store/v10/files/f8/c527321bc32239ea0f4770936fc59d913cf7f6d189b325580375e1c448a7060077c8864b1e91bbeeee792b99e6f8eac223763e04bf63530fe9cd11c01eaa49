/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Subscription$inboundSchema, Subscription$outboundSchema, } from "./subscription.js";
/** @internal */
export const WebhookSubscriptionUpdatedPayload$inboundSchema = z.object({
    type: z.literal("subscription.updated").optional(),
    data: Subscription$inboundSchema,
});
/** @internal */
export const WebhookSubscriptionUpdatedPayload$outboundSchema = z.object({
    type: z.literal("subscription.updated").default("subscription.updated"),
    data: Subscription$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookSubscriptionUpdatedPayload$;
(function (WebhookSubscriptionUpdatedPayload$) {
    /** @deprecated use `WebhookSubscriptionUpdatedPayload$inboundSchema` instead. */
    WebhookSubscriptionUpdatedPayload$.inboundSchema = WebhookSubscriptionUpdatedPayload$inboundSchema;
    /** @deprecated use `WebhookSubscriptionUpdatedPayload$outboundSchema` instead. */
    WebhookSubscriptionUpdatedPayload$.outboundSchema = WebhookSubscriptionUpdatedPayload$outboundSchema;
})(WebhookSubscriptionUpdatedPayload$ || (WebhookSubscriptionUpdatedPayload$ = {}));
export function webhookSubscriptionUpdatedPayloadToJSON(webhookSubscriptionUpdatedPayload) {
    return JSON.stringify(WebhookSubscriptionUpdatedPayload$outboundSchema.parse(webhookSubscriptionUpdatedPayload));
}
export function webhookSubscriptionUpdatedPayloadFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookSubscriptionUpdatedPayload$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookSubscriptionUpdatedPayload' from JSON`);
}
//# sourceMappingURL=webhooksubscriptionupdatedpayload.js.map