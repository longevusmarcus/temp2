"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerPortalLicenseKeysListResponse$ = exports.CustomerPortalLicenseKeysListResponse$outboundSchema = exports.CustomerPortalLicenseKeysListResponse$inboundSchema = exports.CustomerPortalLicenseKeysListRequest$ = exports.CustomerPortalLicenseKeysListRequest$outboundSchema = exports.CustomerPortalLicenseKeysListRequest$inboundSchema = exports.CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$ = exports.CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$outboundSchema = exports.CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$inboundSchema = exports.CustomerPortalLicenseKeysListSecurity$ = exports.CustomerPortalLicenseKeysListSecurity$outboundSchema = exports.CustomerPortalLicenseKeysListSecurity$inboundSchema = void 0;
exports.customerPortalLicenseKeysListSecurityToJSON = customerPortalLicenseKeysListSecurityToJSON;
exports.customerPortalLicenseKeysListSecurityFromJSON = customerPortalLicenseKeysListSecurityFromJSON;
exports.customerPortalLicenseKeysListQueryParamOrganizationIDFilterToJSON = customerPortalLicenseKeysListQueryParamOrganizationIDFilterToJSON;
exports.customerPortalLicenseKeysListQueryParamOrganizationIDFilterFromJSON = customerPortalLicenseKeysListQueryParamOrganizationIDFilterFromJSON;
exports.customerPortalLicenseKeysListRequestToJSON = customerPortalLicenseKeysListRequestToJSON;
exports.customerPortalLicenseKeysListRequestFromJSON = customerPortalLicenseKeysListRequestFromJSON;
exports.customerPortalLicenseKeysListResponseToJSON = customerPortalLicenseKeysListResponseToJSON;
exports.customerPortalLicenseKeysListResponseFromJSON = customerPortalLicenseKeysListResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const listresourcelicensekeyread_js_1 = require("../components/listresourcelicensekeyread.js");
/** @internal */
exports.CustomerPortalLicenseKeysListSecurity$inboundSchema = z.object({
    customer_session: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "customer_session": "customerSession",
    });
});
/** @internal */
exports.CustomerPortalLicenseKeysListSecurity$outboundSchema = z.object({
    customerSession: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        customerSession: "customer_session",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerPortalLicenseKeysListSecurity$;
(function (CustomerPortalLicenseKeysListSecurity$) {
    /** @deprecated use `CustomerPortalLicenseKeysListSecurity$inboundSchema` instead. */
    CustomerPortalLicenseKeysListSecurity$.inboundSchema = exports.CustomerPortalLicenseKeysListSecurity$inboundSchema;
    /** @deprecated use `CustomerPortalLicenseKeysListSecurity$outboundSchema` instead. */
    CustomerPortalLicenseKeysListSecurity$.outboundSchema = exports.CustomerPortalLicenseKeysListSecurity$outboundSchema;
})(CustomerPortalLicenseKeysListSecurity$ || (exports.CustomerPortalLicenseKeysListSecurity$ = CustomerPortalLicenseKeysListSecurity$ = {}));
function customerPortalLicenseKeysListSecurityToJSON(customerPortalLicenseKeysListSecurity) {
    return JSON.stringify(exports.CustomerPortalLicenseKeysListSecurity$outboundSchema.parse(customerPortalLicenseKeysListSecurity));
}
function customerPortalLicenseKeysListSecurityFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerPortalLicenseKeysListSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalLicenseKeysListSecurity' from JSON`);
}
/** @internal */
exports.CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$;
(function (CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$.inboundSchema = exports.CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$.outboundSchema = exports.CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$outboundSchema;
})(CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$ || (exports.CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$ = CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$ = {}));
function customerPortalLicenseKeysListQueryParamOrganizationIDFilterToJSON(customerPortalLicenseKeysListQueryParamOrganizationIDFilter) {
    return JSON.stringify(exports.CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$outboundSchema
        .parse(customerPortalLicenseKeysListQueryParamOrganizationIDFilter));
}
function customerPortalLicenseKeysListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'CustomerPortalLicenseKeysListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
exports.CustomerPortalLicenseKeysListRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    benefit_id: z.nullable(z.string()).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
        "benefit_id": "benefitId",
    });
});
/** @internal */
exports.CustomerPortalLicenseKeysListRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    benefitId: z.nullable(z.string()).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
        benefitId: "benefit_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerPortalLicenseKeysListRequest$;
(function (CustomerPortalLicenseKeysListRequest$) {
    /** @deprecated use `CustomerPortalLicenseKeysListRequest$inboundSchema` instead. */
    CustomerPortalLicenseKeysListRequest$.inboundSchema = exports.CustomerPortalLicenseKeysListRequest$inboundSchema;
    /** @deprecated use `CustomerPortalLicenseKeysListRequest$outboundSchema` instead. */
    CustomerPortalLicenseKeysListRequest$.outboundSchema = exports.CustomerPortalLicenseKeysListRequest$outboundSchema;
})(CustomerPortalLicenseKeysListRequest$ || (exports.CustomerPortalLicenseKeysListRequest$ = CustomerPortalLicenseKeysListRequest$ = {}));
function customerPortalLicenseKeysListRequestToJSON(customerPortalLicenseKeysListRequest) {
    return JSON.stringify(exports.CustomerPortalLicenseKeysListRequest$outboundSchema.parse(customerPortalLicenseKeysListRequest));
}
function customerPortalLicenseKeysListRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerPortalLicenseKeysListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalLicenseKeysListRequest' from JSON`);
}
/** @internal */
exports.CustomerPortalLicenseKeysListResponse$inboundSchema = z.object({
    Result: listresourcelicensekeyread_js_1.ListResourceLicenseKeyRead$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Result": "result",
    });
});
/** @internal */
exports.CustomerPortalLicenseKeysListResponse$outboundSchema = z.object({
    result: listresourcelicensekeyread_js_1.ListResourceLicenseKeyRead$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerPortalLicenseKeysListResponse$;
(function (CustomerPortalLicenseKeysListResponse$) {
    /** @deprecated use `CustomerPortalLicenseKeysListResponse$inboundSchema` instead. */
    CustomerPortalLicenseKeysListResponse$.inboundSchema = exports.CustomerPortalLicenseKeysListResponse$inboundSchema;
    /** @deprecated use `CustomerPortalLicenseKeysListResponse$outboundSchema` instead. */
    CustomerPortalLicenseKeysListResponse$.outboundSchema = exports.CustomerPortalLicenseKeysListResponse$outboundSchema;
})(CustomerPortalLicenseKeysListResponse$ || (exports.CustomerPortalLicenseKeysListResponse$ = CustomerPortalLicenseKeysListResponse$ = {}));
function customerPortalLicenseKeysListResponseToJSON(customerPortalLicenseKeysListResponse) {
    return JSON.stringify(exports.CustomerPortalLicenseKeysListResponse$outboundSchema.parse(customerPortalLicenseKeysListResponse));
}
function customerPortalLicenseKeysListResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerPortalLicenseKeysListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalLicenseKeysListResponse' from JSON`);
}
//# sourceMappingURL=customerportallicensekeyslist.js.map