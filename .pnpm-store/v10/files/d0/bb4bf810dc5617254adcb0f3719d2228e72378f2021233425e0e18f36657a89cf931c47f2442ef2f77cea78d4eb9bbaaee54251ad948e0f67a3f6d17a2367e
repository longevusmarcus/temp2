import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CustomerBenefitGrantLicenseKeysUpdate = {
    benefitType?: "license_keys" | undefined;
};
/** @internal */
export declare const CustomerBenefitGrantLicenseKeysUpdate$inboundSchema: z.ZodType<CustomerBenefitGrantLicenseKeysUpdate, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerBenefitGrantLicenseKeysUpdate$Outbound = {
    benefit_type: "license_keys";
};
/** @internal */
export declare const CustomerBenefitGrantLicenseKeysUpdate$outboundSchema: z.ZodType<CustomerBenefitGrantLicenseKeysUpdate$Outbound, z.ZodTypeDef, CustomerBenefitGrantLicenseKeysUpdate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerBenefitGrantLicenseKeysUpdate$ {
    /** @deprecated use `CustomerBenefitGrantLicenseKeysUpdate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerBenefitGrantLicenseKeysUpdate, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerBenefitGrantLicenseKeysUpdate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerBenefitGrantLicenseKeysUpdate$Outbound, z.ZodTypeDef, CustomerBenefitGrantLicenseKeysUpdate>;
    /** @deprecated use `CustomerBenefitGrantLicenseKeysUpdate$Outbound` instead. */
    type Outbound = CustomerBenefitGrantLicenseKeysUpdate$Outbound;
}
export declare function customerBenefitGrantLicenseKeysUpdateToJSON(customerBenefitGrantLicenseKeysUpdate: CustomerBenefitGrantLicenseKeysUpdate): string;
export declare function customerBenefitGrantLicenseKeysUpdateFromJSON(jsonString: string): SafeParseResult<CustomerBenefitGrantLicenseKeysUpdate, SDKValidationError>;
//# sourceMappingURL=customerbenefitgrantlicensekeysupdate.d.ts.map