import { PolarCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import { OrderInvoice } from "../models/components/orderinvoice.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/errors/httpclienterrors.js";
import { HTTPValidationError } from "../models/errors/httpvalidationerror.js";
import { ResourceNotFound } from "../models/errors/resourcenotfound.js";
import { SDKError } from "../models/errors/sdkerror.js";
import { SDKValidationError } from "../models/errors/sdkvalidationerror.js";
import { OrdersInvoiceRequest } from "../models/operations/ordersinvoice.js";
import { APIPromise } from "../types/async.js";
import { Result } from "../types/fp.js";
/**
 * Get Order Invoice
 *
 * @remarks
 * Get an order's invoice data.
 *
 * **Scopes**: `orders:read`
 */
export declare function ordersInvoice(client: PolarCore, request: OrdersInvoiceRequest, options?: RequestOptions): APIPromise<Result<OrderInvoice, ResourceNotFound | HTTPValidationError | SDKError | SDKValidationError | UnexpectedClientError | InvalidRequestError | RequestAbortedError | RequestTimeoutError | ConnectionError>>;
//# sourceMappingURL=ordersInvoice.d.ts.map