"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolarCustomers = void 0;
const customerPortalCustomersAddPaymentMethod_js_1 = require("../funcs/customerPortalCustomersAddPaymentMethod.js");
const customerPortalCustomersDeletePaymentMethod_js_1 = require("../funcs/customerPortalCustomersDeletePaymentMethod.js");
const customerPortalCustomersGet_js_1 = require("../funcs/customerPortalCustomersGet.js");
const customerPortalCustomersGetPaymentMethods_js_1 = require("../funcs/customerPortalCustomersGetPaymentMethods.js");
const customerPortalCustomersUpdate_js_1 = require("../funcs/customerPortalCustomersUpdate.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
const operations_js_1 = require("../types/operations.js");
class PolarCustomers extends sdks_js_1.ClientSDK {
    /**
     * Get Customer
     *
     * @remarks
     * Get authenticated customer.
     *
     * **Scopes**: `customer_portal:read` `customer_portal:write`
     */
    async get(security, options) {
        return (0, fp_js_1.unwrapAsync)((0, customerPortalCustomersGet_js_1.customerPortalCustomersGet)(this, security, options));
    }
    /**
     * Update Customer
     *
     * @remarks
     * Update authenticated customer.
     *
     * **Scopes**: `customer_portal:write`
     */
    async update(security, request, options) {
        return (0, fp_js_1.unwrapAsync)((0, customerPortalCustomersUpdate_js_1.customerPortalCustomersUpdate)(this, security, request, options));
    }
    /**
     * Get Customer Payment Methods
     *
     * @remarks
     * Get saved payment methods of the authenticated customer.
     *
     * **Scopes**: `customer_portal:read` `customer_portal:write`
     */
    async getPaymentMethods(security, request, options) {
        return (0, operations_js_1.unwrapResultIterator)((0, customerPortalCustomersGetPaymentMethods_js_1.customerPortalCustomersGetPaymentMethods)(this, security, request, options));
    }
    /**
     * Add Customer Payment Method
     *
     * @remarks
     * Add a payment method to the authenticated customer.
     *
     * **Scopes**: `customer_portal:read` `customer_portal:write`
     */
    async addPaymentMethod(security, request, options) {
        return (0, fp_js_1.unwrapAsync)((0, customerPortalCustomersAddPaymentMethod_js_1.customerPortalCustomersAddPaymentMethod)(this, security, request, options));
    }
    /**
     * Delete Customer Payment Method
     *
     * @remarks
     * Delete a payment method from the authenticated customer.
     *
     * **Scopes**: `customer_portal:read` `customer_portal:write`
     */
    async deletePaymentMethod(security, request, options) {
        return (0, fp_js_1.unwrapAsync)((0, customerPortalCustomersDeletePaymentMethod_js_1.customerPortalCustomersDeletePaymentMethod)(this, security, request, options));
    }
}
exports.PolarCustomers = PolarCustomers;
//# sourceMappingURL=polarcustomers.js.map