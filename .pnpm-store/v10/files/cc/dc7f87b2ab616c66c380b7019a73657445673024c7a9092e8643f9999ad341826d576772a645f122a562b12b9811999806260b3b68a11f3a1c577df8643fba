/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { CustomFieldTextProperties$inboundSchema, CustomFieldTextProperties$outboundSchema, } from "./customfieldtextproperties.js";
/** @internal */
export const CustomFieldUpdateTextMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
export const CustomFieldUpdateTextMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldUpdateTextMetadata$;
(function (CustomFieldUpdateTextMetadata$) {
    /** @deprecated use `CustomFieldUpdateTextMetadata$inboundSchema` instead. */
    CustomFieldUpdateTextMetadata$.inboundSchema = CustomFieldUpdateTextMetadata$inboundSchema;
    /** @deprecated use `CustomFieldUpdateTextMetadata$outboundSchema` instead. */
    CustomFieldUpdateTextMetadata$.outboundSchema = CustomFieldUpdateTextMetadata$outboundSchema;
})(CustomFieldUpdateTextMetadata$ || (CustomFieldUpdateTextMetadata$ = {}));
export function customFieldUpdateTextMetadataToJSON(customFieldUpdateTextMetadata) {
    return JSON.stringify(CustomFieldUpdateTextMetadata$outboundSchema.parse(customFieldUpdateTextMetadata));
}
export function customFieldUpdateTextMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldUpdateTextMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldUpdateTextMetadata' from JSON`);
}
/** @internal */
export const CustomFieldUpdateText$inboundSchema = z.object({
    metadata: z.nullable(z.record(z.union([z.string(), z.number().int(), z.boolean()]))).optional(),
    name: z.nullable(z.string()).optional(),
    slug: z.nullable(z.string()).optional(),
    type: z.literal("text").optional(),
    properties: z.nullable(CustomFieldTextProperties$inboundSchema).optional(),
});
/** @internal */
export const CustomFieldUpdateText$outboundSchema = z.object({
    metadata: z.nullable(z.record(z.union([z.string(), z.number().int(), z.boolean()]))).optional(),
    name: z.nullable(z.string()).optional(),
    slug: z.nullable(z.string()).optional(),
    type: z.literal("text").default("text"),
    properties: z.nullable(CustomFieldTextProperties$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldUpdateText$;
(function (CustomFieldUpdateText$) {
    /** @deprecated use `CustomFieldUpdateText$inboundSchema` instead. */
    CustomFieldUpdateText$.inboundSchema = CustomFieldUpdateText$inboundSchema;
    /** @deprecated use `CustomFieldUpdateText$outboundSchema` instead. */
    CustomFieldUpdateText$.outboundSchema = CustomFieldUpdateText$outboundSchema;
})(CustomFieldUpdateText$ || (CustomFieldUpdateText$ = {}));
export function customFieldUpdateTextToJSON(customFieldUpdateText) {
    return JSON.stringify(CustomFieldUpdateText$outboundSchema.parse(customFieldUpdateText));
}
export function customFieldUpdateTextFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldUpdateText$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldUpdateText' from JSON`);
}
//# sourceMappingURL=customfieldupdatetext.js.map