/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { BenefitGitHubRepositoryCreateProperties$inboundSchema, BenefitGitHubRepositoryCreateProperties$outboundSchema, } from "./benefitgithubrepositorycreateproperties.js";
/** @internal */
export const BenefitGitHubRepositoryCreate$inboundSchema = z.object({
    type: z.literal("github_repository").optional(),
    description: z.string(),
    organization_id: z.nullable(z.string()).optional(),
    properties: BenefitGitHubRepositoryCreateProperties$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "organization_id": "organizationId",
    });
});
/** @internal */
export const BenefitGitHubRepositoryCreate$outboundSchema = z.object({
    type: z.literal("github_repository").default("github_repository"),
    description: z.string(),
    organizationId: z.nullable(z.string()).optional(),
    properties: BenefitGitHubRepositoryCreateProperties$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitGitHubRepositoryCreate$;
(function (BenefitGitHubRepositoryCreate$) {
    /** @deprecated use `BenefitGitHubRepositoryCreate$inboundSchema` instead. */
    BenefitGitHubRepositoryCreate$.inboundSchema = BenefitGitHubRepositoryCreate$inboundSchema;
    /** @deprecated use `BenefitGitHubRepositoryCreate$outboundSchema` instead. */
    BenefitGitHubRepositoryCreate$.outboundSchema = BenefitGitHubRepositoryCreate$outboundSchema;
})(BenefitGitHubRepositoryCreate$ || (BenefitGitHubRepositoryCreate$ = {}));
export function benefitGitHubRepositoryCreateToJSON(benefitGitHubRepositoryCreate) {
    return JSON.stringify(BenefitGitHubRepositoryCreate$outboundSchema.parse(benefitGitHubRepositoryCreate));
}
export function benefitGitHubRepositoryCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitGitHubRepositoryCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitGitHubRepositoryCreate' from JSON`);
}
//# sourceMappingURL=benefitgithubrepositorycreate.js.map