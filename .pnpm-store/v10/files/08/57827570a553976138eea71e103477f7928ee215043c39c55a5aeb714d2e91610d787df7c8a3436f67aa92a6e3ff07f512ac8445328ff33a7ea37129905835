/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const LicenseKeysGetRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const LicenseKeysGetRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var LicenseKeysGetRequest$;
(function (LicenseKeysGetRequest$) {
    /** @deprecated use `LicenseKeysGetRequest$inboundSchema` instead. */
    LicenseKeysGetRequest$.inboundSchema = LicenseKeysGetRequest$inboundSchema;
    /** @deprecated use `LicenseKeysGetRequest$outboundSchema` instead. */
    LicenseKeysGetRequest$.outboundSchema = LicenseKeysGetRequest$outboundSchema;
})(LicenseKeysGetRequest$ || (LicenseKeysGetRequest$ = {}));
export function licenseKeysGetRequestToJSON(licenseKeysGetRequest) {
    return JSON.stringify(LicenseKeysGetRequest$outboundSchema.parse(licenseKeysGetRequest));
}
export function licenseKeysGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => LicenseKeysGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'LicenseKeysGetRequest' from JSON`);
}
//# sourceMappingURL=licensekeysget.js.map