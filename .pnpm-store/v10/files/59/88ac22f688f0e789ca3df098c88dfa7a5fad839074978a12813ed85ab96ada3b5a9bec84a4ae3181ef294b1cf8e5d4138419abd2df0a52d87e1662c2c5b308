import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { S3FileCreateMultipart, S3FileCreateMultipart$Outbound } from "./s3filecreatemultipart.js";
/**
 * Schema to create a file to be associated with the downloadables benefit.
 */
export type DownloadableFileCreate = {
    organizationId?: string | null | undefined;
    name: string;
    mimeType: string;
    size: number;
    checksumSha256Base64?: string | null | undefined;
    upload: S3FileCreateMultipart;
    service?: "downloadable" | undefined;
    version?: string | null | undefined;
};
/** @internal */
export declare const DownloadableFileCreate$inboundSchema: z.ZodType<DownloadableFileCreate, z.ZodTypeDef, unknown>;
/** @internal */
export type DownloadableFileCreate$Outbound = {
    organization_id?: string | null | undefined;
    name: string;
    mime_type: string;
    size: number;
    checksum_sha256_base64?: string | null | undefined;
    upload: S3FileCreateMultipart$Outbound;
    service: "downloadable";
    version?: string | null | undefined;
};
/** @internal */
export declare const DownloadableFileCreate$outboundSchema: z.ZodType<DownloadableFileCreate$Outbound, z.ZodTypeDef, DownloadableFileCreate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DownloadableFileCreate$ {
    /** @deprecated use `DownloadableFileCreate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DownloadableFileCreate, z.ZodTypeDef, unknown>;
    /** @deprecated use `DownloadableFileCreate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DownloadableFileCreate$Outbound, z.ZodTypeDef, DownloadableFileCreate>;
    /** @deprecated use `DownloadableFileCreate$Outbound` instead. */
    type Outbound = DownloadableFileCreate$Outbound;
}
export declare function downloadableFileCreateToJSON(downloadableFileCreate: DownloadableFileCreate): string;
export declare function downloadableFileCreateFromJSON(jsonString: string): SafeParseResult<DownloadableFileCreate, SDKValidationError>;
//# sourceMappingURL=downloadablefilecreate.d.ts.map