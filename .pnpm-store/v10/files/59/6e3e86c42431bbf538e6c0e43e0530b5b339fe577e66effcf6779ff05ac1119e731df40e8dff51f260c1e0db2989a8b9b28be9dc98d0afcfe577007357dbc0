"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrdersListResponse$ = exports.OrdersListResponse$outboundSchema = exports.OrdersListResponse$inboundSchema = exports.OrdersListRequest$ = exports.OrdersListRequest$outboundSchema = exports.OrdersListRequest$inboundSchema = exports.CheckoutIDFilter$ = exports.CheckoutIDFilter$outboundSchema = exports.CheckoutIDFilter$inboundSchema = exports.OrdersListQueryParamCustomerIDFilter$ = exports.OrdersListQueryParamCustomerIDFilter$outboundSchema = exports.OrdersListQueryParamCustomerIDFilter$inboundSchema = exports.QueryParamDiscountIDFilter$ = exports.QueryParamDiscountIDFilter$outboundSchema = exports.QueryParamDiscountIDFilter$inboundSchema = exports.ProductPriceTypeFilter$ = exports.ProductPriceTypeFilter$outboundSchema = exports.ProductPriceTypeFilter$inboundSchema = exports.ProductBillingTypeFilter$ = exports.ProductBillingTypeFilter$outboundSchema = exports.ProductBillingTypeFilter$inboundSchema = exports.OrdersListQueryParamProductIDFilter$ = exports.OrdersListQueryParamProductIDFilter$outboundSchema = exports.OrdersListQueryParamProductIDFilter$inboundSchema = exports.OrdersListQueryParamOrganizationIDFilter$ = exports.OrdersListQueryParamOrganizationIDFilter$outboundSchema = exports.OrdersListQueryParamOrganizationIDFilter$inboundSchema = void 0;
exports.ordersListQueryParamOrganizationIDFilterToJSON = ordersListQueryParamOrganizationIDFilterToJSON;
exports.ordersListQueryParamOrganizationIDFilterFromJSON = ordersListQueryParamOrganizationIDFilterFromJSON;
exports.ordersListQueryParamProductIDFilterToJSON = ordersListQueryParamProductIDFilterToJSON;
exports.ordersListQueryParamProductIDFilterFromJSON = ordersListQueryParamProductIDFilterFromJSON;
exports.productBillingTypeFilterToJSON = productBillingTypeFilterToJSON;
exports.productBillingTypeFilterFromJSON = productBillingTypeFilterFromJSON;
exports.productPriceTypeFilterToJSON = productPriceTypeFilterToJSON;
exports.productPriceTypeFilterFromJSON = productPriceTypeFilterFromJSON;
exports.queryParamDiscountIDFilterToJSON = queryParamDiscountIDFilterToJSON;
exports.queryParamDiscountIDFilterFromJSON = queryParamDiscountIDFilterFromJSON;
exports.ordersListQueryParamCustomerIDFilterToJSON = ordersListQueryParamCustomerIDFilterToJSON;
exports.ordersListQueryParamCustomerIDFilterFromJSON = ordersListQueryParamCustomerIDFilterFromJSON;
exports.checkoutIDFilterToJSON = checkoutIDFilterToJSON;
exports.checkoutIDFilterFromJSON = checkoutIDFilterFromJSON;
exports.ordersListRequestToJSON = ordersListRequestToJSON;
exports.ordersListRequestFromJSON = ordersListRequestFromJSON;
exports.ordersListResponseToJSON = ordersListResponseToJSON;
exports.ordersListResponseFromJSON = ordersListResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const listresourceorder_js_1 = require("../components/listresourceorder.js");
const ordersortproperty_js_1 = require("../components/ordersortproperty.js");
const productbillingtype_js_1 = require("../components/productbillingtype.js");
const productpricetype_js_1 = require("../components/productpricetype.js");
/** @internal */
exports.OrdersListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.OrdersListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrdersListQueryParamOrganizationIDFilter$;
(function (OrdersListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `OrdersListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    OrdersListQueryParamOrganizationIDFilter$.inboundSchema = exports.OrdersListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `OrdersListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    OrdersListQueryParamOrganizationIDFilter$.outboundSchema = exports.OrdersListQueryParamOrganizationIDFilter$outboundSchema;
})(OrdersListQueryParamOrganizationIDFilter$ || (exports.OrdersListQueryParamOrganizationIDFilter$ = OrdersListQueryParamOrganizationIDFilter$ = {}));
function ordersListQueryParamOrganizationIDFilterToJSON(ordersListQueryParamOrganizationIDFilter) {
    return JSON.stringify(exports.OrdersListQueryParamOrganizationIDFilter$outboundSchema.parse(ordersListQueryParamOrganizationIDFilter));
}
function ordersListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.OrdersListQueryParamOrganizationIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrdersListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
exports.OrdersListQueryParamProductIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.OrdersListQueryParamProductIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrdersListQueryParamProductIDFilter$;
(function (OrdersListQueryParamProductIDFilter$) {
    /** @deprecated use `OrdersListQueryParamProductIDFilter$inboundSchema` instead. */
    OrdersListQueryParamProductIDFilter$.inboundSchema = exports.OrdersListQueryParamProductIDFilter$inboundSchema;
    /** @deprecated use `OrdersListQueryParamProductIDFilter$outboundSchema` instead. */
    OrdersListQueryParamProductIDFilter$.outboundSchema = exports.OrdersListQueryParamProductIDFilter$outboundSchema;
})(OrdersListQueryParamProductIDFilter$ || (exports.OrdersListQueryParamProductIDFilter$ = OrdersListQueryParamProductIDFilter$ = {}));
function ordersListQueryParamProductIDFilterToJSON(ordersListQueryParamProductIDFilter) {
    return JSON.stringify(exports.OrdersListQueryParamProductIDFilter$outboundSchema.parse(ordersListQueryParamProductIDFilter));
}
function ordersListQueryParamProductIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.OrdersListQueryParamProductIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrdersListQueryParamProductIDFilter' from JSON`);
}
/** @internal */
exports.ProductBillingTypeFilter$inboundSchema = z.union([
    productbillingtype_js_1.ProductBillingType$inboundSchema,
    z.array(productbillingtype_js_1.ProductBillingType$inboundSchema),
]);
/** @internal */
exports.ProductBillingTypeFilter$outboundSchema = z.union([
    productbillingtype_js_1.ProductBillingType$outboundSchema,
    z.array(productbillingtype_js_1.ProductBillingType$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ProductBillingTypeFilter$;
(function (ProductBillingTypeFilter$) {
    /** @deprecated use `ProductBillingTypeFilter$inboundSchema` instead. */
    ProductBillingTypeFilter$.inboundSchema = exports.ProductBillingTypeFilter$inboundSchema;
    /** @deprecated use `ProductBillingTypeFilter$outboundSchema` instead. */
    ProductBillingTypeFilter$.outboundSchema = exports.ProductBillingTypeFilter$outboundSchema;
})(ProductBillingTypeFilter$ || (exports.ProductBillingTypeFilter$ = ProductBillingTypeFilter$ = {}));
function productBillingTypeFilterToJSON(productBillingTypeFilter) {
    return JSON.stringify(exports.ProductBillingTypeFilter$outboundSchema.parse(productBillingTypeFilter));
}
function productBillingTypeFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ProductBillingTypeFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductBillingTypeFilter' from JSON`);
}
/** @internal */
exports.ProductPriceTypeFilter$inboundSchema = z.union([
    productpricetype_js_1.ProductPriceType$inboundSchema,
    z.array(productpricetype_js_1.ProductPriceType$inboundSchema),
]);
/** @internal */
exports.ProductPriceTypeFilter$outboundSchema = z.union([
    productpricetype_js_1.ProductPriceType$outboundSchema,
    z.array(productpricetype_js_1.ProductPriceType$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ProductPriceTypeFilter$;
(function (ProductPriceTypeFilter$) {
    /** @deprecated use `ProductPriceTypeFilter$inboundSchema` instead. */
    ProductPriceTypeFilter$.inboundSchema = exports.ProductPriceTypeFilter$inboundSchema;
    /** @deprecated use `ProductPriceTypeFilter$outboundSchema` instead. */
    ProductPriceTypeFilter$.outboundSchema = exports.ProductPriceTypeFilter$outboundSchema;
})(ProductPriceTypeFilter$ || (exports.ProductPriceTypeFilter$ = ProductPriceTypeFilter$ = {}));
function productPriceTypeFilterToJSON(productPriceTypeFilter) {
    return JSON.stringify(exports.ProductPriceTypeFilter$outboundSchema.parse(productPriceTypeFilter));
}
function productPriceTypeFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ProductPriceTypeFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductPriceTypeFilter' from JSON`);
}
/** @internal */
exports.QueryParamDiscountIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.QueryParamDiscountIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var QueryParamDiscountIDFilter$;
(function (QueryParamDiscountIDFilter$) {
    /** @deprecated use `QueryParamDiscountIDFilter$inboundSchema` instead. */
    QueryParamDiscountIDFilter$.inboundSchema = exports.QueryParamDiscountIDFilter$inboundSchema;
    /** @deprecated use `QueryParamDiscountIDFilter$outboundSchema` instead. */
    QueryParamDiscountIDFilter$.outboundSchema = exports.QueryParamDiscountIDFilter$outboundSchema;
})(QueryParamDiscountIDFilter$ || (exports.QueryParamDiscountIDFilter$ = QueryParamDiscountIDFilter$ = {}));
function queryParamDiscountIDFilterToJSON(queryParamDiscountIDFilter) {
    return JSON.stringify(exports.QueryParamDiscountIDFilter$outboundSchema.parse(queryParamDiscountIDFilter));
}
function queryParamDiscountIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.QueryParamDiscountIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamDiscountIDFilter' from JSON`);
}
/** @internal */
exports.OrdersListQueryParamCustomerIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.OrdersListQueryParamCustomerIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrdersListQueryParamCustomerIDFilter$;
(function (OrdersListQueryParamCustomerIDFilter$) {
    /** @deprecated use `OrdersListQueryParamCustomerIDFilter$inboundSchema` instead. */
    OrdersListQueryParamCustomerIDFilter$.inboundSchema = exports.OrdersListQueryParamCustomerIDFilter$inboundSchema;
    /** @deprecated use `OrdersListQueryParamCustomerIDFilter$outboundSchema` instead. */
    OrdersListQueryParamCustomerIDFilter$.outboundSchema = exports.OrdersListQueryParamCustomerIDFilter$outboundSchema;
})(OrdersListQueryParamCustomerIDFilter$ || (exports.OrdersListQueryParamCustomerIDFilter$ = OrdersListQueryParamCustomerIDFilter$ = {}));
function ordersListQueryParamCustomerIDFilterToJSON(ordersListQueryParamCustomerIDFilter) {
    return JSON.stringify(exports.OrdersListQueryParamCustomerIDFilter$outboundSchema.parse(ordersListQueryParamCustomerIDFilter));
}
function ordersListQueryParamCustomerIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.OrdersListQueryParamCustomerIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrdersListQueryParamCustomerIDFilter' from JSON`);
}
/** @internal */
exports.CheckoutIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.CheckoutIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckoutIDFilter$;
(function (CheckoutIDFilter$) {
    /** @deprecated use `CheckoutIDFilter$inboundSchema` instead. */
    CheckoutIDFilter$.inboundSchema = exports.CheckoutIDFilter$inboundSchema;
    /** @deprecated use `CheckoutIDFilter$outboundSchema` instead. */
    CheckoutIDFilter$.outboundSchema = exports.CheckoutIDFilter$outboundSchema;
})(CheckoutIDFilter$ || (exports.CheckoutIDFilter$ = CheckoutIDFilter$ = {}));
function checkoutIDFilterToJSON(checkoutIDFilter) {
    return JSON.stringify(exports.CheckoutIDFilter$outboundSchema.parse(checkoutIDFilter));
}
function checkoutIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CheckoutIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutIDFilter' from JSON`);
}
/** @internal */
exports.OrdersListRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    product_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    product_billing_type: z.nullable(z.union([
        productbillingtype_js_1.ProductBillingType$inboundSchema,
        z.array(productbillingtype_js_1.ProductBillingType$inboundSchema),
    ])).optional(),
    product_price_type: z.nullable(z.union([
        productpricetype_js_1.ProductPriceType$inboundSchema,
        z.array(productpricetype_js_1.ProductPriceType$inboundSchema),
    ])).optional(),
    discount_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    customer_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    checkout_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(ordersortproperty_js_1.OrderSortProperty$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
        "product_id": "productId",
        "product_billing_type": "productBillingType",
        "product_price_type": "productPriceType",
        "discount_id": "discountId",
        "customer_id": "customerId",
        "checkout_id": "checkoutId",
    });
});
/** @internal */
exports.OrdersListRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    productId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    productBillingType: z.nullable(z.union([
        productbillingtype_js_1.ProductBillingType$outboundSchema,
        z.array(productbillingtype_js_1.ProductBillingType$outboundSchema),
    ])).optional(),
    productPriceType: z.nullable(z.union([
        productpricetype_js_1.ProductPriceType$outboundSchema,
        z.array(productpricetype_js_1.ProductPriceType$outboundSchema),
    ])).optional(),
    discountId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    customerId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    checkoutId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(ordersortproperty_js_1.OrderSortProperty$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
        productId: "product_id",
        productBillingType: "product_billing_type",
        productPriceType: "product_price_type",
        discountId: "discount_id",
        customerId: "customer_id",
        checkoutId: "checkout_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrdersListRequest$;
(function (OrdersListRequest$) {
    /** @deprecated use `OrdersListRequest$inboundSchema` instead. */
    OrdersListRequest$.inboundSchema = exports.OrdersListRequest$inboundSchema;
    /** @deprecated use `OrdersListRequest$outboundSchema` instead. */
    OrdersListRequest$.outboundSchema = exports.OrdersListRequest$outboundSchema;
})(OrdersListRequest$ || (exports.OrdersListRequest$ = OrdersListRequest$ = {}));
function ordersListRequestToJSON(ordersListRequest) {
    return JSON.stringify(exports.OrdersListRequest$outboundSchema.parse(ordersListRequest));
}
function ordersListRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.OrdersListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrdersListRequest' from JSON`);
}
/** @internal */
exports.OrdersListResponse$inboundSchema = z.object({
    Result: listresourceorder_js_1.ListResourceOrder$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Result": "result",
    });
});
/** @internal */
exports.OrdersListResponse$outboundSchema = z.object({
    result: listresourceorder_js_1.ListResourceOrder$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrdersListResponse$;
(function (OrdersListResponse$) {
    /** @deprecated use `OrdersListResponse$inboundSchema` instead. */
    OrdersListResponse$.inboundSchema = exports.OrdersListResponse$inboundSchema;
    /** @deprecated use `OrdersListResponse$outboundSchema` instead. */
    OrdersListResponse$.outboundSchema = exports.OrdersListResponse$outboundSchema;
})(OrdersListResponse$ || (exports.OrdersListResponse$ = OrdersListResponse$ = {}));
function ordersListResponseToJSON(ordersListResponse) {
    return JSON.stringify(exports.OrdersListResponse$outboundSchema.parse(ordersListResponse));
}
function ordersListResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.OrdersListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrdersListResponse' from JSON`);
}
//# sourceMappingURL=orderslist.js.map