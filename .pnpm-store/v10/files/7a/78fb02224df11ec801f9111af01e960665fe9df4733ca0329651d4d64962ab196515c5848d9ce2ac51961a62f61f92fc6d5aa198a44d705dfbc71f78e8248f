/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { filesCreate } from "../funcs/filesCreate.js";
import { filesDelete } from "../funcs/filesDelete.js";
import { filesList } from "../funcs/filesList.js";
import { filesUpdate } from "../funcs/filesUpdate.js";
import { filesUploaded } from "../funcs/filesUploaded.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
import { unwrapResultIterator } from "../types/operations.js";
export class Files extends ClientSDK {
    /**
     * List Files
     *
     * @remarks
     * List files.
     *
     * **Scopes**: `files:read` `files:write`
     */
    async list(request, options) {
        return unwrapResultIterator(filesList(this, request, options));
    }
    /**
     * Create File
     *
     * @remarks
     * Create a file.
     *
     * **Scopes**: `files:write`
     */
    async create(request, options) {
        return unwrapAsync(filesCreate(this, request, options));
    }
    /**
     * Complete File Upload
     *
     * @remarks
     * Complete a file upload.
     *
     * **Scopes**: `files:write`
     */
    async uploaded(request, options) {
        return unwrapAsync(filesUploaded(this, request, options));
    }
    /**
     * Update File
     *
     * @remarks
     * Update a file.
     *
     * **Scopes**: `files:write`
     */
    async update(request, options) {
        return unwrapAsync(filesUpdate(this, request, options));
    }
    /**
     * Delete File
     *
     * @remarks
     * Delete a file.
     *
     * **Scopes**: `files:write`
     */
    async delete(request, options) {
        return unwrapAsync(filesDelete(this, request, options));
    }
}
//# sourceMappingURL=files.js.map