/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CustomFieldNumberProperties$inboundSchema, CustomFieldNumberProperties$outboundSchema, } from "./customfieldnumberproperties.js";
/** @internal */
export const CustomFieldCreateNumberMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
export const CustomFieldCreateNumberMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldCreateNumberMetadata$;
(function (CustomFieldCreateNumberMetadata$) {
    /** @deprecated use `CustomFieldCreateNumberMetadata$inboundSchema` instead. */
    CustomFieldCreateNumberMetadata$.inboundSchema = CustomFieldCreateNumberMetadata$inboundSchema;
    /** @deprecated use `CustomFieldCreateNumberMetadata$outboundSchema` instead. */
    CustomFieldCreateNumberMetadata$.outboundSchema = CustomFieldCreateNumberMetadata$outboundSchema;
})(CustomFieldCreateNumberMetadata$ || (CustomFieldCreateNumberMetadata$ = {}));
export function customFieldCreateNumberMetadataToJSON(customFieldCreateNumberMetadata) {
    return JSON.stringify(CustomFieldCreateNumberMetadata$outboundSchema.parse(customFieldCreateNumberMetadata));
}
export function customFieldCreateNumberMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldCreateNumberMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldCreateNumberMetadata' from JSON`);
}
/** @internal */
export const CustomFieldCreateNumber$inboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    type: z.literal("number").optional(),
    slug: z.string(),
    name: z.string(),
    organization_id: z.nullable(z.string()).optional(),
    properties: CustomFieldNumberProperties$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "organization_id": "organizationId",
    });
});
/** @internal */
export const CustomFieldCreateNumber$outboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    type: z.literal("number").default("number"),
    slug: z.string(),
    name: z.string(),
    organizationId: z.nullable(z.string()).optional(),
    properties: CustomFieldNumberProperties$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldCreateNumber$;
(function (CustomFieldCreateNumber$) {
    /** @deprecated use `CustomFieldCreateNumber$inboundSchema` instead. */
    CustomFieldCreateNumber$.inboundSchema = CustomFieldCreateNumber$inboundSchema;
    /** @deprecated use `CustomFieldCreateNumber$outboundSchema` instead. */
    CustomFieldCreateNumber$.outboundSchema = CustomFieldCreateNumber$outboundSchema;
})(CustomFieldCreateNumber$ || (CustomFieldCreateNumber$ = {}));
export function customFieldCreateNumberToJSON(customFieldCreateNumber) {
    return JSON.stringify(CustomFieldCreateNumber$outboundSchema.parse(customFieldCreateNumber));
}
export function customFieldCreateNumberFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldCreateNumber$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldCreateNumber' from JSON`);
}
//# sourceMappingURL=customfieldcreatenumber.js.map