/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomersGetStateRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const CustomersGetStateRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomersGetStateRequest$;
(function (CustomersGetStateRequest$) {
    /** @deprecated use `CustomersGetStateRequest$inboundSchema` instead. */
    CustomersGetStateRequest$.inboundSchema = CustomersGetStateRequest$inboundSchema;
    /** @deprecated use `CustomersGetStateRequest$outboundSchema` instead. */
    CustomersGetStateRequest$.outboundSchema = CustomersGetStateRequest$outboundSchema;
})(CustomersGetStateRequest$ || (CustomersGetStateRequest$ = {}));
export function customersGetStateRequestToJSON(customersGetStateRequest) {
    return JSON.stringify(CustomersGetStateRequest$outboundSchema.parse(customersGetStateRequest));
}
export function customersGetStateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomersGetStateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomersGetStateRequest' from JSON`);
}
//# sourceMappingURL=customersgetstate.js.map