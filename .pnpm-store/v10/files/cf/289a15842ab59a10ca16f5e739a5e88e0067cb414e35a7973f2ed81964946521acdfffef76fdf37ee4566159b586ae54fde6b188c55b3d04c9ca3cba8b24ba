/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomerBenefitGrantLicenseKeysUpdate$inboundSchema = z.object({
    benefit_type: z.literal("license_keys").optional(),
}).transform((v) => {
    return remap$(v, {
        "benefit_type": "benefitType",
    });
});
/** @internal */
export const CustomerBenefitGrantLicenseKeysUpdate$outboundSchema = z.object({
    benefitType: z.literal("license_keys").default("license_keys"),
}).transform((v) => {
    return remap$(v, {
        benefitType: "benefit_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerBenefitGrantLicenseKeysUpdate$;
(function (CustomerBenefitGrantLicenseKeysUpdate$) {
    /** @deprecated use `CustomerBenefitGrantLicenseKeysUpdate$inboundSchema` instead. */
    CustomerBenefitGrantLicenseKeysUpdate$.inboundSchema = CustomerBenefitGrantLicenseKeysUpdate$inboundSchema;
    /** @deprecated use `CustomerBenefitGrantLicenseKeysUpdate$outboundSchema` instead. */
    CustomerBenefitGrantLicenseKeysUpdate$.outboundSchema = CustomerBenefitGrantLicenseKeysUpdate$outboundSchema;
})(CustomerBenefitGrantLicenseKeysUpdate$ || (CustomerBenefitGrantLicenseKeysUpdate$ = {}));
export function customerBenefitGrantLicenseKeysUpdateToJSON(customerBenefitGrantLicenseKeysUpdate) {
    return JSON.stringify(CustomerBenefitGrantLicenseKeysUpdate$outboundSchema.parse(customerBenefitGrantLicenseKeysUpdate));
}
export function customerBenefitGrantLicenseKeysUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerBenefitGrantLicenseKeysUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerBenefitGrantLicenseKeysUpdate' from JSON`);
}
//# sourceMappingURL=customerbenefitgrantlicensekeysupdate.js.map