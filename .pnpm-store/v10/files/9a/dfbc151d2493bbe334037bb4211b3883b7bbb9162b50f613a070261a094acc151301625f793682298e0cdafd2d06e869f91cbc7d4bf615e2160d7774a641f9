import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { ProductPriceType } from "./productpricetype.js";
import { SubscriptionRecurringInterval } from "./subscriptionrecurringinterval.js";
/**
 * A pay-what-you-want price for a product.
 */
export type ProductPriceCustom = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the price.
     */
    id: string;
    amountType?: "custom" | undefined;
    /**
     * Whether the price is archived and no longer available.
     */
    isArchived: boolean;
    /**
     * The ID of the product owning the price.
     */
    productId: string;
    type: ProductPriceType;
    /**
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    recurringInterval: SubscriptionRecurringInterval | null;
    /**
     * The currency.
     */
    priceCurrency: string;
    /**
     * The minimum amount the customer can pay.
     */
    minimumAmount: number | null;
    /**
     * The maximum amount the customer can pay.
     */
    maximumAmount: number | null;
    /**
     * The initial amount shown to the customer.
     */
    presetAmount: number | null;
};
/** @internal */
export declare const ProductPriceCustom$inboundSchema: z.ZodType<ProductPriceCustom, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductPriceCustom$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    amount_type: "custom";
    is_archived: boolean;
    product_id: string;
    type: string;
    recurring_interval: string | null;
    price_currency: string;
    minimum_amount: number | null;
    maximum_amount: number | null;
    preset_amount: number | null;
};
/** @internal */
export declare const ProductPriceCustom$outboundSchema: z.ZodType<ProductPriceCustom$Outbound, z.ZodTypeDef, ProductPriceCustom>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductPriceCustom$ {
    /** @deprecated use `ProductPriceCustom$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductPriceCustom, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductPriceCustom$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductPriceCustom$Outbound, z.ZodTypeDef, ProductPriceCustom>;
    /** @deprecated use `ProductPriceCustom$Outbound` instead. */
    type Outbound = ProductPriceCustom$Outbound;
}
export declare function productPriceCustomToJSON(productPriceCustom: ProductPriceCustom): string;
export declare function productPriceCustomFromJSON(jsonString: string): SafeParseResult<ProductPriceCustom, SDKValidationError>;
//# sourceMappingURL=productpricecustom.d.ts.map