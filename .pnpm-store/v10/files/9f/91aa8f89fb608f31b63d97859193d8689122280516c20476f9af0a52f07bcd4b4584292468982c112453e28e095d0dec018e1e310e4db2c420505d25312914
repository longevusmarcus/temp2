/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Refund$inboundSchema, Refund$outboundSchema, } from "./refund.js";
/** @internal */
export const WebhookRefundUpdatedPayload$inboundSchema = z.object({
    type: z.literal("refund.updated").optional(),
    data: Refund$inboundSchema,
});
/** @internal */
export const WebhookRefundUpdatedPayload$outboundSchema = z.object({
    type: z.literal("refund.updated").default("refund.updated"),
    data: Refund$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookRefundUpdatedPayload$;
(function (WebhookRefundUpdatedPayload$) {
    /** @deprecated use `WebhookRefundUpdatedPayload$inboundSchema` instead. */
    WebhookRefundUpdatedPayload$.inboundSchema = WebhookRefundUpdatedPayload$inboundSchema;
    /** @deprecated use `WebhookRefundUpdatedPayload$outboundSchema` instead. */
    WebhookRefundUpdatedPayload$.outboundSchema = WebhookRefundUpdatedPayload$outboundSchema;
})(WebhookRefundUpdatedPayload$ || (WebhookRefundUpdatedPayload$ = {}));
export function webhookRefundUpdatedPayloadToJSON(webhookRefundUpdatedPayload) {
    return JSON.stringify(WebhookRefundUpdatedPayload$outboundSchema.parse(webhookRefundUpdatedPayload));
}
export function webhookRefundUpdatedPayloadFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookRefundUpdatedPayload$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookRefundUpdatedPayload' from JSON`);
}
//# sourceMappingURL=webhookrefundupdatedpayload.js.map