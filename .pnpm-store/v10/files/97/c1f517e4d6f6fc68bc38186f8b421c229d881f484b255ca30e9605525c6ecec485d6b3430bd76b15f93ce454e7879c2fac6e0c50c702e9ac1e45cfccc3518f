/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$inboundSchema, CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$outboundSchema, } from "./customerbenefitgrantgithubrepositorypropertiesupdate.js";
/** @internal */
export const CustomerBenefitGrantGitHubRepositoryUpdate$inboundSchema = z.object({
    benefit_type: z.literal("github_repository").optional(),
    properties: CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "benefit_type": "benefitType",
    });
});
/** @internal */
export const CustomerBenefitGrantGitHubRepositoryUpdate$outboundSchema = z.object({
    benefitType: z.literal("github_repository").default("github_repository"),
    properties: CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        benefitType: "benefit_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerBenefitGrantGitHubRepositoryUpdate$;
(function (CustomerBenefitGrantGitHubRepositoryUpdate$) {
    /** @deprecated use `CustomerBenefitGrantGitHubRepositoryUpdate$inboundSchema` instead. */
    CustomerBenefitGrantGitHubRepositoryUpdate$.inboundSchema = CustomerBenefitGrantGitHubRepositoryUpdate$inboundSchema;
    /** @deprecated use `CustomerBenefitGrantGitHubRepositoryUpdate$outboundSchema` instead. */
    CustomerBenefitGrantGitHubRepositoryUpdate$.outboundSchema = CustomerBenefitGrantGitHubRepositoryUpdate$outboundSchema;
})(CustomerBenefitGrantGitHubRepositoryUpdate$ || (CustomerBenefitGrantGitHubRepositoryUpdate$ = {}));
export function customerBenefitGrantGitHubRepositoryUpdateToJSON(customerBenefitGrantGitHubRepositoryUpdate) {
    return JSON.stringify(CustomerBenefitGrantGitHubRepositoryUpdate$outboundSchema.parse(customerBenefitGrantGitHubRepositoryUpdate));
}
export function customerBenefitGrantGitHubRepositoryUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerBenefitGrantGitHubRepositoryUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerBenefitGrantGitHubRepositoryUpdate' from JSON`);
}
//# sourceMappingURL=customerbenefitgrantgithubrepositoryupdate.js.map