/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const Assignee$inboundSchema = z.object({
    id: z.number().int(),
    login: z.string(),
    html_url: z.string(),
    avatar_url: z.string(),
}).transform((v) => {
    return remap$(v, {
        "html_url": "htmlUrl",
        "avatar_url": "avatarUrl",
    });
});
/** @internal */
export const Assignee$outboundSchema = z.object({
    id: z.number().int(),
    login: z.string(),
    htmlUrl: z.string(),
    avatarUrl: z.string(),
}).transform((v) => {
    return remap$(v, {
        htmlUrl: "html_url",
        avatarUrl: "avatar_url",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Assignee$;
(function (Assignee$) {
    /** @deprecated use `Assignee$inboundSchema` instead. */
    Assignee$.inboundSchema = Assignee$inboundSchema;
    /** @deprecated use `Assignee$outboundSchema` instead. */
    Assignee$.outboundSchema = Assignee$outboundSchema;
})(Assignee$ || (Assignee$ = {}));
export function assigneeToJSON(assignee) {
    return JSON.stringify(Assignee$outboundSchema.parse(assignee));
}
export function assigneeFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Assignee$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Assignee' from JSON`);
}
//# sourceMappingURL=assignee.js.map