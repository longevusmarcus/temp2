/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { eventsGet } from "../funcs/eventsGet.js";
import { eventsIngest } from "../funcs/eventsIngest.js";
import { eventsList } from "../funcs/eventsList.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
import { unwrapResultIterator } from "../types/operations.js";
export class Events extends ClientSDK {
    /**
     * List Events
     *
     * @remarks
     * List events.
     *
     * **Scopes**: `events:read` `events:write`
     */
    async list(request, options) {
        return unwrapResultIterator(eventsList(this, request, options));
    }
    /**
     * Get Event
     *
     * @remarks
     * Get an event by ID.
     *
     * **Scopes**: `events:read` `events:write`
     */
    async get(request, options) {
        return unwrapAsync(eventsGet(this, request, options));
    }
    /**
     * Ingest Events
     *
     * @remarks
     * Ingest batch of events.
     *
     * **Scopes**: `events:write`
     */
    async ingest(request, options) {
        return unwrapAsync(eventsIngest(this, request, options));
    }
}
//# sourceMappingURL=events.js.map