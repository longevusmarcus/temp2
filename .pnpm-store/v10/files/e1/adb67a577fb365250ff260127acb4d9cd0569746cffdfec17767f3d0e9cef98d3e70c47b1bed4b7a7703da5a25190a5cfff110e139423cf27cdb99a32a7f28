/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { BenefitType$inboundSchema, BenefitType$outboundSchema, } from "../components/benefittype.js";
import { CustomerBenefitGrantSortProperty$inboundSchema, CustomerBenefitGrantSortProperty$outboundSchema, } from "../components/customerbenefitgrantsortproperty.js";
import { ListResourceCustomerBenefitGrant$inboundSchema, ListResourceCustomerBenefitGrant$outboundSchema, } from "../components/listresourcecustomerbenefitgrant.js";
/** @internal */
export const CustomerPortalBenefitGrantsListSecurity$inboundSchema = z.object({
    customer_session: z.string(),
}).transform((v) => {
    return remap$(v, {
        "customer_session": "customerSession",
    });
});
/** @internal */
export const CustomerPortalBenefitGrantsListSecurity$outboundSchema = z.object({
    customerSession: z.string(),
}).transform((v) => {
    return remap$(v, {
        customerSession: "customer_session",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalBenefitGrantsListSecurity$;
(function (CustomerPortalBenefitGrantsListSecurity$) {
    /** @deprecated use `CustomerPortalBenefitGrantsListSecurity$inboundSchema` instead. */
    CustomerPortalBenefitGrantsListSecurity$.inboundSchema = CustomerPortalBenefitGrantsListSecurity$inboundSchema;
    /** @deprecated use `CustomerPortalBenefitGrantsListSecurity$outboundSchema` instead. */
    CustomerPortalBenefitGrantsListSecurity$.outboundSchema = CustomerPortalBenefitGrantsListSecurity$outboundSchema;
})(CustomerPortalBenefitGrantsListSecurity$ || (CustomerPortalBenefitGrantsListSecurity$ = {}));
export function customerPortalBenefitGrantsListSecurityToJSON(customerPortalBenefitGrantsListSecurity) {
    return JSON.stringify(CustomerPortalBenefitGrantsListSecurity$outboundSchema.parse(customerPortalBenefitGrantsListSecurity));
}
export function customerPortalBenefitGrantsListSecurityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalBenefitGrantsListSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalBenefitGrantsListSecurity' from JSON`);
}
/** @internal */
export const QueryParamBenefitTypeFilter$inboundSchema = z.union([BenefitType$inboundSchema, z.array(BenefitType$inboundSchema)]);
/** @internal */
export const QueryParamBenefitTypeFilter$outboundSchema = z.union([BenefitType$outboundSchema, z.array(BenefitType$outboundSchema)]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var QueryParamBenefitTypeFilter$;
(function (QueryParamBenefitTypeFilter$) {
    /** @deprecated use `QueryParamBenefitTypeFilter$inboundSchema` instead. */
    QueryParamBenefitTypeFilter$.inboundSchema = QueryParamBenefitTypeFilter$inboundSchema;
    /** @deprecated use `QueryParamBenefitTypeFilter$outboundSchema` instead. */
    QueryParamBenefitTypeFilter$.outboundSchema = QueryParamBenefitTypeFilter$outboundSchema;
})(QueryParamBenefitTypeFilter$ || (QueryParamBenefitTypeFilter$ = {}));
export function queryParamBenefitTypeFilterToJSON(queryParamBenefitTypeFilter) {
    return JSON.stringify(QueryParamBenefitTypeFilter$outboundSchema.parse(queryParamBenefitTypeFilter));
}
export function queryParamBenefitTypeFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => QueryParamBenefitTypeFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamBenefitTypeFilter' from JSON`);
}
/** @internal */
export const CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$;
(function (CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$) {
    /** @deprecated use `CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$inboundSchema` instead. */
    CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$.inboundSchema = CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$inboundSchema;
    /** @deprecated use `CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$outboundSchema` instead. */
    CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$.outboundSchema = CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$outboundSchema;
})(CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$ || (CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$ = {}));
export function customerPortalBenefitGrantsListQueryParamBenefitIDFilterToJSON(customerPortalBenefitGrantsListQueryParamBenefitIDFilter) {
    return JSON.stringify(CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$outboundSchema
        .parse(customerPortalBenefitGrantsListQueryParamBenefitIDFilter));
}
export function customerPortalBenefitGrantsListQueryParamBenefitIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter' from JSON`);
}
/** @internal */
export const CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$;
(function (CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$.inboundSchema = CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$.outboundSchema = CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$outboundSchema;
})(CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$ || (CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$ = {}));
export function customerPortalBenefitGrantsListQueryParamOrganizationIDFilterToJSON(customerPortalBenefitGrantsListQueryParamOrganizationIDFilter) {
    return JSON.stringify(CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$outboundSchema
        .parse(customerPortalBenefitGrantsListQueryParamOrganizationIDFilter));
}
export function customerPortalBenefitGrantsListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
export const QueryParamCheckoutIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const QueryParamCheckoutIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var QueryParamCheckoutIDFilter$;
(function (QueryParamCheckoutIDFilter$) {
    /** @deprecated use `QueryParamCheckoutIDFilter$inboundSchema` instead. */
    QueryParamCheckoutIDFilter$.inboundSchema = QueryParamCheckoutIDFilter$inboundSchema;
    /** @deprecated use `QueryParamCheckoutIDFilter$outboundSchema` instead. */
    QueryParamCheckoutIDFilter$.outboundSchema = QueryParamCheckoutIDFilter$outboundSchema;
})(QueryParamCheckoutIDFilter$ || (QueryParamCheckoutIDFilter$ = {}));
export function queryParamCheckoutIDFilterToJSON(queryParamCheckoutIDFilter) {
    return JSON.stringify(QueryParamCheckoutIDFilter$outboundSchema.parse(queryParamCheckoutIDFilter));
}
export function queryParamCheckoutIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => QueryParamCheckoutIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamCheckoutIDFilter' from JSON`);
}
/** @internal */
export const QueryParamOrderIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const QueryParamOrderIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var QueryParamOrderIDFilter$;
(function (QueryParamOrderIDFilter$) {
    /** @deprecated use `QueryParamOrderIDFilter$inboundSchema` instead. */
    QueryParamOrderIDFilter$.inboundSchema = QueryParamOrderIDFilter$inboundSchema;
    /** @deprecated use `QueryParamOrderIDFilter$outboundSchema` instead. */
    QueryParamOrderIDFilter$.outboundSchema = QueryParamOrderIDFilter$outboundSchema;
})(QueryParamOrderIDFilter$ || (QueryParamOrderIDFilter$ = {}));
export function queryParamOrderIDFilterToJSON(queryParamOrderIDFilter) {
    return JSON.stringify(QueryParamOrderIDFilter$outboundSchema.parse(queryParamOrderIDFilter));
}
export function queryParamOrderIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => QueryParamOrderIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamOrderIDFilter' from JSON`);
}
/** @internal */
export const QueryParamSubscriptionIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const QueryParamSubscriptionIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var QueryParamSubscriptionIDFilter$;
(function (QueryParamSubscriptionIDFilter$) {
    /** @deprecated use `QueryParamSubscriptionIDFilter$inboundSchema` instead. */
    QueryParamSubscriptionIDFilter$.inboundSchema = QueryParamSubscriptionIDFilter$inboundSchema;
    /** @deprecated use `QueryParamSubscriptionIDFilter$outboundSchema` instead. */
    QueryParamSubscriptionIDFilter$.outboundSchema = QueryParamSubscriptionIDFilter$outboundSchema;
})(QueryParamSubscriptionIDFilter$ || (QueryParamSubscriptionIDFilter$ = {}));
export function queryParamSubscriptionIDFilterToJSON(queryParamSubscriptionIDFilter) {
    return JSON.stringify(QueryParamSubscriptionIDFilter$outboundSchema.parse(queryParamSubscriptionIDFilter));
}
export function queryParamSubscriptionIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => QueryParamSubscriptionIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamSubscriptionIDFilter' from JSON`);
}
/** @internal */
export const CustomerPortalBenefitGrantsListRequest$inboundSchema = z.object({
    type_filter: z.nullable(z.union([BenefitType$inboundSchema, z.array(BenefitType$inboundSchema)])).optional(),
    benefit_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    checkout_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    order_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    subscription_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(CustomerBenefitGrantSortProperty$inboundSchema))
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "type_filter": "typeFilter",
        "benefit_id": "benefitId",
        "organization_id": "organizationId",
        "checkout_id": "checkoutId",
        "order_id": "orderId",
        "subscription_id": "subscriptionId",
    });
});
/** @internal */
export const CustomerPortalBenefitGrantsListRequest$outboundSchema = z.object({
    typeFilter: z.nullable(z.union([BenefitType$outboundSchema, z.array(BenefitType$outboundSchema)])).optional(),
    benefitId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    checkoutId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    orderId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    subscriptionId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(CustomerBenefitGrantSortProperty$outboundSchema))
        .optional(),
}).transform((v) => {
    return remap$(v, {
        typeFilter: "type_filter",
        benefitId: "benefit_id",
        organizationId: "organization_id",
        checkoutId: "checkout_id",
        orderId: "order_id",
        subscriptionId: "subscription_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalBenefitGrantsListRequest$;
(function (CustomerPortalBenefitGrantsListRequest$) {
    /** @deprecated use `CustomerPortalBenefitGrantsListRequest$inboundSchema` instead. */
    CustomerPortalBenefitGrantsListRequest$.inboundSchema = CustomerPortalBenefitGrantsListRequest$inboundSchema;
    /** @deprecated use `CustomerPortalBenefitGrantsListRequest$outboundSchema` instead. */
    CustomerPortalBenefitGrantsListRequest$.outboundSchema = CustomerPortalBenefitGrantsListRequest$outboundSchema;
})(CustomerPortalBenefitGrantsListRequest$ || (CustomerPortalBenefitGrantsListRequest$ = {}));
export function customerPortalBenefitGrantsListRequestToJSON(customerPortalBenefitGrantsListRequest) {
    return JSON.stringify(CustomerPortalBenefitGrantsListRequest$outboundSchema.parse(customerPortalBenefitGrantsListRequest));
}
export function customerPortalBenefitGrantsListRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalBenefitGrantsListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalBenefitGrantsListRequest' from JSON`);
}
/** @internal */
export const CustomerPortalBenefitGrantsListResponse$inboundSchema = z.object({
    Result: ListResourceCustomerBenefitGrant$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Result": "result",
    });
});
/** @internal */
export const CustomerPortalBenefitGrantsListResponse$outboundSchema = z.object({
    result: ListResourceCustomerBenefitGrant$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalBenefitGrantsListResponse$;
(function (CustomerPortalBenefitGrantsListResponse$) {
    /** @deprecated use `CustomerPortalBenefitGrantsListResponse$inboundSchema` instead. */
    CustomerPortalBenefitGrantsListResponse$.inboundSchema = CustomerPortalBenefitGrantsListResponse$inboundSchema;
    /** @deprecated use `CustomerPortalBenefitGrantsListResponse$outboundSchema` instead. */
    CustomerPortalBenefitGrantsListResponse$.outboundSchema = CustomerPortalBenefitGrantsListResponse$outboundSchema;
})(CustomerPortalBenefitGrantsListResponse$ || (CustomerPortalBenefitGrantsListResponse$ = {}));
export function customerPortalBenefitGrantsListResponseToJSON(customerPortalBenefitGrantsListResponse) {
    return JSON.stringify(CustomerPortalBenefitGrantsListResponse$outboundSchema.parse(customerPortalBenefitGrantsListResponse));
}
export function customerPortalBenefitGrantsListResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalBenefitGrantsListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalBenefitGrantsListResponse' from JSON`);
}
//# sourceMappingURL=customerportalbenefitgrantslist.js.map