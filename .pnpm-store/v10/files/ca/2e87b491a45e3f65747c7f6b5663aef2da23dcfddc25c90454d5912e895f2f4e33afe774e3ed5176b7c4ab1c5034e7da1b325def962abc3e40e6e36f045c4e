/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { customFieldsCreate } from "../funcs/customFieldsCreate.js";
import { customFieldsDelete } from "../funcs/customFieldsDelete.js";
import { customFieldsGet } from "../funcs/customFieldsGet.js";
import { customFieldsList } from "../funcs/customFieldsList.js";
import { customFieldsUpdate } from "../funcs/customFieldsUpdate.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
import { unwrapResultIterator } from "../types/operations.js";
export class CustomFields extends ClientSDK {
    /**
     * List Custom Fields
     *
     * @remarks
     * List custom fields.
     *
     * **Scopes**: `custom_fields:read` `custom_fields:write`
     */
    async list(request, options) {
        return unwrapResultIterator(customFieldsList(this, request, options));
    }
    /**
     * Create Custom Field
     *
     * @remarks
     * Create a custom field.
     *
     * **Scopes**: `custom_fields:write`
     */
    async create(request, options) {
        return unwrapAsync(customFieldsCreate(this, request, options));
    }
    /**
     * Get Custom Field
     *
     * @remarks
     * Get a custom field by ID.
     *
     * **Scopes**: `custom_fields:read` `custom_fields:write`
     */
    async get(request, options) {
        return unwrapAsync(customFieldsGet(this, request, options));
    }
    /**
     * Update Custom Field
     *
     * @remarks
     * Update a custom field.
     *
     * **Scopes**: `custom_fields:write`
     */
    async update(request, options) {
        return unwrapAsync(customFieldsUpdate(this, request, options));
    }
    /**
     * Delete Custom Field
     *
     * @remarks
     * Delete a custom field.
     *
     * **Scopes**: `custom_fields:write`
     */
    async delete(request, options) {
        return unwrapAsync(customFieldsDelete(this, request, options));
    }
}
//# sourceMappingURL=customfields.js.map