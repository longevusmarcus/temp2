/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { MetricPeriod$inboundSchema, MetricPeriod$outboundSchema, } from "./metricperiod.js";
import { Metrics$inboundSchema, Metrics$outboundSchema, } from "./metrics.js";
/** @internal */
export const MetricsResponse$inboundSchema = z.object({
    periods: z.array(MetricPeriod$inboundSchema),
    metrics: Metrics$inboundSchema,
});
/** @internal */
export const MetricsResponse$outboundSchema = z.object({
    periods: z.array(MetricPeriod$outboundSchema),
    metrics: Metrics$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var MetricsResponse$;
(function (MetricsResponse$) {
    /** @deprecated use `MetricsResponse$inboundSchema` instead. */
    MetricsResponse$.inboundSchema = MetricsResponse$inboundSchema;
    /** @deprecated use `MetricsResponse$outboundSchema` instead. */
    MetricsResponse$.outboundSchema = MetricsResponse$outboundSchema;
})(MetricsResponse$ || (MetricsResponse$ = {}));
export function metricsResponseToJSON(metricsResponse) {
    return JSON.stringify(MetricsResponse$outboundSchema.parse(metricsResponse));
}
export function metricsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => MetricsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'MetricsResponse' from JSON`);
}
//# sourceMappingURL=metricsresponse.js.map