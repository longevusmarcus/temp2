/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomFieldsGetRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const CustomFieldsGetRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldsGetRequest$;
(function (CustomFieldsGetRequest$) {
    /** @deprecated use `CustomFieldsGetRequest$inboundSchema` instead. */
    CustomFieldsGetRequest$.inboundSchema = CustomFieldsGetRequest$inboundSchema;
    /** @deprecated use `CustomFieldsGetRequest$outboundSchema` instead. */
    CustomFieldsGetRequest$.outboundSchema = CustomFieldsGetRequest$outboundSchema;
})(CustomFieldsGetRequest$ || (CustomFieldsGetRequest$ = {}));
export function customFieldsGetRequestToJSON(customFieldsGetRequest) {
    return JSON.stringify(CustomFieldsGetRequest$outboundSchema.parse(customFieldsGetRequest));
}
export function customFieldsGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldsGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldsGetRequest' from JSON`);
}
//# sourceMappingURL=customfieldsget.js.map