/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { OrganizationUpdate$inboundSchema, OrganizationUpdate$outboundSchema, } from "../components/organizationupdate.js";
/** @internal */
export const OrganizationsUpdateRequest$inboundSchema = z.object({
    id: z.string(),
    OrganizationUpdate: OrganizationUpdate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "OrganizationUpdate": "organizationUpdate",
    });
});
/** @internal */
export const OrganizationsUpdateRequest$outboundSchema = z.object({
    id: z.string(),
    organizationUpdate: OrganizationUpdate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        organizationUpdate: "OrganizationUpdate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrganizationsUpdateRequest$;
(function (OrganizationsUpdateRequest$) {
    /** @deprecated use `OrganizationsUpdateRequest$inboundSchema` instead. */
    OrganizationsUpdateRequest$.inboundSchema = OrganizationsUpdateRequest$inboundSchema;
    /** @deprecated use `OrganizationsUpdateRequest$outboundSchema` instead. */
    OrganizationsUpdateRequest$.outboundSchema = OrganizationsUpdateRequest$outboundSchema;
})(OrganizationsUpdateRequest$ || (OrganizationsUpdateRequest$ = {}));
export function organizationsUpdateRequestToJSON(organizationsUpdateRequest) {
    return JSON.stringify(OrganizationsUpdateRequest$outboundSchema.parse(organizationsUpdateRequest));
}
export function organizationsUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrganizationsUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrganizationsUpdateRequest' from JSON`);
}
//# sourceMappingURL=organizationsupdate.js.map