/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CheckoutLinkUpdate$inboundSchema, CheckoutLinkUpdate$outboundSchema, } from "../components/checkoutlinkupdate.js";
/** @internal */
export const CheckoutLinksUpdateRequest$inboundSchema = z.object({
    id: z.string(),
    CheckoutLinkUpdate: CheckoutLinkUpdate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "CheckoutLinkUpdate": "checkoutLinkUpdate",
    });
});
/** @internal */
export const CheckoutLinksUpdateRequest$outboundSchema = z.object({
    id: z.string(),
    checkoutLinkUpdate: CheckoutLinkUpdate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        checkoutLinkUpdate: "CheckoutLinkUpdate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CheckoutLinksUpdateRequest$;
(function (CheckoutLinksUpdateRequest$) {
    /** @deprecated use `CheckoutLinksUpdateRequest$inboundSchema` instead. */
    CheckoutLinksUpdateRequest$.inboundSchema = CheckoutLinksUpdateRequest$inboundSchema;
    /** @deprecated use `CheckoutLinksUpdateRequest$outboundSchema` instead. */
    CheckoutLinksUpdateRequest$.outboundSchema = CheckoutLinksUpdateRequest$outboundSchema;
})(CheckoutLinksUpdateRequest$ || (CheckoutLinksUpdateRequest$ = {}));
export function checkoutLinksUpdateRequestToJSON(checkoutLinksUpdateRequest) {
    return JSON.stringify(CheckoutLinksUpdateRequest$outboundSchema.parse(checkoutLinksUpdateRequest));
}
export function checkoutLinksUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CheckoutLinksUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutLinksUpdateRequest' from JSON`);
}
//# sourceMappingURL=checkoutlinksupdate.js.map