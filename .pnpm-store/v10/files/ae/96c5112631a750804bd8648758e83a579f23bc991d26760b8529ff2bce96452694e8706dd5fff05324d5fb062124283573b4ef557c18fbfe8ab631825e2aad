/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ListResourceEvent$inboundSchema, ListResourceEvent$outboundSchema, } from "../components/listresourceevent.js";
/** @internal */
export const MetersEventsRequest$inboundSchema = z.object({
    id: z.string(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
});
/** @internal */
export const MetersEventsRequest$outboundSchema = z.object({
    id: z.string(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var MetersEventsRequest$;
(function (MetersEventsRequest$) {
    /** @deprecated use `MetersEventsRequest$inboundSchema` instead. */
    MetersEventsRequest$.inboundSchema = MetersEventsRequest$inboundSchema;
    /** @deprecated use `MetersEventsRequest$outboundSchema` instead. */
    MetersEventsRequest$.outboundSchema = MetersEventsRequest$outboundSchema;
})(MetersEventsRequest$ || (MetersEventsRequest$ = {}));
export function metersEventsRequestToJSON(metersEventsRequest) {
    return JSON.stringify(MetersEventsRequest$outboundSchema.parse(metersEventsRequest));
}
export function metersEventsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => MetersEventsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'MetersEventsRequest' from JSON`);
}
/** @internal */
export const MetersEventsResponse$inboundSchema = z.object({
    Result: ListResourceEvent$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Result": "result",
    });
});
/** @internal */
export const MetersEventsResponse$outboundSchema = z.object({
    result: ListResourceEvent$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var MetersEventsResponse$;
(function (MetersEventsResponse$) {
    /** @deprecated use `MetersEventsResponse$inboundSchema` instead. */
    MetersEventsResponse$.inboundSchema = MetersEventsResponse$inboundSchema;
    /** @deprecated use `MetersEventsResponse$outboundSchema` instead. */
    MetersEventsResponse$.outboundSchema = MetersEventsResponse$outboundSchema;
})(MetersEventsResponse$ || (MetersEventsResponse$ = {}));
export function metersEventsResponseToJSON(metersEventsResponse) {
    return JSON.stringify(MetersEventsResponse$outboundSchema.parse(metersEventsResponse));
}
export function metersEventsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => MetersEventsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'MetersEventsResponse' from JSON`);
}
//# sourceMappingURL=metersevents.js.map