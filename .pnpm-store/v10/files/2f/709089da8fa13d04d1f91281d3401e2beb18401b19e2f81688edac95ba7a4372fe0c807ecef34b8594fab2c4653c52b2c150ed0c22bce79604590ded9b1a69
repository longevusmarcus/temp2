/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const BenefitsGetRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const BenefitsGetRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitsGetRequest$;
(function (BenefitsGetRequest$) {
    /** @deprecated use `BenefitsGetRequest$inboundSchema` instead. */
    BenefitsGetRequest$.inboundSchema = BenefitsGetRequest$inboundSchema;
    /** @deprecated use `BenefitsGetRequest$outboundSchema` instead. */
    BenefitsGetRequest$.outboundSchema = BenefitsGetRequest$outboundSchema;
})(BenefitsGetRequest$ || (BenefitsGetRequest$ = {}));
export function benefitsGetRequestToJSON(benefitsGetRequest) {
    return JSON.stringify(BenefitsGetRequest$outboundSchema.parse(benefitsGetRequest));
}
export function benefitsGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitsGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitsGetRequest' from JSON`);
}
//# sourceMappingURL=benefitsget.js.map