/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Subscription$inboundSchema, Subscription$outboundSchema, } from "./subscription.js";
/** @internal */
export const WebhookSubscriptionRevokedPayload$inboundSchema = z.object({
    type: z.literal("subscription.revoked").optional(),
    data: Subscription$inboundSchema,
});
/** @internal */
export const WebhookSubscriptionRevokedPayload$outboundSchema = z.object({
    type: z.literal("subscription.revoked").default("subscription.revoked"),
    data: Subscription$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookSubscriptionRevokedPayload$;
(function (WebhookSubscriptionRevokedPayload$) {
    /** @deprecated use `WebhookSubscriptionRevokedPayload$inboundSchema` instead. */
    WebhookSubscriptionRevokedPayload$.inboundSchema = WebhookSubscriptionRevokedPayload$inboundSchema;
    /** @deprecated use `WebhookSubscriptionRevokedPayload$outboundSchema` instead. */
    WebhookSubscriptionRevokedPayload$.outboundSchema = WebhookSubscriptionRevokedPayload$outboundSchema;
})(WebhookSubscriptionRevokedPayload$ || (WebhookSubscriptionRevokedPayload$ = {}));
export function webhookSubscriptionRevokedPayloadToJSON(webhookSubscriptionRevokedPayload) {
    return JSON.stringify(WebhookSubscriptionRevokedPayload$outboundSchema.parse(webhookSubscriptionRevokedPayload));
}
export function webhookSubscriptionRevokedPayloadFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookSubscriptionRevokedPayload$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookSubscriptionRevokedPayload' from JSON`);
}
//# sourceMappingURL=webhooksubscriptionrevokedpayload.js.map