import { PolarCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/errors/httpclienterrors.js";
import { HTTPValidationError } from "../models/errors/httpvalidationerror.js";
import { SDKError } from "../models/errors/sdkerror.js";
import { SDKValidationError } from "../models/errors/sdkvalidationerror.js";
import { Oauth2ClientsOauth2GetClientRequest } from "../models/operations/oauth2clientsoauth2getclient.js";
import { APIPromise } from "../types/async.js";
import { Result } from "../types/fp.js";
/**
 * Get Client
 *
 * @remarks
 * Get an OAuth2 client by Client ID.
 */
export declare function oauth2ClientsGet(client: PolarCore, request: Oauth2ClientsOauth2GetClientRequest, options?: RequestOptions): APIPromise<Result<any, HTTPValidationError | SDKError | SDKValidationError | UnexpectedClientError | InvalidRequestError | RequestAbortedError | RequestTimeoutError | ConnectionError>>;
//# sourceMappingURL=oauth2ClientsGet.d.ts.map