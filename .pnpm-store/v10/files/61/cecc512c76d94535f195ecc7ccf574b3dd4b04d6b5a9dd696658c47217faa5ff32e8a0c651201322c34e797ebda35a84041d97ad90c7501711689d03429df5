/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { CustomerProduct$inboundSchema, CustomerProduct$outboundSchema, } from "./customerproduct.js";
import { Organization$inboundSchema, Organization$outboundSchema, } from "./organization.js";
/** @internal */
export const CustomerOrganization$inboundSchema = z.object({
    organization: Organization$inboundSchema,
    products: z.array(CustomerProduct$inboundSchema),
});
/** @internal */
export const CustomerOrganization$outboundSchema = z.object({
    organization: Organization$outboundSchema,
    products: z.array(CustomerProduct$outboundSchema),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerOrganization$;
(function (CustomerOrganization$) {
    /** @deprecated use `CustomerOrganization$inboundSchema` instead. */
    CustomerOrganization$.inboundSchema = CustomerOrganization$inboundSchema;
    /** @deprecated use `CustomerOrganization$outboundSchema` instead. */
    CustomerOrganization$.outboundSchema = CustomerOrganization$outboundSchema;
})(CustomerOrganization$ || (CustomerOrganization$ = {}));
export function customerOrganizationToJSON(customerOrganization) {
    return JSON.stringify(CustomerOrganization$outboundSchema.parse(customerOrganization));
}
export function customerOrganizationFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerOrganization$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerOrganization' from JSON`);
}
//# sourceMappingURL=customerorganization.js.map