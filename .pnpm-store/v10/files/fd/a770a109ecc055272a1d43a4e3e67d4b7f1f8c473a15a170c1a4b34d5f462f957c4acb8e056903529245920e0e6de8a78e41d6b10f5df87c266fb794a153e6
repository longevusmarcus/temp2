/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const DiscountsDeleteRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const DiscountsDeleteRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DiscountsDeleteRequest$;
(function (DiscountsDeleteRequest$) {
    /** @deprecated use `DiscountsDeleteRequest$inboundSchema` instead. */
    DiscountsDeleteRequest$.inboundSchema = DiscountsDeleteRequest$inboundSchema;
    /** @deprecated use `DiscountsDeleteRequest$outboundSchema` instead. */
    DiscountsDeleteRequest$.outboundSchema = DiscountsDeleteRequest$outboundSchema;
})(DiscountsDeleteRequest$ || (DiscountsDeleteRequest$ = {}));
export function discountsDeleteRequestToJSON(discountsDeleteRequest) {
    return JSON.stringify(DiscountsDeleteRequest$outboundSchema.parse(discountsDeleteRequest));
}
export function discountsDeleteRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DiscountsDeleteRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DiscountsDeleteRequest' from JSON`);
}
//# sourceMappingURL=discountsdelete.js.map