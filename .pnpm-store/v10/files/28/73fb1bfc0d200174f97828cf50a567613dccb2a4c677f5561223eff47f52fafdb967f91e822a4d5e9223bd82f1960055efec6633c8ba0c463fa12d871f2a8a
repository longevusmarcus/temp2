import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { CustomerBenefitGrantGitHubRepositoryPropertiesUpdate, CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$Outbound } from "./customerbenefitgrantgithubrepositorypropertiesupdate.js";
export type CustomerBenefitGrantGitHubRepositoryUpdate = {
    benefitType?: "github_repository" | undefined;
    properties: CustomerBenefitGrantGitHubRepositoryPropertiesUpdate;
};
/** @internal */
export declare const CustomerBenefitGrantGitHubRepositoryUpdate$inboundSchema: z.ZodType<CustomerBenefitGrantGitHubRepositoryUpdate, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerBenefitGrantGitHubRepositoryUpdate$Outbound = {
    benefit_type: "github_repository";
    properties: CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$Outbound;
};
/** @internal */
export declare const CustomerBenefitGrantGitHubRepositoryUpdate$outboundSchema: z.ZodType<CustomerBenefitGrantGitHubRepositoryUpdate$Outbound, z.ZodTypeDef, CustomerBenefitGrantGitHubRepositoryUpdate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerBenefitGrantGitHubRepositoryUpdate$ {
    /** @deprecated use `CustomerBenefitGrantGitHubRepositoryUpdate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerBenefitGrantGitHubRepositoryUpdate, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerBenefitGrantGitHubRepositoryUpdate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerBenefitGrantGitHubRepositoryUpdate$Outbound, z.ZodTypeDef, CustomerBenefitGrantGitHubRepositoryUpdate>;
    /** @deprecated use `CustomerBenefitGrantGitHubRepositoryUpdate$Outbound` instead. */
    type Outbound = CustomerBenefitGrantGitHubRepositoryUpdate$Outbound;
}
export declare function customerBenefitGrantGitHubRepositoryUpdateToJSON(customerBenefitGrantGitHubRepositoryUpdate: CustomerBenefitGrantGitHubRepositoryUpdate): string;
export declare function customerBenefitGrantGitHubRepositoryUpdateFromJSON(jsonString: string): SafeParseResult<CustomerBenefitGrantGitHubRepositoryUpdate, SDKValidationError>;
//# sourceMappingURL=customerbenefitgrantgithubrepositoryupdate.d.ts.map