/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Meter$inboundSchema, Meter$outboundSchema, } from "./meter.js";
import { Pagination$inboundSchema, Pagination$outboundSchema, } from "./pagination.js";
/** @internal */
export const ListResourceMeter$inboundSchema = z.object({
    items: z.array(Meter$inboundSchema),
    pagination: Pagination$inboundSchema,
});
/** @internal */
export const ListResourceMeter$outboundSchema = z.object({
    items: z.array(Meter$outboundSchema),
    pagination: Pagination$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListResourceMeter$;
(function (ListResourceMeter$) {
    /** @deprecated use `ListResourceMeter$inboundSchema` instead. */
    ListResourceMeter$.inboundSchema = ListResourceMeter$inboundSchema;
    /** @deprecated use `ListResourceMeter$outboundSchema` instead. */
    ListResourceMeter$.outboundSchema = ListResourceMeter$outboundSchema;
})(ListResourceMeter$ || (ListResourceMeter$ = {}));
export function listResourceMeterToJSON(listResourceMeter) {
    return JSON.stringify(ListResourceMeter$outboundSchema.parse(listResourceMeter));
}
export function listResourceMeterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListResourceMeter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListResourceMeter' from JSON`);
}
//# sourceMappingURL=listresourcemeter.js.map