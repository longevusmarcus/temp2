/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { CustomerState$inboundSchema, CustomerState$outboundSchema, } from "./customerstate.js";
/** @internal */
export const WebhookCustomerStateChangedPayload$inboundSchema = z.object({
    type: z.literal("customer.state_changed").optional(),
    data: CustomerState$inboundSchema,
});
/** @internal */
export const WebhookCustomerStateChangedPayload$outboundSchema = z.object({
    type: z.literal("customer.state_changed").default("customer.state_changed"),
    data: CustomerState$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookCustomerStateChangedPayload$;
(function (WebhookCustomerStateChangedPayload$) {
    /** @deprecated use `WebhookCustomerStateChangedPayload$inboundSchema` instead. */
    WebhookCustomerStateChangedPayload$.inboundSchema = WebhookCustomerStateChangedPayload$inboundSchema;
    /** @deprecated use `WebhookCustomerStateChangedPayload$outboundSchema` instead. */
    WebhookCustomerStateChangedPayload$.outboundSchema = WebhookCustomerStateChangedPayload$outboundSchema;
})(WebhookCustomerStateChangedPayload$ || (WebhookCustomerStateChangedPayload$ = {}));
export function webhookCustomerStateChangedPayloadToJSON(webhookCustomerStateChangedPayload) {
    return JSON.stringify(WebhookCustomerStateChangedPayload$outboundSchema.parse(webhookCustomerStateChangedPayload));
}
export function webhookCustomerStateChangedPayloadFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookCustomerStateChangedPayload$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookCustomerStateChangedPayload' from JSON`);
}
//# sourceMappingURL=webhookcustomerstatechangedpayload.js.map