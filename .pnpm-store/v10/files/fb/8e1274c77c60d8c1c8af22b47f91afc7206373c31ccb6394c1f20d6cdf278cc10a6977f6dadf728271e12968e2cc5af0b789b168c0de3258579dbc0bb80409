/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomerPortalSubscriptionsCancelSecurity$inboundSchema = z.object({
    customer_session: z.string(),
}).transform((v) => {
    return remap$(v, {
        "customer_session": "customerSession",
    });
});
/** @internal */
export const CustomerPortalSubscriptionsCancelSecurity$outboundSchema = z.object({
    customerSession: z.string(),
}).transform((v) => {
    return remap$(v, {
        customerSession: "customer_session",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalSubscriptionsCancelSecurity$;
(function (CustomerPortalSubscriptionsCancelSecurity$) {
    /** @deprecated use `CustomerPortalSubscriptionsCancelSecurity$inboundSchema` instead. */
    CustomerPortalSubscriptionsCancelSecurity$.inboundSchema = CustomerPortalSubscriptionsCancelSecurity$inboundSchema;
    /** @deprecated use `CustomerPortalSubscriptionsCancelSecurity$outboundSchema` instead. */
    CustomerPortalSubscriptionsCancelSecurity$.outboundSchema = CustomerPortalSubscriptionsCancelSecurity$outboundSchema;
})(CustomerPortalSubscriptionsCancelSecurity$ || (CustomerPortalSubscriptionsCancelSecurity$ = {}));
export function customerPortalSubscriptionsCancelSecurityToJSON(customerPortalSubscriptionsCancelSecurity) {
    return JSON.stringify(CustomerPortalSubscriptionsCancelSecurity$outboundSchema.parse(customerPortalSubscriptionsCancelSecurity));
}
export function customerPortalSubscriptionsCancelSecurityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalSubscriptionsCancelSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalSubscriptionsCancelSecurity' from JSON`);
}
/** @internal */
export const CustomerPortalSubscriptionsCancelRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const CustomerPortalSubscriptionsCancelRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalSubscriptionsCancelRequest$;
(function (CustomerPortalSubscriptionsCancelRequest$) {
    /** @deprecated use `CustomerPortalSubscriptionsCancelRequest$inboundSchema` instead. */
    CustomerPortalSubscriptionsCancelRequest$.inboundSchema = CustomerPortalSubscriptionsCancelRequest$inboundSchema;
    /** @deprecated use `CustomerPortalSubscriptionsCancelRequest$outboundSchema` instead. */
    CustomerPortalSubscriptionsCancelRequest$.outboundSchema = CustomerPortalSubscriptionsCancelRequest$outboundSchema;
})(CustomerPortalSubscriptionsCancelRequest$ || (CustomerPortalSubscriptionsCancelRequest$ = {}));
export function customerPortalSubscriptionsCancelRequestToJSON(customerPortalSubscriptionsCancelRequest) {
    return JSON.stringify(CustomerPortalSubscriptionsCancelRequest$outboundSchema.parse(customerPortalSubscriptionsCancelRequest));
}
export function customerPortalSubscriptionsCancelRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalSubscriptionsCancelRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalSubscriptionsCancelRequest' from JSON`);
}
//# sourceMappingURL=customerportalsubscriptionscancel.js.map