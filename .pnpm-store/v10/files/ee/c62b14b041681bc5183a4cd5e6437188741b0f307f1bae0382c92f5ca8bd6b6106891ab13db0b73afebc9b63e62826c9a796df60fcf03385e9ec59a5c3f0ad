/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { BenefitCustom$inboundSchema, BenefitCustom$outboundSchema, } from "./benefitcustom.js";
import { BenefitDiscord$inboundSchema, BenefitDiscord$outboundSchema, } from "./benefitdiscord.js";
import { BenefitDownloadables$inboundSchema, BenefitDownloadables$outboundSchema, } from "./benefitdownloadables.js";
import { BenefitGitHubRepository$inboundSchema, BenefitGitHubRepository$outboundSchema, } from "./benefitgithubrepository.js";
import { BenefitLicenseKeys$inboundSchema, BenefitLicenseKeys$outboundSchema, } from "./benefitlicensekeys.js";
/** @internal */
export const Benefit$inboundSchema = z.union([
    BenefitDiscord$inboundSchema,
    BenefitGitHubRepository$inboundSchema,
    BenefitDownloadables$inboundSchema,
    BenefitLicenseKeys$inboundSchema,
    BenefitCustom$inboundSchema,
]);
/** @internal */
export const Benefit$outboundSchema = z.union([
    BenefitDiscord$outboundSchema,
    BenefitGitHubRepository$outboundSchema,
    BenefitDownloadables$outboundSchema,
    BenefitLicenseKeys$outboundSchema,
    BenefitCustom$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Benefit$;
(function (Benefit$) {
    /** @deprecated use `Benefit$inboundSchema` instead. */
    Benefit$.inboundSchema = Benefit$inboundSchema;
    /** @deprecated use `Benefit$outboundSchema` instead. */
    Benefit$.outboundSchema = Benefit$outboundSchema;
})(Benefit$ || (Benefit$ = {}));
export function benefitToJSON(benefit) {
    return JSON.stringify(Benefit$outboundSchema.parse(benefit));
}
export function benefitFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Benefit$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Benefit' from JSON`);
}
//# sourceMappingURL=benefit.js.map