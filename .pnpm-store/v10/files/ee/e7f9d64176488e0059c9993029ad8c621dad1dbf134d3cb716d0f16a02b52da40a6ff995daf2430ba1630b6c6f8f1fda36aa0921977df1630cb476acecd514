"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RefundCreate$ = exports.RefundCreate$outboundSchema = exports.RefundCreate$inboundSchema = exports.RefundCreateMetadata$ = exports.RefundCreateMetadata$outboundSchema = exports.RefundCreateMetadata$inboundSchema = void 0;
exports.refundCreateMetadataToJSON = refundCreateMetadataToJSON;
exports.refundCreateMetadataFromJSON = refundCreateMetadataFromJSON;
exports.refundCreateToJSON = refundCreateToJSON;
exports.refundCreateFromJSON = refundCreateFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const refundreason_js_1 = require("./refundreason.js");
/** @internal */
exports.RefundCreateMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
exports.RefundCreateMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RefundCreateMetadata$;
(function (RefundCreateMetadata$) {
    /** @deprecated use `RefundCreateMetadata$inboundSchema` instead. */
    RefundCreateMetadata$.inboundSchema = exports.RefundCreateMetadata$inboundSchema;
    /** @deprecated use `RefundCreateMetadata$outboundSchema` instead. */
    RefundCreateMetadata$.outboundSchema = exports.RefundCreateMetadata$outboundSchema;
})(RefundCreateMetadata$ || (exports.RefundCreateMetadata$ = RefundCreateMetadata$ = {}));
function refundCreateMetadataToJSON(refundCreateMetadata) {
    return JSON.stringify(exports.RefundCreateMetadata$outboundSchema.parse(refundCreateMetadata));
}
function refundCreateMetadataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.RefundCreateMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RefundCreateMetadata' from JSON`);
}
/** @internal */
exports.RefundCreate$inboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    order_id: z.string(),
    reason: refundreason_js_1.RefundReason$inboundSchema,
    amount: z.number().int(),
    comment: z.nullable(z.string()).optional(),
    revoke_benefits: z.boolean().default(false),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "order_id": "orderId",
        "revoke_benefits": "revokeBenefits",
    });
});
/** @internal */
exports.RefundCreate$outboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    orderId: z.string(),
    reason: refundreason_js_1.RefundReason$outboundSchema,
    amount: z.number().int(),
    comment: z.nullable(z.string()).optional(),
    revokeBenefits: z.boolean().default(false),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        orderId: "order_id",
        revokeBenefits: "revoke_benefits",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RefundCreate$;
(function (RefundCreate$) {
    /** @deprecated use `RefundCreate$inboundSchema` instead. */
    RefundCreate$.inboundSchema = exports.RefundCreate$inboundSchema;
    /** @deprecated use `RefundCreate$outboundSchema` instead. */
    RefundCreate$.outboundSchema = exports.RefundCreate$outboundSchema;
})(RefundCreate$ || (exports.RefundCreate$ = RefundCreate$ = {}));
function refundCreateToJSON(refundCreate) {
    return JSON.stringify(exports.RefundCreate$outboundSchema.parse(refundCreate));
}
function refundCreateFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.RefundCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RefundCreate' from JSON`);
}
//# sourceMappingURL=refundcreate.js.map