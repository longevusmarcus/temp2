/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Subscription$inboundSchema, Subscription$outboundSchema, } from "./subscription.js";
/** @internal */
export const WebhookSubscriptionCanceledPayload$inboundSchema = z.object({
    type: z.literal("subscription.canceled").optional(),
    data: Subscription$inboundSchema,
});
/** @internal */
export const WebhookSubscriptionCanceledPayload$outboundSchema = z.object({
    type: z.literal("subscription.canceled").default("subscription.canceled"),
    data: Subscription$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookSubscriptionCanceledPayload$;
(function (WebhookSubscriptionCanceledPayload$) {
    /** @deprecated use `WebhookSubscriptionCanceledPayload$inboundSchema` instead. */
    WebhookSubscriptionCanceledPayload$.inboundSchema = WebhookSubscriptionCanceledPayload$inboundSchema;
    /** @deprecated use `WebhookSubscriptionCanceledPayload$outboundSchema` instead. */
    WebhookSubscriptionCanceledPayload$.outboundSchema = WebhookSubscriptionCanceledPayload$outboundSchema;
})(WebhookSubscriptionCanceledPayload$ || (WebhookSubscriptionCanceledPayload$ = {}));
export function webhookSubscriptionCanceledPayloadToJSON(webhookSubscriptionCanceledPayload) {
    return JSON.stringify(WebhookSubscriptionCanceledPayload$outboundSchema.parse(webhookSubscriptionCanceledPayload));
}
export function webhookSubscriptionCanceledPayloadFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookSubscriptionCanceledPayload$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookSubscriptionCanceledPayload' from JSON`);
}
//# sourceMappingURL=webhooksubscriptioncanceledpayload.js.map