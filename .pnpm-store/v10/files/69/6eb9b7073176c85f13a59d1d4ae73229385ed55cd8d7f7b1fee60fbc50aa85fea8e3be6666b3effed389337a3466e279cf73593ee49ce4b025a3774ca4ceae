/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const AttachedCustomFieldCreate$inboundSchema = z.object({
    custom_field_id: z.string(),
    required: z.boolean(),
}).transform((v) => {
    return remap$(v, {
        "custom_field_id": "customFieldId",
    });
});
/** @internal */
export const AttachedCustomFieldCreate$outboundSchema = z.object({
    customFieldId: z.string(),
    required: z.boolean(),
}).transform((v) => {
    return remap$(v, {
        customFieldId: "custom_field_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AttachedCustomFieldCreate$;
(function (AttachedCustomFieldCreate$) {
    /** @deprecated use `AttachedCustomFieldCreate$inboundSchema` instead. */
    AttachedCustomFieldCreate$.inboundSchema = AttachedCustomFieldCreate$inboundSchema;
    /** @deprecated use `AttachedCustomFieldCreate$outboundSchema` instead. */
    AttachedCustomFieldCreate$.outboundSchema = AttachedCustomFieldCreate$outboundSchema;
})(AttachedCustomFieldCreate$ || (AttachedCustomFieldCreate$ = {}));
export function attachedCustomFieldCreateToJSON(attachedCustomFieldCreate) {
    return JSON.stringify(AttachedCustomFieldCreate$outboundSchema.parse(attachedCustomFieldCreate));
}
export function attachedCustomFieldCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AttachedCustomFieldCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AttachedCustomFieldCreate' from JSON`);
}
//# sourceMappingURL=attachedcustomfieldcreate.js.map