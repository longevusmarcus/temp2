/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const Pagination$inboundSchema = z.object({
    total_count: z.number().int(),
    max_page: z.number().int(),
}).transform((v) => {
    return remap$(v, {
        "total_count": "totalCount",
        "max_page": "maxPage",
    });
});
/** @internal */
export const Pagination$outboundSchema = z.object({
    totalCount: z.number().int(),
    maxPage: z.number().int(),
}).transform((v) => {
    return remap$(v, {
        totalCount: "total_count",
        maxPage: "max_page",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Pagination$;
(function (Pagination$) {
    /** @deprecated use `Pagination$inboundSchema` instead. */
    Pagination$.inboundSchema = Pagination$inboundSchema;
    /** @deprecated use `Pagination$outboundSchema` instead. */
    Pagination$.outboundSchema = Pagination$outboundSchema;
})(Pagination$ || (Pagination$ = {}));
export function paginationToJSON(pagination) {
    return JSON.stringify(Pagination$outboundSchema.parse(pagination));
}
export function paginationFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Pagination$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Pagination' from JSON`);
}
//# sourceMappingURL=pagination.js.map