import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Schema to create a pay-what-you-want price.
 */
export type ProductPriceCustomCreate = {
    amountType?: "custom" | undefined;
    /**
     * The currency. Currently, only `usd` is supported.
     */
    priceCurrency?: string | undefined;
    /**
     * The minimum amount the customer can pay.
     */
    minimumAmount?: number | null | undefined;
    /**
     * The maximum amount the customer can pay.
     */
    maximumAmount?: number | null | undefined;
    /**
     * The initial amount shown to the customer.
     */
    presetAmount?: number | null | undefined;
};
/** @internal */
export declare const ProductPriceCustomCreate$inboundSchema: z.ZodType<ProductPriceCustomCreate, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductPriceCustomCreate$Outbound = {
    amount_type: "custom";
    price_currency: string;
    minimum_amount?: number | null | undefined;
    maximum_amount?: number | null | undefined;
    preset_amount?: number | null | undefined;
};
/** @internal */
export declare const ProductPriceCustomCreate$outboundSchema: z.ZodType<ProductPriceCustomCreate$Outbound, z.ZodTypeDef, ProductPriceCustomCreate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductPriceCustomCreate$ {
    /** @deprecated use `ProductPriceCustomCreate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductPriceCustomCreate, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductPriceCustomCreate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductPriceCustomCreate$Outbound, z.ZodTypeDef, ProductPriceCustomCreate>;
    /** @deprecated use `ProductPriceCustomCreate$Outbound` instead. */
    type Outbound = ProductPriceCustomCreate$Outbound;
}
export declare function productPriceCustomCreateToJSON(productPriceCustomCreate: ProductPriceCustomCreate): string;
export declare function productPriceCustomCreateFromJSON(jsonString: string): SafeParseResult<ProductPriceCustomCreate, SDKValidationError>;
//# sourceMappingURL=productpricecustomcreate.d.ts.map