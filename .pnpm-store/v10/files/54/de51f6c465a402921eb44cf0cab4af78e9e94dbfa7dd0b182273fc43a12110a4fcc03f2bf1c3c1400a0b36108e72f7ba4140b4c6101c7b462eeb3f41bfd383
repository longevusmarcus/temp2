/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const Reactions$inboundSchema = z.object({
    total_count: z.number().int(),
    plus_one: z.number().int(),
    minus_one: z.number().int(),
    laugh: z.number().int(),
    hooray: z.number().int(),
    confused: z.number().int(),
    heart: z.number().int(),
    rocket: z.number().int(),
    eyes: z.number().int(),
}).transform((v) => {
    return remap$(v, {
        "total_count": "totalCount",
        "plus_one": "plusOne",
        "minus_one": "minusOne",
    });
});
/** @internal */
export const Reactions$outboundSchema = z.object({
    totalCount: z.number().int(),
    plusOne: z.number().int(),
    minusOne: z.number().int(),
    laugh: z.number().int(),
    hooray: z.number().int(),
    confused: z.number().int(),
    heart: z.number().int(),
    rocket: z.number().int(),
    eyes: z.number().int(),
}).transform((v) => {
    return remap$(v, {
        totalCount: "total_count",
        plusOne: "plus_one",
        minusOne: "minus_one",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Reactions$;
(function (Reactions$) {
    /** @deprecated use `Reactions$inboundSchema` instead. */
    Reactions$.inboundSchema = Reactions$inboundSchema;
    /** @deprecated use `Reactions$outboundSchema` instead. */
    Reactions$.outboundSchema = Reactions$outboundSchema;
})(Reactions$ || (Reactions$ = {}));
export function reactionsToJSON(reactions) {
    return JSON.stringify(Reactions$outboundSchema.parse(reactions));
}
export function reactionsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Reactions$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Reactions' from JSON`);
}
//# sourceMappingURL=reactions.js.map