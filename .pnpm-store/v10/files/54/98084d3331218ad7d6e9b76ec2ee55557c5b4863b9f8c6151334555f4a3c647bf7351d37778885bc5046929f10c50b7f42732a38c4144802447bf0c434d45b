/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ListResourceDownloadableRead$inboundSchema, ListResourceDownloadableRead$outboundSchema, } from "../components/listresourcedownloadableread.js";
/** @internal */
export const CustomerPortalDownloadablesListSecurity$inboundSchema = z.object({
    customer_session: z.string(),
}).transform((v) => {
    return remap$(v, {
        "customer_session": "customerSession",
    });
});
/** @internal */
export const CustomerPortalDownloadablesListSecurity$outboundSchema = z.object({
    customerSession: z.string(),
}).transform((v) => {
    return remap$(v, {
        customerSession: "customer_session",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalDownloadablesListSecurity$;
(function (CustomerPortalDownloadablesListSecurity$) {
    /** @deprecated use `CustomerPortalDownloadablesListSecurity$inboundSchema` instead. */
    CustomerPortalDownloadablesListSecurity$.inboundSchema = CustomerPortalDownloadablesListSecurity$inboundSchema;
    /** @deprecated use `CustomerPortalDownloadablesListSecurity$outboundSchema` instead. */
    CustomerPortalDownloadablesListSecurity$.outboundSchema = CustomerPortalDownloadablesListSecurity$outboundSchema;
})(CustomerPortalDownloadablesListSecurity$ || (CustomerPortalDownloadablesListSecurity$ = {}));
export function customerPortalDownloadablesListSecurityToJSON(customerPortalDownloadablesListSecurity) {
    return JSON.stringify(CustomerPortalDownloadablesListSecurity$outboundSchema.parse(customerPortalDownloadablesListSecurity));
}
export function customerPortalDownloadablesListSecurityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalDownloadablesListSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalDownloadablesListSecurity' from JSON`);
}
/** @internal */
export const CustomerPortalDownloadablesListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const CustomerPortalDownloadablesListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalDownloadablesListQueryParamOrganizationIDFilter$;
(function (CustomerPortalDownloadablesListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `CustomerPortalDownloadablesListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    CustomerPortalDownloadablesListQueryParamOrganizationIDFilter$.inboundSchema = CustomerPortalDownloadablesListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `CustomerPortalDownloadablesListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    CustomerPortalDownloadablesListQueryParamOrganizationIDFilter$.outboundSchema = CustomerPortalDownloadablesListQueryParamOrganizationIDFilter$outboundSchema;
})(CustomerPortalDownloadablesListQueryParamOrganizationIDFilter$ || (CustomerPortalDownloadablesListQueryParamOrganizationIDFilter$ = {}));
export function customerPortalDownloadablesListQueryParamOrganizationIDFilterToJSON(customerPortalDownloadablesListQueryParamOrganizationIDFilter) {
    return JSON.stringify(CustomerPortalDownloadablesListQueryParamOrganizationIDFilter$outboundSchema
        .parse(customerPortalDownloadablesListQueryParamOrganizationIDFilter));
}
export function customerPortalDownloadablesListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalDownloadablesListQueryParamOrganizationIDFilter$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'CustomerPortalDownloadablesListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
export const CustomerPortalDownloadablesListQueryParamBenefitIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const CustomerPortalDownloadablesListQueryParamBenefitIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalDownloadablesListQueryParamBenefitIDFilter$;
(function (CustomerPortalDownloadablesListQueryParamBenefitIDFilter$) {
    /** @deprecated use `CustomerPortalDownloadablesListQueryParamBenefitIDFilter$inboundSchema` instead. */
    CustomerPortalDownloadablesListQueryParamBenefitIDFilter$.inboundSchema = CustomerPortalDownloadablesListQueryParamBenefitIDFilter$inboundSchema;
    /** @deprecated use `CustomerPortalDownloadablesListQueryParamBenefitIDFilter$outboundSchema` instead. */
    CustomerPortalDownloadablesListQueryParamBenefitIDFilter$.outboundSchema = CustomerPortalDownloadablesListQueryParamBenefitIDFilter$outboundSchema;
})(CustomerPortalDownloadablesListQueryParamBenefitIDFilter$ || (CustomerPortalDownloadablesListQueryParamBenefitIDFilter$ = {}));
export function customerPortalDownloadablesListQueryParamBenefitIDFilterToJSON(customerPortalDownloadablesListQueryParamBenefitIDFilter) {
    return JSON.stringify(CustomerPortalDownloadablesListQueryParamBenefitIDFilter$outboundSchema
        .parse(customerPortalDownloadablesListQueryParamBenefitIDFilter));
}
export function customerPortalDownloadablesListQueryParamBenefitIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalDownloadablesListQueryParamBenefitIDFilter$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'CustomerPortalDownloadablesListQueryParamBenefitIDFilter' from JSON`);
}
/** @internal */
export const CustomerPortalDownloadablesListRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    benefit_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
}).transform((v) => {
    return remap$(v, {
        "organization_id": "organizationId",
        "benefit_id": "benefitId",
    });
});
/** @internal */
export const CustomerPortalDownloadablesListRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    benefitId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
}).transform((v) => {
    return remap$(v, {
        organizationId: "organization_id",
        benefitId: "benefit_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalDownloadablesListRequest$;
(function (CustomerPortalDownloadablesListRequest$) {
    /** @deprecated use `CustomerPortalDownloadablesListRequest$inboundSchema` instead. */
    CustomerPortalDownloadablesListRequest$.inboundSchema = CustomerPortalDownloadablesListRequest$inboundSchema;
    /** @deprecated use `CustomerPortalDownloadablesListRequest$outboundSchema` instead. */
    CustomerPortalDownloadablesListRequest$.outboundSchema = CustomerPortalDownloadablesListRequest$outboundSchema;
})(CustomerPortalDownloadablesListRequest$ || (CustomerPortalDownloadablesListRequest$ = {}));
export function customerPortalDownloadablesListRequestToJSON(customerPortalDownloadablesListRequest) {
    return JSON.stringify(CustomerPortalDownloadablesListRequest$outboundSchema.parse(customerPortalDownloadablesListRequest));
}
export function customerPortalDownloadablesListRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalDownloadablesListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalDownloadablesListRequest' from JSON`);
}
/** @internal */
export const CustomerPortalDownloadablesListResponse$inboundSchema = z.object({
    Result: ListResourceDownloadableRead$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Result": "result",
    });
});
/** @internal */
export const CustomerPortalDownloadablesListResponse$outboundSchema = z.object({
    result: ListResourceDownloadableRead$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalDownloadablesListResponse$;
(function (CustomerPortalDownloadablesListResponse$) {
    /** @deprecated use `CustomerPortalDownloadablesListResponse$inboundSchema` instead. */
    CustomerPortalDownloadablesListResponse$.inboundSchema = CustomerPortalDownloadablesListResponse$inboundSchema;
    /** @deprecated use `CustomerPortalDownloadablesListResponse$outboundSchema` instead. */
    CustomerPortalDownloadablesListResponse$.outboundSchema = CustomerPortalDownloadablesListResponse$outboundSchema;
})(CustomerPortalDownloadablesListResponse$ || (CustomerPortalDownloadablesListResponse$ = {}));
export function customerPortalDownloadablesListResponseToJSON(customerPortalDownloadablesListResponse) {
    return JSON.stringify(CustomerPortalDownloadablesListResponse$outboundSchema.parse(customerPortalDownloadablesListResponse));
}
export function customerPortalDownloadablesListResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalDownloadablesListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalDownloadablesListResponse' from JSON`);
}
//# sourceMappingURL=customerportaldownloadableslist.js.map