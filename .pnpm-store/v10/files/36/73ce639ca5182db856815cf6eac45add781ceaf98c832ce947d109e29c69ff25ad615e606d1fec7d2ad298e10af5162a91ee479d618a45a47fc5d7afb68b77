/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { BenefitCustomCreate$inboundSchema, BenefitCustomCreate$outboundSchema, } from "./benefitcustomcreate.js";
import { BenefitDiscordCreate$inboundSchema, BenefitDiscordCreate$outboundSchema, } from "./benefitdiscordcreate.js";
import { BenefitDownloadablesCreate$inboundSchema, BenefitDownloadablesCreate$outboundSchema, } from "./benefitdownloadablescreate.js";
import { BenefitGitHubRepositoryCreate$inboundSchema, BenefitGitHubRepositoryCreate$outboundSchema, } from "./benefitgithubrepositorycreate.js";
import { BenefitLicenseKeysCreate$inboundSchema, BenefitLicenseKeysCreate$outboundSchema, } from "./benefitlicensekeyscreate.js";
/** @internal */
export const BenefitCreate$inboundSchema = z.union([
    BenefitCustomCreate$inboundSchema.and(z.object({ type: z.literal("custom") }).transform((v) => ({
        type: v.type,
    }))),
    BenefitDiscordCreate$inboundSchema.and(z.object({ type: z.literal("discord") }).transform((v) => ({
        type: v.type,
    }))),
    BenefitDownloadablesCreate$inboundSchema.and(z.object({ type: z.literal("downloadables") }).transform((v) => ({
        type: v.type,
    }))),
    BenefitGitHubRepositoryCreate$inboundSchema.and(z.object({ type: z.literal("github_repository") }).transform((v) => ({
        type: v.type,
    }))),
    BenefitLicenseKeysCreate$inboundSchema.and(z.object({ type: z.literal("license_keys") }).transform((v) => ({
        type: v.type,
    }))),
]);
/** @internal */
export const BenefitCreate$outboundSchema = z.union([
    BenefitCustomCreate$outboundSchema.and(z.object({ type: z.literal("custom") }).transform((v) => ({
        type: v.type,
    }))),
    BenefitDiscordCreate$outboundSchema.and(z.object({ type: z.literal("discord") }).transform((v) => ({
        type: v.type,
    }))),
    BenefitDownloadablesCreate$outboundSchema.and(z.object({ type: z.literal("downloadables") }).transform((v) => ({
        type: v.type,
    }))),
    BenefitGitHubRepositoryCreate$outboundSchema.and(z.object({ type: z.literal("github_repository") }).transform((v) => ({
        type: v.type,
    }))),
    BenefitLicenseKeysCreate$outboundSchema.and(z.object({ type: z.literal("license_keys") }).transform((v) => ({
        type: v.type,
    }))),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitCreate$;
(function (BenefitCreate$) {
    /** @deprecated use `BenefitCreate$inboundSchema` instead. */
    BenefitCreate$.inboundSchema = BenefitCreate$inboundSchema;
    /** @deprecated use `BenefitCreate$outboundSchema` instead. */
    BenefitCreate$.outboundSchema = BenefitCreate$outboundSchema;
})(BenefitCreate$ || (BenefitCreate$ = {}));
export function benefitCreateToJSON(benefitCreate) {
    return JSON.stringify(BenefitCreate$outboundSchema.parse(benefitCreate));
}
export function benefitCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitCreate' from JSON`);
}
//# sourceMappingURL=benefitcreate.js.map