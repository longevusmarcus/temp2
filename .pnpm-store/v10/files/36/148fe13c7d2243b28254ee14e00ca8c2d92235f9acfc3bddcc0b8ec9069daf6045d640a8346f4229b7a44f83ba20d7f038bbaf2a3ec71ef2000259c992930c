/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { organizationsCreate } from "../funcs/organizationsCreate.js";
import { organizationsGet } from "../funcs/organizationsGet.js";
import { organizationsList } from "../funcs/organizationsList.js";
import { organizationsUpdate } from "../funcs/organizationsUpdate.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
import { unwrapResultIterator } from "../types/operations.js";
export class Organizations extends ClientSDK {
    /**
     * List Organizations
     *
     * @remarks
     * List organizations.
     *
     * **Scopes**: `organizations:read` `organizations:write`
     */
    async list(request, options) {
        return unwrapResultIterator(organizationsList(this, request, options));
    }
    /**
     * Create Organization
     *
     * @remarks
     * Create an organization.
     *
     * **Scopes**: `organizations:write`
     */
    async create(request, options) {
        return unwrapAsync(organizationsCreate(this, request, options));
    }
    /**
     * Get Organization
     *
     * @remarks
     * Get an organization by ID.
     *
     * **Scopes**: `organizations:read` `organizations:write`
     */
    async get(request, options) {
        return unwrapAsync(organizationsGet(this, request, options));
    }
    /**
     * Update Organization
     *
     * @remarks
     * Update an organization.
     *
     * **Scopes**: `organizations:write`
     */
    async update(request, options) {
        return unwrapAsync(organizationsUpdate(this, request, options));
    }
}
//# sourceMappingURL=organizations.js.map