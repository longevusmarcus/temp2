/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { LegacyRecurringProductPriceCustom$inboundSchema, LegacyRecurringProductPriceCustom$outboundSchema, } from "./legacyrecurringproductpricecustom.js";
import { LegacyRecurringProductPriceFixed$inboundSchema, LegacyRecurringProductPriceFixed$outboundSchema, } from "./legacyrecurringproductpricefixed.js";
import { LegacyRecurringProductPriceFree$inboundSchema, LegacyRecurringProductPriceFree$outboundSchema, } from "./legacyrecurringproductpricefree.js";
/** @internal */
export const LegacyRecurringProductPrice$inboundSchema = z.union([
    LegacyRecurringProductPriceFree$inboundSchema.and(z.object({ amount_type: z.literal("free") }).transform((v) => ({
        amountType: v.amount_type,
    }))),
    LegacyRecurringProductPriceFixed$inboundSchema.and(z.object({ amount_type: z.literal("fixed") }).transform((v) => ({
        amountType: v.amount_type,
    }))),
    LegacyRecurringProductPriceCustom$inboundSchema.and(z.object({ amount_type: z.literal("custom") }).transform((v) => ({
        amountType: v.amount_type,
    }))),
]);
/** @internal */
export const LegacyRecurringProductPrice$outboundSchema = z.union([
    LegacyRecurringProductPriceFree$outboundSchema.and(z.object({ amountType: z.literal("free") }).transform((v) => ({
        amount_type: v.amountType,
    }))),
    LegacyRecurringProductPriceFixed$outboundSchema.and(z.object({ amountType: z.literal("fixed") }).transform((v) => ({
        amount_type: v.amountType,
    }))),
    LegacyRecurringProductPriceCustom$outboundSchema.and(z.object({ amountType: z.literal("custom") }).transform((v) => ({
        amount_type: v.amountType,
    }))),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var LegacyRecurringProductPrice$;
(function (LegacyRecurringProductPrice$) {
    /** @deprecated use `LegacyRecurringProductPrice$inboundSchema` instead. */
    LegacyRecurringProductPrice$.inboundSchema = LegacyRecurringProductPrice$inboundSchema;
    /** @deprecated use `LegacyRecurringProductPrice$outboundSchema` instead. */
    LegacyRecurringProductPrice$.outboundSchema = LegacyRecurringProductPrice$outboundSchema;
})(LegacyRecurringProductPrice$ || (LegacyRecurringProductPrice$ = {}));
export function legacyRecurringProductPriceToJSON(legacyRecurringProductPrice) {
    return JSON.stringify(LegacyRecurringProductPrice$outboundSchema.parse(legacyRecurringProductPrice));
}
export function legacyRecurringProductPriceFromJSON(jsonString) {
    return safeParse(jsonString, (x) => LegacyRecurringProductPrice$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'LegacyRecurringProductPrice' from JSON`);
}
//# sourceMappingURL=legacyrecurringproductprice.js.map