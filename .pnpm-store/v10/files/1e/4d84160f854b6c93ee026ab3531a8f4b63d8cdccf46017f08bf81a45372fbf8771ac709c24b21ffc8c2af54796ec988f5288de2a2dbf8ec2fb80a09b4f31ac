/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomerPortalLicenseKeysGetSecurity$inboundSchema = z.object({
    customer_session: z.string(),
}).transform((v) => {
    return remap$(v, {
        "customer_session": "customerSession",
    });
});
/** @internal */
export const CustomerPortalLicenseKeysGetSecurity$outboundSchema = z.object({
    customerSession: z.string(),
}).transform((v) => {
    return remap$(v, {
        customerSession: "customer_session",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalLicenseKeysGetSecurity$;
(function (CustomerPortalLicenseKeysGetSecurity$) {
    /** @deprecated use `CustomerPortalLicenseKeysGetSecurity$inboundSchema` instead. */
    CustomerPortalLicenseKeysGetSecurity$.inboundSchema = CustomerPortalLicenseKeysGetSecurity$inboundSchema;
    /** @deprecated use `CustomerPortalLicenseKeysGetSecurity$outboundSchema` instead. */
    CustomerPortalLicenseKeysGetSecurity$.outboundSchema = CustomerPortalLicenseKeysGetSecurity$outboundSchema;
})(CustomerPortalLicenseKeysGetSecurity$ || (CustomerPortalLicenseKeysGetSecurity$ = {}));
export function customerPortalLicenseKeysGetSecurityToJSON(customerPortalLicenseKeysGetSecurity) {
    return JSON.stringify(CustomerPortalLicenseKeysGetSecurity$outboundSchema.parse(customerPortalLicenseKeysGetSecurity));
}
export function customerPortalLicenseKeysGetSecurityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalLicenseKeysGetSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalLicenseKeysGetSecurity' from JSON`);
}
/** @internal */
export const CustomerPortalLicenseKeysGetRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const CustomerPortalLicenseKeysGetRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalLicenseKeysGetRequest$;
(function (CustomerPortalLicenseKeysGetRequest$) {
    /** @deprecated use `CustomerPortalLicenseKeysGetRequest$inboundSchema` instead. */
    CustomerPortalLicenseKeysGetRequest$.inboundSchema = CustomerPortalLicenseKeysGetRequest$inboundSchema;
    /** @deprecated use `CustomerPortalLicenseKeysGetRequest$outboundSchema` instead. */
    CustomerPortalLicenseKeysGetRequest$.outboundSchema = CustomerPortalLicenseKeysGetRequest$outboundSchema;
})(CustomerPortalLicenseKeysGetRequest$ || (CustomerPortalLicenseKeysGetRequest$ = {}));
export function customerPortalLicenseKeysGetRequestToJSON(customerPortalLicenseKeysGetRequest) {
    return JSON.stringify(CustomerPortalLicenseKeysGetRequest$outboundSchema.parse(customerPortalLicenseKeysGetRequest));
}
export function customerPortalLicenseKeysGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalLicenseKeysGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalLicenseKeysGetRequest' from JSON`);
}
//# sourceMappingURL=customerportallicensekeysget.js.map