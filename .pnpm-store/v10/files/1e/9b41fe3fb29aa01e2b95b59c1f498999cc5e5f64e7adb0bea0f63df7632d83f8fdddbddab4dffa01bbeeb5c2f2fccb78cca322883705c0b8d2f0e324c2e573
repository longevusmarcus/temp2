/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomFieldSelectOption$inboundSchema = z.object({
    value: z.string(),
    label: z.string(),
});
/** @internal */
export const CustomFieldSelectOption$outboundSchema = z.object({
    value: z.string(),
    label: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldSelectOption$;
(function (CustomFieldSelectOption$) {
    /** @deprecated use `CustomFieldSelectOption$inboundSchema` instead. */
    CustomFieldSelectOption$.inboundSchema = CustomFieldSelectOption$inboundSchema;
    /** @deprecated use `CustomFieldSelectOption$outboundSchema` instead. */
    CustomFieldSelectOption$.outboundSchema = CustomFieldSelectOption$outboundSchema;
})(CustomFieldSelectOption$ || (CustomFieldSelectOption$ = {}));
export function customFieldSelectOptionToJSON(customFieldSelectOption) {
    return JSON.stringify(CustomFieldSelectOption$outboundSchema.parse(customFieldSelectOption));
}
export function customFieldSelectOptionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldSelectOption$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldSelectOption' from JSON`);
}
//# sourceMappingURL=customfieldselectoption.js.map