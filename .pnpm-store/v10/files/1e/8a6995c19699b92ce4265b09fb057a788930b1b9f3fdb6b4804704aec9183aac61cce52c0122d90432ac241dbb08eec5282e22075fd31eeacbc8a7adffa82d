/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CustomerSubscriptionSortProperty$inboundSchema, CustomerSubscriptionSortProperty$outboundSchema, } from "../components/customersubscriptionsortproperty.js";
import { ListResourceCustomerSubscription$inboundSchema, ListResourceCustomerSubscription$outboundSchema, } from "../components/listresourcecustomersubscription.js";
/** @internal */
export const CustomerPortalSubscriptionsListSecurity$inboundSchema = z.object({
    customer_session: z.string(),
}).transform((v) => {
    return remap$(v, {
        "customer_session": "customerSession",
    });
});
/** @internal */
export const CustomerPortalSubscriptionsListSecurity$outboundSchema = z.object({
    customerSession: z.string(),
}).transform((v) => {
    return remap$(v, {
        customerSession: "customer_session",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalSubscriptionsListSecurity$;
(function (CustomerPortalSubscriptionsListSecurity$) {
    /** @deprecated use `CustomerPortalSubscriptionsListSecurity$inboundSchema` instead. */
    CustomerPortalSubscriptionsListSecurity$.inboundSchema = CustomerPortalSubscriptionsListSecurity$inboundSchema;
    /** @deprecated use `CustomerPortalSubscriptionsListSecurity$outboundSchema` instead. */
    CustomerPortalSubscriptionsListSecurity$.outboundSchema = CustomerPortalSubscriptionsListSecurity$outboundSchema;
})(CustomerPortalSubscriptionsListSecurity$ || (CustomerPortalSubscriptionsListSecurity$ = {}));
export function customerPortalSubscriptionsListSecurityToJSON(customerPortalSubscriptionsListSecurity) {
    return JSON.stringify(CustomerPortalSubscriptionsListSecurity$outboundSchema.parse(customerPortalSubscriptionsListSecurity));
}
export function customerPortalSubscriptionsListSecurityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalSubscriptionsListSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalSubscriptionsListSecurity' from JSON`);
}
/** @internal */
export const CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$;
(function (CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$.inboundSchema = CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$.outboundSchema = CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$outboundSchema;
})(CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$ || (CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$ = {}));
export function customerPortalSubscriptionsListQueryParamOrganizationIDFilterToJSON(customerPortalSubscriptionsListQueryParamOrganizationIDFilter) {
    return JSON.stringify(CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$outboundSchema
        .parse(customerPortalSubscriptionsListQueryParamOrganizationIDFilter));
}
export function customerPortalSubscriptionsListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'CustomerPortalSubscriptionsListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
export const CustomerPortalSubscriptionsListQueryParamProductIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const CustomerPortalSubscriptionsListQueryParamProductIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalSubscriptionsListQueryParamProductIDFilter$;
(function (CustomerPortalSubscriptionsListQueryParamProductIDFilter$) {
    /** @deprecated use `CustomerPortalSubscriptionsListQueryParamProductIDFilter$inboundSchema` instead. */
    CustomerPortalSubscriptionsListQueryParamProductIDFilter$.inboundSchema = CustomerPortalSubscriptionsListQueryParamProductIDFilter$inboundSchema;
    /** @deprecated use `CustomerPortalSubscriptionsListQueryParamProductIDFilter$outboundSchema` instead. */
    CustomerPortalSubscriptionsListQueryParamProductIDFilter$.outboundSchema = CustomerPortalSubscriptionsListQueryParamProductIDFilter$outboundSchema;
})(CustomerPortalSubscriptionsListQueryParamProductIDFilter$ || (CustomerPortalSubscriptionsListQueryParamProductIDFilter$ = {}));
export function customerPortalSubscriptionsListQueryParamProductIDFilterToJSON(customerPortalSubscriptionsListQueryParamProductIDFilter) {
    return JSON.stringify(CustomerPortalSubscriptionsListQueryParamProductIDFilter$outboundSchema
        .parse(customerPortalSubscriptionsListQueryParamProductIDFilter));
}
export function customerPortalSubscriptionsListQueryParamProductIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalSubscriptionsListQueryParamProductIDFilter$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'CustomerPortalSubscriptionsListQueryParamProductIDFilter' from JSON`);
}
/** @internal */
export const CustomerPortalSubscriptionsListRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    product_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    active: z.nullable(z.boolean()).optional(),
    query: z.nullable(z.string()).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(CustomerSubscriptionSortProperty$inboundSchema))
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "organization_id": "organizationId",
        "product_id": "productId",
    });
});
/** @internal */
export const CustomerPortalSubscriptionsListRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    productId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    active: z.nullable(z.boolean()).optional(),
    query: z.nullable(z.string()).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(CustomerSubscriptionSortProperty$outboundSchema))
        .optional(),
}).transform((v) => {
    return remap$(v, {
        organizationId: "organization_id",
        productId: "product_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalSubscriptionsListRequest$;
(function (CustomerPortalSubscriptionsListRequest$) {
    /** @deprecated use `CustomerPortalSubscriptionsListRequest$inboundSchema` instead. */
    CustomerPortalSubscriptionsListRequest$.inboundSchema = CustomerPortalSubscriptionsListRequest$inboundSchema;
    /** @deprecated use `CustomerPortalSubscriptionsListRequest$outboundSchema` instead. */
    CustomerPortalSubscriptionsListRequest$.outboundSchema = CustomerPortalSubscriptionsListRequest$outboundSchema;
})(CustomerPortalSubscriptionsListRequest$ || (CustomerPortalSubscriptionsListRequest$ = {}));
export function customerPortalSubscriptionsListRequestToJSON(customerPortalSubscriptionsListRequest) {
    return JSON.stringify(CustomerPortalSubscriptionsListRequest$outboundSchema.parse(customerPortalSubscriptionsListRequest));
}
export function customerPortalSubscriptionsListRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalSubscriptionsListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalSubscriptionsListRequest' from JSON`);
}
/** @internal */
export const CustomerPortalSubscriptionsListResponse$inboundSchema = z.object({
    Result: ListResourceCustomerSubscription$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Result": "result",
    });
});
/** @internal */
export const CustomerPortalSubscriptionsListResponse$outboundSchema = z.object({
    result: ListResourceCustomerSubscription$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalSubscriptionsListResponse$;
(function (CustomerPortalSubscriptionsListResponse$) {
    /** @deprecated use `CustomerPortalSubscriptionsListResponse$inboundSchema` instead. */
    CustomerPortalSubscriptionsListResponse$.inboundSchema = CustomerPortalSubscriptionsListResponse$inboundSchema;
    /** @deprecated use `CustomerPortalSubscriptionsListResponse$outboundSchema` instead. */
    CustomerPortalSubscriptionsListResponse$.outboundSchema = CustomerPortalSubscriptionsListResponse$outboundSchema;
})(CustomerPortalSubscriptionsListResponse$ || (CustomerPortalSubscriptionsListResponse$ = {}));
export function customerPortalSubscriptionsListResponseToJSON(customerPortalSubscriptionsListResponse) {
    return JSON.stringify(CustomerPortalSubscriptionsListResponse$outboundSchema.parse(customerPortalSubscriptionsListResponse));
}
export function customerPortalSubscriptionsListResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalSubscriptionsListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalSubscriptionsListResponse' from JSON`);
}
//# sourceMappingURL=customerportalsubscriptionslist.js.map