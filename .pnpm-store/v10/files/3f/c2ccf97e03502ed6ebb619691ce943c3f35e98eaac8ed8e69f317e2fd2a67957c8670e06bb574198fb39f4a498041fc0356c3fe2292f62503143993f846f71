"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscriptionCancel$ = exports.SubscriptionCancel$outboundSchema = exports.SubscriptionCancel$inboundSchema = void 0;
exports.subscriptionCancelToJSON = subscriptionCancelToJSON;
exports.subscriptionCancelFromJSON = subscriptionCancelFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const customercancellationreason_js_1 = require("./customercancellationreason.js");
/** @internal */
exports.SubscriptionCancel$inboundSchema = z.object({
    cancel_at_period_end: z.nullable(z.boolean()).optional(),
    revoke: z.nullable(z.literal(true)).optional(),
    customer_cancellation_reason: z.nullable(customercancellationreason_js_1.CustomerCancellationReason$inboundSchema).optional(),
    customer_cancellation_comment: z.nullable(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "cancel_at_period_end": "cancelAtPeriodEnd",
        "customer_cancellation_reason": "customerCancellationReason",
        "customer_cancellation_comment": "customerCancellationComment",
    });
});
/** @internal */
exports.SubscriptionCancel$outboundSchema = z.object({
    cancelAtPeriodEnd: z.nullable(z.boolean()).optional(),
    revoke: z.nullable(z.literal(true).default(true)),
    customerCancellationReason: z.nullable(customercancellationreason_js_1.CustomerCancellationReason$outboundSchema).optional(),
    customerCancellationComment: z.nullable(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        cancelAtPeriodEnd: "cancel_at_period_end",
        customerCancellationReason: "customer_cancellation_reason",
        customerCancellationComment: "customer_cancellation_comment",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SubscriptionCancel$;
(function (SubscriptionCancel$) {
    /** @deprecated use `SubscriptionCancel$inboundSchema` instead. */
    SubscriptionCancel$.inboundSchema = exports.SubscriptionCancel$inboundSchema;
    /** @deprecated use `SubscriptionCancel$outboundSchema` instead. */
    SubscriptionCancel$.outboundSchema = exports.SubscriptionCancel$outboundSchema;
})(SubscriptionCancel$ || (exports.SubscriptionCancel$ = SubscriptionCancel$ = {}));
function subscriptionCancelToJSON(subscriptionCancel) {
    return JSON.stringify(exports.SubscriptionCancel$outboundSchema.parse(subscriptionCancel));
}
function subscriptionCancelFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.SubscriptionCancel$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriptionCancel' from JSON`);
}
//# sourceMappingURL=subscriptioncancel.js.map