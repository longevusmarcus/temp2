"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrganizationSubscriptionSettings$ = exports.OrganizationSubscriptionSettings$outboundSchema = exports.OrganizationSubscriptionSettings$inboundSchema = void 0;
exports.organizationSubscriptionSettingsToJSON = organizationSubscriptionSettingsToJSON;
exports.organizationSubscriptionSettingsFromJSON = organizationSubscriptionSettingsFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const subscriptionprorationbehavior_js_1 = require("./subscriptionprorationbehavior.js");
/** @internal */
exports.OrganizationSubscriptionSettings$inboundSchema = z.object({
    allow_multiple_subscriptions: z.boolean(),
    allow_customer_updates: z.boolean(),
    proration_behavior: subscriptionprorationbehavior_js_1.SubscriptionProrationBehavior$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "allow_multiple_subscriptions": "allowMultipleSubscriptions",
        "allow_customer_updates": "allowCustomerUpdates",
        "proration_behavior": "prorationBehavior",
    });
});
/** @internal */
exports.OrganizationSubscriptionSettings$outboundSchema = z.object({
    allowMultipleSubscriptions: z.boolean(),
    allowCustomerUpdates: z.boolean(),
    prorationBehavior: subscriptionprorationbehavior_js_1.SubscriptionProrationBehavior$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        allowMultipleSubscriptions: "allow_multiple_subscriptions",
        allowCustomerUpdates: "allow_customer_updates",
        prorationBehavior: "proration_behavior",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrganizationSubscriptionSettings$;
(function (OrganizationSubscriptionSettings$) {
    /** @deprecated use `OrganizationSubscriptionSettings$inboundSchema` instead. */
    OrganizationSubscriptionSettings$.inboundSchema = exports.OrganizationSubscriptionSettings$inboundSchema;
    /** @deprecated use `OrganizationSubscriptionSettings$outboundSchema` instead. */
    OrganizationSubscriptionSettings$.outboundSchema = exports.OrganizationSubscriptionSettings$outboundSchema;
})(OrganizationSubscriptionSettings$ || (exports.OrganizationSubscriptionSettings$ = OrganizationSubscriptionSettings$ = {}));
function organizationSubscriptionSettingsToJSON(organizationSubscriptionSettings) {
    return JSON.stringify(exports.OrganizationSubscriptionSettings$outboundSchema.parse(organizationSubscriptionSettings));
}
function organizationSubscriptionSettingsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.OrganizationSubscriptionSettings$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrganizationSubscriptionSettings' from JSON`);
}
//# sourceMappingURL=organizationsubscriptionsettings.js.map