/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { MetricsIntervalLimit$inboundSchema, MetricsIntervalLimit$outboundSchema, } from "./metricsintervallimit.js";
/** @internal */
export const MetricsIntervalsLimits$inboundSchema = z.object({
    hour: MetricsIntervalLimit$inboundSchema,
    day: MetricsIntervalLimit$inboundSchema,
    week: MetricsIntervalLimit$inboundSchema,
    month: MetricsIntervalLimit$inboundSchema,
    year: MetricsIntervalLimit$inboundSchema,
});
/** @internal */
export const MetricsIntervalsLimits$outboundSchema = z.object({
    hour: MetricsIntervalLimit$outboundSchema,
    day: MetricsIntervalLimit$outboundSchema,
    week: MetricsIntervalLimit$outboundSchema,
    month: MetricsIntervalLimit$outboundSchema,
    year: MetricsIntervalLimit$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var MetricsIntervalsLimits$;
(function (MetricsIntervalsLimits$) {
    /** @deprecated use `MetricsIntervalsLimits$inboundSchema` instead. */
    MetricsIntervalsLimits$.inboundSchema = MetricsIntervalsLimits$inboundSchema;
    /** @deprecated use `MetricsIntervalsLimits$outboundSchema` instead. */
    MetricsIntervalsLimits$.outboundSchema = MetricsIntervalsLimits$outboundSchema;
})(MetricsIntervalsLimits$ || (MetricsIntervalsLimits$ = {}));
export function metricsIntervalsLimitsToJSON(metricsIntervalsLimits) {
    return JSON.stringify(MetricsIntervalsLimits$outboundSchema.parse(metricsIntervalsLimits));
}
export function metricsIntervalsLimitsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => MetricsIntervalsLimits$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'MetricsIntervalsLimits' from JSON`);
}
//# sourceMappingURL=metricsintervalslimits.js.map