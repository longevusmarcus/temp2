/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { CustomFieldNumberProperties$inboundSchema, CustomFieldNumberProperties$outboundSchema, } from "./customfieldnumberproperties.js";
/** @internal */
export const CustomFieldUpdateNumberMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
export const CustomFieldUpdateNumberMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldUpdateNumberMetadata$;
(function (CustomFieldUpdateNumberMetadata$) {
    /** @deprecated use `CustomFieldUpdateNumberMetadata$inboundSchema` instead. */
    CustomFieldUpdateNumberMetadata$.inboundSchema = CustomFieldUpdateNumberMetadata$inboundSchema;
    /** @deprecated use `CustomFieldUpdateNumberMetadata$outboundSchema` instead. */
    CustomFieldUpdateNumberMetadata$.outboundSchema = CustomFieldUpdateNumberMetadata$outboundSchema;
})(CustomFieldUpdateNumberMetadata$ || (CustomFieldUpdateNumberMetadata$ = {}));
export function customFieldUpdateNumberMetadataToJSON(customFieldUpdateNumberMetadata) {
    return JSON.stringify(CustomFieldUpdateNumberMetadata$outboundSchema.parse(customFieldUpdateNumberMetadata));
}
export function customFieldUpdateNumberMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldUpdateNumberMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldUpdateNumberMetadata' from JSON`);
}
/** @internal */
export const CustomFieldUpdateNumber$inboundSchema = z.object({
    metadata: z.nullable(z.record(z.union([z.string(), z.number().int(), z.boolean()]))).optional(),
    name: z.nullable(z.string()).optional(),
    slug: z.nullable(z.string()).optional(),
    type: z.literal("number").optional(),
    properties: z.nullable(CustomFieldNumberProperties$inboundSchema).optional(),
});
/** @internal */
export const CustomFieldUpdateNumber$outboundSchema = z.object({
    metadata: z.nullable(z.record(z.union([z.string(), z.number().int(), z.boolean()]))).optional(),
    name: z.nullable(z.string()).optional(),
    slug: z.nullable(z.string()).optional(),
    type: z.literal("number").default("number"),
    properties: z.nullable(CustomFieldNumberProperties$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldUpdateNumber$;
(function (CustomFieldUpdateNumber$) {
    /** @deprecated use `CustomFieldUpdateNumber$inboundSchema` instead. */
    CustomFieldUpdateNumber$.inboundSchema = CustomFieldUpdateNumber$inboundSchema;
    /** @deprecated use `CustomFieldUpdateNumber$outboundSchema` instead. */
    CustomFieldUpdateNumber$.outboundSchema = CustomFieldUpdateNumber$outboundSchema;
})(CustomFieldUpdateNumber$ || (CustomFieldUpdateNumber$ = {}));
export function customFieldUpdateNumberToJSON(customFieldUpdateNumber) {
    return JSON.stringify(CustomFieldUpdateNumber$outboundSchema.parse(customFieldUpdateNumber));
}
export function customFieldUpdateNumberFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldUpdateNumber$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldUpdateNumber' from JSON`);
}
//# sourceMappingURL=customfieldupdatenumber.js.map