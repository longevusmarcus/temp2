/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { AuthorizationCodeTokenRequest$inboundSchema, AuthorizationCodeTokenRequest$outboundSchema, } from "../components/authorizationcodetokenrequest.js";
import { RefreshTokenRequest$inboundSchema, RefreshTokenRequest$outboundSchema, } from "../components/refreshtokenrequest.js";
/** @internal */
export const Oauth2RequestTokenRequestBody$inboundSchema = z.union([
    RefreshTokenRequest$inboundSchema,
    AuthorizationCodeTokenRequest$inboundSchema,
]);
/** @internal */
export const Oauth2RequestTokenRequestBody$outboundSchema = z.union([
    RefreshTokenRequest$outboundSchema,
    AuthorizationCodeTokenRequest$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Oauth2RequestTokenRequestBody$;
(function (Oauth2RequestTokenRequestBody$) {
    /** @deprecated use `Oauth2RequestTokenRequestBody$inboundSchema` instead. */
    Oauth2RequestTokenRequestBody$.inboundSchema = Oauth2RequestTokenRequestBody$inboundSchema;
    /** @deprecated use `Oauth2RequestTokenRequestBody$outboundSchema` instead. */
    Oauth2RequestTokenRequestBody$.outboundSchema = Oauth2RequestTokenRequestBody$outboundSchema;
})(Oauth2RequestTokenRequestBody$ || (Oauth2RequestTokenRequestBody$ = {}));
export function oauth2RequestTokenRequestBodyToJSON(oauth2RequestTokenRequestBody) {
    return JSON.stringify(Oauth2RequestTokenRequestBody$outboundSchema.parse(oauth2RequestTokenRequestBody));
}
export function oauth2RequestTokenRequestBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Oauth2RequestTokenRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Oauth2RequestTokenRequestBody' from JSON`);
}
//# sourceMappingURL=oauth2requesttoken.js.map