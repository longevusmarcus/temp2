import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { UserInfoOrganization, UserInfoOrganization$Outbound } from "../components/userinfoorganization.js";
import { UserInfoUser, UserInfoUser$Outbound } from "../components/userinfouser.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Successful Response
 */
export type Oauth2UserinfoResponseOauth2Userinfo = UserInfoOrganization | UserInfoUser;
/** @internal */
export declare const Oauth2UserinfoResponseOauth2Userinfo$inboundSchema: z.ZodType<Oauth2UserinfoResponseOauth2Userinfo, z.ZodTypeDef, unknown>;
/** @internal */
export type Oauth2UserinfoResponseOauth2Userinfo$Outbound = UserInfoOrganization$Outbound | UserInfoUser$Outbound;
/** @internal */
export declare const Oauth2UserinfoResponseOauth2Userinfo$outboundSchema: z.ZodType<Oauth2UserinfoResponseOauth2Userinfo$Outbound, z.ZodTypeDef, Oauth2UserinfoResponseOauth2Userinfo>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Oauth2UserinfoResponseOauth2Userinfo$ {
    /** @deprecated use `Oauth2UserinfoResponseOauth2Userinfo$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Oauth2UserinfoResponseOauth2Userinfo, z.ZodTypeDef, unknown>;
    /** @deprecated use `Oauth2UserinfoResponseOauth2Userinfo$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Oauth2UserinfoResponseOauth2Userinfo$Outbound, z.ZodTypeDef, Oauth2UserinfoResponseOauth2Userinfo>;
    /** @deprecated use `Oauth2UserinfoResponseOauth2Userinfo$Outbound` instead. */
    type Outbound = Oauth2UserinfoResponseOauth2Userinfo$Outbound;
}
export declare function oauth2UserinfoResponseOauth2UserinfoToJSON(oauth2UserinfoResponseOauth2Userinfo: Oauth2UserinfoResponseOauth2Userinfo): string;
export declare function oauth2UserinfoResponseOauth2UserinfoFromJSON(jsonString: string): SafeParseResult<Oauth2UserinfoResponseOauth2Userinfo, SDKValidationError>;
//# sourceMappingURL=oauth2userinfo.d.ts.map