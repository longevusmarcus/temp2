/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const OrganizationId$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const OrganizationId$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrganizationId$;
(function (OrganizationId$) {
    /** @deprecated use `OrganizationId$inboundSchema` instead. */
    OrganizationId$.inboundSchema = OrganizationId$inboundSchema;
    /** @deprecated use `OrganizationId$outboundSchema` instead. */
    OrganizationId$.outboundSchema = OrganizationId$outboundSchema;
})(OrganizationId$ || (OrganizationId$ = {}));
export function organizationIdToJSON(organizationId) {
    return JSON.stringify(OrganizationId$outboundSchema.parse(organizationId));
}
export function organizationIdFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrganizationId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrganizationId' from JSON`);
}
/** @internal */
export const SubscriptionsExportRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "organization_id": "organizationId",
    });
});
/** @internal */
export const SubscriptionsExportRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
}).transform((v) => {
    return remap$(v, {
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SubscriptionsExportRequest$;
(function (SubscriptionsExportRequest$) {
    /** @deprecated use `SubscriptionsExportRequest$inboundSchema` instead. */
    SubscriptionsExportRequest$.inboundSchema = SubscriptionsExportRequest$inboundSchema;
    /** @deprecated use `SubscriptionsExportRequest$outboundSchema` instead. */
    SubscriptionsExportRequest$.outboundSchema = SubscriptionsExportRequest$outboundSchema;
})(SubscriptionsExportRequest$ || (SubscriptionsExportRequest$ = {}));
export function subscriptionsExportRequestToJSON(subscriptionsExportRequest) {
    return JSON.stringify(SubscriptionsExportRequest$outboundSchema.parse(subscriptionsExportRequest));
}
export function subscriptionsExportRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SubscriptionsExportRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriptionsExportRequest' from JSON`);
}
//# sourceMappingURL=subscriptionsexport.js.map