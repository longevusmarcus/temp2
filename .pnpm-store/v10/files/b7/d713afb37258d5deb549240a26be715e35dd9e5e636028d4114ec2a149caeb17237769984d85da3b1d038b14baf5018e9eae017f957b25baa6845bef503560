/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const ProductBenefitsUpdate$inboundSchema = z.object({
    benefits: z.array(z.string()),
});
/** @internal */
export const ProductBenefitsUpdate$outboundSchema = z.object({
    benefits: z.array(z.string()),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ProductBenefitsUpdate$;
(function (ProductBenefitsUpdate$) {
    /** @deprecated use `ProductBenefitsUpdate$inboundSchema` instead. */
    ProductBenefitsUpdate$.inboundSchema = ProductBenefitsUpdate$inboundSchema;
    /** @deprecated use `ProductBenefitsUpdate$outboundSchema` instead. */
    ProductBenefitsUpdate$.outboundSchema = ProductBenefitsUpdate$outboundSchema;
})(ProductBenefitsUpdate$ || (ProductBenefitsUpdate$ = {}));
export function productBenefitsUpdateToJSON(productBenefitsUpdate) {
    return JSON.stringify(ProductBenefitsUpdate$outboundSchema.parse(productBenefitsUpdate));
}
export function productBenefitsUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ProductBenefitsUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductBenefitsUpdate' from JSON`);
}
//# sourceMappingURL=productbenefitsupdate.js.map