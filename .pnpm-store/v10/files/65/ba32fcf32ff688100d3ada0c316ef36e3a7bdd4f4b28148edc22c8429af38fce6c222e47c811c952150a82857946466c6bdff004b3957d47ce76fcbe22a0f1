/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Pledge$inboundSchema, Pledge$outboundSchema, } from "./pledge.js";
/** @internal */
export const WebhookPledgeUpdatedPayload$inboundSchema = z.object({
    type: z.literal("pledge.updated").optional(),
    data: Pledge$inboundSchema,
});
/** @internal */
export const WebhookPledgeUpdatedPayload$outboundSchema = z.object({
    type: z.literal("pledge.updated").default("pledge.updated"),
    data: Pledge$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookPledgeUpdatedPayload$;
(function (WebhookPledgeUpdatedPayload$) {
    /** @deprecated use `WebhookPledgeUpdatedPayload$inboundSchema` instead. */
    WebhookPledgeUpdatedPayload$.inboundSchema = WebhookPledgeUpdatedPayload$inboundSchema;
    /** @deprecated use `WebhookPledgeUpdatedPayload$outboundSchema` instead. */
    WebhookPledgeUpdatedPayload$.outboundSchema = WebhookPledgeUpdatedPayload$outboundSchema;
})(WebhookPledgeUpdatedPayload$ || (WebhookPledgeUpdatedPayload$ = {}));
export function webhookPledgeUpdatedPayloadToJSON(webhookPledgeUpdatedPayload) {
    return JSON.stringify(WebhookPledgeUpdatedPayload$outboundSchema.parse(webhookPledgeUpdatedPayload));
}
export function webhookPledgeUpdatedPayloadFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookPledgeUpdatedPayload$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookPledgeUpdatedPayload' from JSON`);
}
//# sourceMappingURL=webhookpledgeupdatedpayload.js.map