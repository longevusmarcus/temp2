/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const Label$inboundSchema = z
    .object({
    name: z.string(),
    color: z.string(),
});
/** @internal */
export const Label$outboundSchema = z.object({
    name: z.string(),
    color: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Label$;
(function (Label$) {
    /** @deprecated use `Label$inboundSchema` instead. */
    Label$.inboundSchema = Label$inboundSchema;
    /** @deprecated use `Label$outboundSchema` instead. */
    Label$.outboundSchema = Label$outboundSchema;
})(Label$ || (Label$ = {}));
export function labelToJSON(label) {
    return JSON.stringify(Label$outboundSchema.parse(label));
}
export function labelFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Label$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Label' from JSON`);
}
//# sourceMappingURL=label.js.map