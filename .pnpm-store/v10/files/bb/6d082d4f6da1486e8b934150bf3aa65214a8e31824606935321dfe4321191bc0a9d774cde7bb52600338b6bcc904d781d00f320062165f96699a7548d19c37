/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const ProductsGetRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const ProductsGetRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ProductsGetRequest$;
(function (ProductsGetRequest$) {
    /** @deprecated use `ProductsGetRequest$inboundSchema` instead. */
    ProductsGetRequest$.inboundSchema = ProductsGetRequest$inboundSchema;
    /** @deprecated use `ProductsGetRequest$outboundSchema` instead. */
    ProductsGetRequest$.outboundSchema = ProductsGetRequest$outboundSchema;
})(ProductsGetRequest$ || (ProductsGetRequest$ = {}));
export function productsGetRequestToJSON(productsGetRequest) {
    return JSON.stringify(ProductsGetRequest$outboundSchema.parse(productsGetRequest));
}
export function productsGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ProductsGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductsGetRequest' from JSON`);
}
//# sourceMappingURL=productsget.js.map