/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ListResourceBenefitGrant$inboundSchema, ListResourceBenefitGrant$outboundSchema, } from "../components/listresourcebenefitgrant.js";
/** @internal */
export const QueryParamCustomerIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const QueryParamCustomerIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var QueryParamCustomerIDFilter$;
(function (QueryParamCustomerIDFilter$) {
    /** @deprecated use `QueryParamCustomerIDFilter$inboundSchema` instead. */
    QueryParamCustomerIDFilter$.inboundSchema = QueryParamCustomerIDFilter$inboundSchema;
    /** @deprecated use `QueryParamCustomerIDFilter$outboundSchema` instead. */
    QueryParamCustomerIDFilter$.outboundSchema = QueryParamCustomerIDFilter$outboundSchema;
})(QueryParamCustomerIDFilter$ || (QueryParamCustomerIDFilter$ = {}));
export function queryParamCustomerIDFilterToJSON(queryParamCustomerIDFilter) {
    return JSON.stringify(QueryParamCustomerIDFilter$outboundSchema.parse(queryParamCustomerIDFilter));
}
export function queryParamCustomerIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => QueryParamCustomerIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamCustomerIDFilter' from JSON`);
}
/** @internal */
export const BenefitsGrantsRequest$inboundSchema = z.object({
    id: z.string(),
    is_granted: z.nullable(z.boolean()).optional(),
    customer_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
}).transform((v) => {
    return remap$(v, {
        "is_granted": "isGranted",
        "customer_id": "customerId",
    });
});
/** @internal */
export const BenefitsGrantsRequest$outboundSchema = z.object({
    id: z.string(),
    isGranted: z.nullable(z.boolean()).optional(),
    customerId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
}).transform((v) => {
    return remap$(v, {
        isGranted: "is_granted",
        customerId: "customer_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitsGrantsRequest$;
(function (BenefitsGrantsRequest$) {
    /** @deprecated use `BenefitsGrantsRequest$inboundSchema` instead. */
    BenefitsGrantsRequest$.inboundSchema = BenefitsGrantsRequest$inboundSchema;
    /** @deprecated use `BenefitsGrantsRequest$outboundSchema` instead. */
    BenefitsGrantsRequest$.outboundSchema = BenefitsGrantsRequest$outboundSchema;
})(BenefitsGrantsRequest$ || (BenefitsGrantsRequest$ = {}));
export function benefitsGrantsRequestToJSON(benefitsGrantsRequest) {
    return JSON.stringify(BenefitsGrantsRequest$outboundSchema.parse(benefitsGrantsRequest));
}
export function benefitsGrantsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitsGrantsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitsGrantsRequest' from JSON`);
}
/** @internal */
export const BenefitsGrantsResponse$inboundSchema = z.object({
    Result: ListResourceBenefitGrant$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Result": "result",
    });
});
/** @internal */
export const BenefitsGrantsResponse$outboundSchema = z.object({
    result: ListResourceBenefitGrant$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitsGrantsResponse$;
(function (BenefitsGrantsResponse$) {
    /** @deprecated use `BenefitsGrantsResponse$inboundSchema` instead. */
    BenefitsGrantsResponse$.inboundSchema = BenefitsGrantsResponse$inboundSchema;
    /** @deprecated use `BenefitsGrantsResponse$outboundSchema` instead. */
    BenefitsGrantsResponse$.outboundSchema = BenefitsGrantsResponse$outboundSchema;
})(BenefitsGrantsResponse$ || (BenefitsGrantsResponse$ = {}));
export function benefitsGrantsResponseToJSON(benefitsGrantsResponse) {
    return JSON.stringify(BenefitsGrantsResponse$outboundSchema.parse(benefitsGrantsResponse));
}
export function benefitsGrantsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitsGrantsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitsGrantsResponse' from JSON`);
}
//# sourceMappingURL=benefitsgrants.js.map