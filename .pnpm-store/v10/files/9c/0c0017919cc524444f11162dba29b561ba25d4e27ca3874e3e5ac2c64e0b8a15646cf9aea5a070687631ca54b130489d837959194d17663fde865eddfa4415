/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const TokenResponse$inboundSchema = z.object({
    access_token: z.string(),
    token_type: z.literal("Bearer").optional(),
    expires_in: z.number().int(),
    refresh_token: z.nullable(z.string()),
    scope: z.string(),
    id_token: z.string(),
}).transform((v) => {
    return remap$(v, {
        "access_token": "accessToken",
        "token_type": "tokenType",
        "expires_in": "expiresIn",
        "refresh_token": "refreshToken",
        "id_token": "idToken",
    });
});
/** @internal */
export const TokenResponse$outboundSchema = z.object({
    accessToken: z.string(),
    tokenType: z.literal("Bearer").default("Bearer"),
    expiresIn: z.number().int(),
    refreshToken: z.nullable(z.string()),
    scope: z.string(),
    idToken: z.string(),
}).transform((v) => {
    return remap$(v, {
        accessToken: "access_token",
        tokenType: "token_type",
        expiresIn: "expires_in",
        refreshToken: "refresh_token",
        idToken: "id_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TokenResponse$;
(function (TokenResponse$) {
    /** @deprecated use `TokenResponse$inboundSchema` instead. */
    TokenResponse$.inboundSchema = TokenResponse$inboundSchema;
    /** @deprecated use `TokenResponse$outboundSchema` instead. */
    TokenResponse$.outboundSchema = TokenResponse$outboundSchema;
})(TokenResponse$ || (TokenResponse$ = {}));
export function tokenResponseToJSON(tokenResponse) {
    return JSON.stringify(TokenResponse$outboundSchema.parse(tokenResponse));
}
export function tokenResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TokenResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TokenResponse' from JSON`);
}
//# sourceMappingURL=tokenresponse.js.map