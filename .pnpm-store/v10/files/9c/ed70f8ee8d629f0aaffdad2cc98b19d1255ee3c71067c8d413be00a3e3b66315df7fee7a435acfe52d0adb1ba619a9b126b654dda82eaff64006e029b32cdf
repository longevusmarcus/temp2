import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import { CustomerPaymentMethodCreate } from "../models/components/customerpaymentmethodcreate.js";
import { CustomerPortalCustomer } from "../models/components/customerportalcustomer.js";
import { CustomerPortalCustomerUpdate } from "../models/components/customerportalcustomerupdate.js";
import { CustomerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod, CustomerPortalCustomersAddPaymentMethodSecurity } from "../models/operations/customerportalcustomersaddpaymentmethod.js";
import { CustomerPortalCustomersDeletePaymentMethodRequest, CustomerPortalCustomersDeletePaymentMethodSecurity } from "../models/operations/customerportalcustomersdeletepaymentmethod.js";
import { CustomerPortalCustomersGetSecurity } from "../models/operations/customerportalcustomersget.js";
import { CustomerPortalCustomersGetPaymentMethodsRequest, CustomerPortalCustomersGetPaymentMethodsResponse, CustomerPortalCustomersGetPaymentMethodsSecurity } from "../models/operations/customerportalcustomersgetpaymentmethods.js";
import { CustomerPortalCustomersUpdateSecurity } from "../models/operations/customerportalcustomersupdate.js";
import { PageIterator } from "../types/operations.js";
export declare class PolarCustomers extends ClientSDK {
    /**
     * Get Customer
     *
     * @remarks
     * Get authenticated customer.
     *
     * **Scopes**: `customer_portal:read` `customer_portal:write`
     */
    get(security: CustomerPortalCustomersGetSecurity, options?: RequestOptions): Promise<CustomerPortalCustomer>;
    /**
     * Update Customer
     *
     * @remarks
     * Update authenticated customer.
     *
     * **Scopes**: `customer_portal:write`
     */
    update(security: CustomerPortalCustomersUpdateSecurity, request: CustomerPortalCustomerUpdate, options?: RequestOptions): Promise<CustomerPortalCustomer>;
    /**
     * Get Customer Payment Methods
     *
     * @remarks
     * Get saved payment methods of the authenticated customer.
     *
     * **Scopes**: `customer_portal:read` `customer_portal:write`
     */
    getPaymentMethods(security: CustomerPortalCustomersGetPaymentMethodsSecurity, request: CustomerPortalCustomersGetPaymentMethodsRequest, options?: RequestOptions): Promise<PageIterator<CustomerPortalCustomersGetPaymentMethodsResponse, {
        page: number;
    }>>;
    /**
     * Add Customer Payment Method
     *
     * @remarks
     * Add a payment method to the authenticated customer.
     *
     * **Scopes**: `customer_portal:read` `customer_portal:write`
     */
    addPaymentMethod(security: CustomerPortalCustomersAddPaymentMethodSecurity, request: CustomerPaymentMethodCreate, options?: RequestOptions): Promise<CustomerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod>;
    /**
     * Delete Customer Payment Method
     *
     * @remarks
     * Delete a payment method from the authenticated customer.
     *
     * **Scopes**: `customer_portal:read` `customer_portal:write`
     */
    deletePaymentMethod(security: CustomerPortalCustomersDeletePaymentMethodSecurity, request: CustomerPortalCustomersDeletePaymentMethodRequest, options?: RequestOptions): Promise<void>;
}
//# sourceMappingURL=polarcustomers.d.ts.map