import { PolarCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import { LicenseKeyActivationRead } from "../models/components/licensekeyactivationread.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/errors/httpclienterrors.js";
import { HTTPValidationError } from "../models/errors/httpvalidationerror.js";
import { ResourceNotFound } from "../models/errors/resourcenotfound.js";
import { SDKError } from "../models/errors/sdkerror.js";
import { SDKValidationError } from "../models/errors/sdkvalidationerror.js";
import { Unauthorized } from "../models/errors/unauthorized.js";
import { LicenseKeysGetActivationRequest } from "../models/operations/licensekeysgetactivation.js";
import { APIPromise } from "../types/async.js";
import { Result } from "../types/fp.js";
/**
 * Get Activation
 *
 * @remarks
 * Get a license key activation.
 *
 * **Scopes**: `license_keys:read` `license_keys:write`
 */
export declare function licenseKeysGetActivation(client: PolarCore, request: LicenseKeysGetActivationRequest, options?: RequestOptions): APIPromise<Result<LicenseKeyActivationRead, Unauthorized | ResourceNotFound | HTTPValidationError | SDKError | SDKValidationError | UnexpectedClientError | InvalidRequestError | RequestAbortedError | RequestTimeoutError | ConnectionError>>;
//# sourceMappingURL=licenseKeysGetActivation.d.ts.map