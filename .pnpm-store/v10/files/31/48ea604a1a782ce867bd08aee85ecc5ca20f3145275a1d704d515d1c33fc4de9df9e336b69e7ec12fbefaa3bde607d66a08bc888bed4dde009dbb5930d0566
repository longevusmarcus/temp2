/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { MeterUpdate$inboundSchema, MeterUpdate$outboundSchema, } from "../components/meterupdate.js";
/** @internal */
export const MetersUpdateRequest$inboundSchema = z.object({
    id: z.string(),
    MeterUpdate: MeterUpdate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "MeterUpdate": "meterUpdate",
    });
});
/** @internal */
export const MetersUpdateRequest$outboundSchema = z.object({
    id: z.string(),
    meterUpdate: MeterUpdate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        meterUpdate: "MeterUpdate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var MetersUpdateRequest$;
(function (MetersUpdateRequest$) {
    /** @deprecated use `MetersUpdateRequest$inboundSchema` instead. */
    MetersUpdateRequest$.inboundSchema = MetersUpdateRequest$inboundSchema;
    /** @deprecated use `MetersUpdateRequest$outboundSchema` instead. */
    MetersUpdateRequest$.outboundSchema = MetersUpdateRequest$outboundSchema;
})(MetersUpdateRequest$ || (MetersUpdateRequest$ = {}));
export function metersUpdateRequestToJSON(metersUpdateRequest) {
    return JSON.stringify(MetersUpdateRequest$outboundSchema.parse(metersUpdateRequest));
}
export function metersUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => MetersUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'MetersUpdateRequest' from JSON`);
}
//# sourceMappingURL=metersupdate.js.map