import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { ProductPriceType } from "./productpricetype.js";
import { SubscriptionRecurringInterval } from "./subscriptionrecurringinterval.js";
/**
 * A free price for a product.
 */
export type ProductPriceFree = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the price.
     */
    id: string;
    amountType?: "free" | undefined;
    /**
     * Whether the price is archived and no longer available.
     */
    isArchived: boolean;
    /**
     * The ID of the product owning the price.
     */
    productId: string;
    type: ProductPriceType;
    /**
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    recurringInterval: SubscriptionRecurringInterval | null;
};
/** @internal */
export declare const ProductPriceFree$inboundSchema: z.ZodType<ProductPriceFree, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductPriceFree$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    amount_type: "free";
    is_archived: boolean;
    product_id: string;
    type: string;
    recurring_interval: string | null;
};
/** @internal */
export declare const ProductPriceFree$outboundSchema: z.ZodType<ProductPriceFree$Outbound, z.ZodTypeDef, ProductPriceFree>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductPriceFree$ {
    /** @deprecated use `ProductPriceFree$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductPriceFree, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductPriceFree$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductPriceFree$Outbound, z.ZodTypeDef, ProductPriceFree>;
    /** @deprecated use `ProductPriceFree$Outbound` instead. */
    type Outbound = ProductPriceFree$Outbound;
}
export declare function productPriceFreeToJSON(productPriceFree: ProductPriceFree): string;
export declare function productPriceFreeFromJSON(jsonString: string): SafeParseResult<ProductPriceFree, SDKValidationError>;
//# sourceMappingURL=productpricefree.d.ts.map