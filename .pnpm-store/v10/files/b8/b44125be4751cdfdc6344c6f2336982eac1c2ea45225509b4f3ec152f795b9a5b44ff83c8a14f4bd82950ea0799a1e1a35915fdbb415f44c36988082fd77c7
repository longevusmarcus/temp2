import { PolarCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/errors/httpclienterrors.js";
import { HTTPValidationError } from "../models/errors/httpvalidationerror.js";
import { ResourceNotFound } from "../models/errors/resourcenotfound.js";
import { SDKError } from "../models/errors/sdkerror.js";
import { SDKValidationError } from "../models/errors/sdkvalidationerror.js";
import { CustomersDeleteExternalRequest } from "../models/operations/customersdeleteexternal.js";
import { APIPromise } from "../types/async.js";
import { Result } from "../types/fp.js";
/**
 * Delete Customer by External ID
 *
 * @remarks
 * Delete a customer by external ID.
 *
 * Immediately cancels any active subscriptions and revokes any active benefits.
 *
 * **Scopes**: `customers:write`
 */
export declare function customersDeleteExternal(client: PolarCore, request: CustomersDeleteExternalRequest, options?: RequestOptions): APIPromise<Result<void, ResourceNotFound | HTTPValidationError | SDKError | SDKValidationError | UnexpectedClientError | InvalidRequestError | RequestAbortedError | RequestTimeoutError | ConnectionError>>;
//# sourceMappingURL=customersDeleteExternal.d.ts.map