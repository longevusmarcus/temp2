/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const S3FileUploadCompletedPart$inboundSchema = z.object({
    number: z.number().int(),
    checksum_etag: z.string(),
    checksum_sha256_base64: z.nullable(z.string()),
}).transform((v) => {
    return remap$(v, {
        "checksum_etag": "checksumEtag",
        "checksum_sha256_base64": "checksumSha256Base64",
    });
});
/** @internal */
export const S3FileUploadCompletedPart$outboundSchema = z.object({
    number: z.number().int(),
    checksumEtag: z.string(),
    checksumSha256Base64: z.nullable(z.string()),
}).transform((v) => {
    return remap$(v, {
        checksumEtag: "checksum_etag",
        checksumSha256Base64: "checksum_sha256_base64",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var S3FileUploadCompletedPart$;
(function (S3FileUploadCompletedPart$) {
    /** @deprecated use `S3FileUploadCompletedPart$inboundSchema` instead. */
    S3FileUploadCompletedPart$.inboundSchema = S3FileUploadCompletedPart$inboundSchema;
    /** @deprecated use `S3FileUploadCompletedPart$outboundSchema` instead. */
    S3FileUploadCompletedPart$.outboundSchema = S3FileUploadCompletedPart$outboundSchema;
})(S3FileUploadCompletedPart$ || (S3FileUploadCompletedPart$ = {}));
export function s3FileUploadCompletedPartToJSON(s3FileUploadCompletedPart) {
    return JSON.stringify(S3FileUploadCompletedPart$outboundSchema.parse(s3FileUploadCompletedPart));
}
export function s3FileUploadCompletedPartFromJSON(jsonString) {
    return safeParse(jsonString, (x) => S3FileUploadCompletedPart$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'S3FileUploadCompletedPart' from JSON`);
}
//# sourceMappingURL=s3fileuploadcompletedpart.js.map