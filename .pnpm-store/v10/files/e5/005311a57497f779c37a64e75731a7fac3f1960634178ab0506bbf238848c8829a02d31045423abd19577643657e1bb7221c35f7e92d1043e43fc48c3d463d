/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Pagination$inboundSchema, Pagination$outboundSchema, } from "./pagination.js";
import { Refund$inboundSchema, Refund$outboundSchema, } from "./refund.js";
/** @internal */
export const ListResourceRefund$inboundSchema = z.object({
    items: z.array(Refund$inboundSchema),
    pagination: Pagination$inboundSchema,
});
/** @internal */
export const ListResourceRefund$outboundSchema = z.object({
    items: z.array(Refund$outboundSchema),
    pagination: Pagination$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListResourceRefund$;
(function (ListResourceRefund$) {
    /** @deprecated use `ListResourceRefund$inboundSchema` instead. */
    ListResourceRefund$.inboundSchema = ListResourceRefund$inboundSchema;
    /** @deprecated use `ListResourceRefund$outboundSchema` instead. */
    ListResourceRefund$.outboundSchema = ListResourceRefund$outboundSchema;
})(ListResourceRefund$ || (ListResourceRefund$ = {}));
export function listResourceRefundToJSON(listResourceRefund) {
    return JSON.stringify(ListResourceRefund$outboundSchema.parse(listResourceRefund));
}
export function listResourceRefundFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListResourceRefund$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListResourceRefund' from JSON`);
}
//# sourceMappingURL=listresourcerefund.js.map