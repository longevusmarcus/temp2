import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { CustomerUpdate, CustomerUpdate$Outbound } from "../components/customerupdate.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CustomersUpdateExternalRequest = {
    /**
     * The customer external ID.
     */
    externalId: string;
    customerUpdate: CustomerUpdate;
};
/** @internal */
export declare const CustomersUpdateExternalRequest$inboundSchema: z.ZodType<CustomersUpdateExternalRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomersUpdateExternalRequest$Outbound = {
    external_id: string;
    CustomerUpdate: CustomerUpdate$Outbound;
};
/** @internal */
export declare const CustomersUpdateExternalRequest$outboundSchema: z.ZodType<CustomersUpdateExternalRequest$Outbound, z.ZodTypeDef, CustomersUpdateExternalRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomersUpdateExternalRequest$ {
    /** @deprecated use `CustomersUpdateExternalRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomersUpdateExternalRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomersUpdateExternalRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomersUpdateExternalRequest$Outbound, z.ZodTypeDef, CustomersUpdateExternalRequest>;
    /** @deprecated use `CustomersUpdateExternalRequest$Outbound` instead. */
    type Outbound = CustomersUpdateExternalRequest$Outbound;
}
export declare function customersUpdateExternalRequestToJSON(customersUpdateExternalRequest: CustomersUpdateExternalRequest): string;
export declare function customersUpdateExternalRequestFromJSON(jsonString: string): SafeParseResult<CustomersUpdateExternalRequest, SDKValidationError>;
//# sourceMappingURL=customersupdateexternal.d.ts.map