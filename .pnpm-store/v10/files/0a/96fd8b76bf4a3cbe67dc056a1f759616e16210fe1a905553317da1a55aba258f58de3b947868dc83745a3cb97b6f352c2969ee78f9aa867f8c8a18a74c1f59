import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Schema to create a fixed price.
 */
export type ProductPriceFixedCreate = {
    amountType?: "fixed" | undefined;
    /**
     * The price in cents.
     */
    priceAmount: number;
    /**
     * The currency. Currently, only `usd` is supported.
     */
    priceCurrency?: string | undefined;
};
/** @internal */
export declare const ProductPriceFixedCreate$inboundSchema: z.ZodType<ProductPriceFixedCreate, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductPriceFixedCreate$Outbound = {
    amount_type: "fixed";
    price_amount: number;
    price_currency: string;
};
/** @internal */
export declare const ProductPriceFixedCreate$outboundSchema: z.ZodType<ProductPriceFixedCreate$Outbound, z.ZodTypeDef, ProductPriceFixedCreate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductPriceFixedCreate$ {
    /** @deprecated use `ProductPriceFixedCreate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductPriceFixedCreate, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductPriceFixedCreate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductPriceFixedCreate$Outbound, z.ZodTypeDef, ProductPriceFixedCreate>;
    /** @deprecated use `ProductPriceFixedCreate$Outbound` instead. */
    type Outbound = ProductPriceFixedCreate$Outbound;
}
export declare function productPriceFixedCreateToJSON(productPriceFixedCreate: ProductPriceFixedCreate): string;
export declare function productPriceFixedCreateFromJSON(jsonString: string): SafeParseResult<ProductPriceFixedCreate, SDKValidationError>;
//# sourceMappingURL=productpricefixedcreate.d.ts.map