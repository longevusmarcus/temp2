import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CustomerBenefitGrantDownloadablesUpdate = {
    benefitType?: "downloadables" | undefined;
};
/** @internal */
export declare const CustomerBenefitGrantDownloadablesUpdate$inboundSchema: z.ZodType<CustomerBenefitGrantDownloadablesUpdate, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerBenefitGrantDownloadablesUpdate$Outbound = {
    benefit_type: "downloadables";
};
/** @internal */
export declare const CustomerBenefitGrantDownloadablesUpdate$outboundSchema: z.ZodType<CustomerBenefitGrantDownloadablesUpdate$Outbound, z.ZodTypeDef, CustomerBenefitGrantDownloadablesUpdate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerBenefitGrantDownloadablesUpdate$ {
    /** @deprecated use `CustomerBenefitGrantDownloadablesUpdate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerBenefitGrantDownloadablesUpdate, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerBenefitGrantDownloadablesUpdate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerBenefitGrantDownloadablesUpdate$Outbound, z.ZodTypeDef, CustomerBenefitGrantDownloadablesUpdate>;
    /** @deprecated use `CustomerBenefitGrantDownloadablesUpdate$Outbound` instead. */
    type Outbound = CustomerBenefitGrantDownloadablesUpdate$Outbound;
}
export declare function customerBenefitGrantDownloadablesUpdateToJSON(customerBenefitGrantDownloadablesUpdate: CustomerBenefitGrantDownloadablesUpdate): string;
export declare function customerBenefitGrantDownloadablesUpdateFromJSON(jsonString: string): SafeParseResult<CustomerBenefitGrantDownloadablesUpdate, SDKValidationError>;
//# sourceMappingURL=customerbenefitgrantdownloadablesupdate.d.ts.map