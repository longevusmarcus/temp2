/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const EventsIngestResponse$inboundSchema = z.object({
    inserted: z.number().int(),
});
/** @internal */
export const EventsIngestResponse$outboundSchema = z.object({
    inserted: z.number().int(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EventsIngestResponse$;
(function (EventsIngestResponse$) {
    /** @deprecated use `EventsIngestResponse$inboundSchema` instead. */
    EventsIngestResponse$.inboundSchema = EventsIngestResponse$inboundSchema;
    /** @deprecated use `EventsIngestResponse$outboundSchema` instead. */
    EventsIngestResponse$.outboundSchema = EventsIngestResponse$outboundSchema;
})(EventsIngestResponse$ || (EventsIngestResponse$ = {}));
export function eventsIngestResponseToJSON(eventsIngestResponse) {
    return JSON.stringify(EventsIngestResponse$outboundSchema.parse(eventsIngestResponse));
}
export function eventsIngestResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => EventsIngestResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EventsIngestResponse' from JSON`);
}
//# sourceMappingURL=eventsingestresponse.js.map