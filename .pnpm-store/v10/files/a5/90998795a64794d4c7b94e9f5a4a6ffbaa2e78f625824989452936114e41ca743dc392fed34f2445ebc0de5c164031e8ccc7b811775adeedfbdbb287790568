/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { BenefitLicenseKeyActivationProperties$inboundSchema, BenefitLicenseKeyActivationProperties$outboundSchema, } from "./benefitlicensekeyactivationproperties.js";
import { BenefitLicenseKeyExpirationProperties$inboundSchema, BenefitLicenseKeyExpirationProperties$outboundSchema, } from "./benefitlicensekeyexpirationproperties.js";
/** @internal */
export const BenefitLicenseKeysSubscriberProperties$inboundSchema = z.object({
    prefix: z.nullable(z.string()),
    expires: z.nullable(BenefitLicenseKeyExpirationProperties$inboundSchema),
    activations: z.nullable(BenefitLicenseKeyActivationProperties$inboundSchema),
    limit_usage: z.nullable(z.number().int()),
}).transform((v) => {
    return remap$(v, {
        "limit_usage": "limitUsage",
    });
});
/** @internal */
export const BenefitLicenseKeysSubscriberProperties$outboundSchema = z.object({
    prefix: z.nullable(z.string()),
    expires: z.nullable(BenefitLicenseKeyExpirationProperties$outboundSchema),
    activations: z.nullable(BenefitLicenseKeyActivationProperties$outboundSchema),
    limitUsage: z.nullable(z.number().int()),
}).transform((v) => {
    return remap$(v, {
        limitUsage: "limit_usage",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitLicenseKeysSubscriberProperties$;
(function (BenefitLicenseKeysSubscriberProperties$) {
    /** @deprecated use `BenefitLicenseKeysSubscriberProperties$inboundSchema` instead. */
    BenefitLicenseKeysSubscriberProperties$.inboundSchema = BenefitLicenseKeysSubscriberProperties$inboundSchema;
    /** @deprecated use `BenefitLicenseKeysSubscriberProperties$outboundSchema` instead. */
    BenefitLicenseKeysSubscriberProperties$.outboundSchema = BenefitLicenseKeysSubscriberProperties$outboundSchema;
})(BenefitLicenseKeysSubscriberProperties$ || (BenefitLicenseKeysSubscriberProperties$ = {}));
export function benefitLicenseKeysSubscriberPropertiesToJSON(benefitLicenseKeysSubscriberProperties) {
    return JSON.stringify(BenefitLicenseKeysSubscriberProperties$outboundSchema.parse(benefitLicenseKeysSubscriberProperties));
}
export function benefitLicenseKeysSubscriberPropertiesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitLicenseKeysSubscriberProperties$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitLicenseKeysSubscriberProperties' from JSON`);
}
//# sourceMappingURL=benefitlicensekeyssubscriberproperties.js.map