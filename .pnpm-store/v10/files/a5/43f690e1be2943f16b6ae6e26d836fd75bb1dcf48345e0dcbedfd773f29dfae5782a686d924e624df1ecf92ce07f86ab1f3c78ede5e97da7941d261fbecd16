/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CustomerUpdate$inboundSchema, CustomerUpdate$outboundSchema, } from "../components/customerupdate.js";
/** @internal */
export const CustomersUpdateRequest$inboundSchema = z.object({
    id: z.string(),
    CustomerUpdate: CustomerUpdate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "CustomerUpdate": "customerUpdate",
    });
});
/** @internal */
export const CustomersUpdateRequest$outboundSchema = z.object({
    id: z.string(),
    customerUpdate: CustomerUpdate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        customerUpdate: "CustomerUpdate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomersUpdateRequest$;
(function (CustomersUpdateRequest$) {
    /** @deprecated use `CustomersUpdateRequest$inboundSchema` instead. */
    CustomersUpdateRequest$.inboundSchema = CustomersUpdateRequest$inboundSchema;
    /** @deprecated use `CustomersUpdateRequest$outboundSchema` instead. */
    CustomersUpdateRequest$.outboundSchema = CustomersUpdateRequest$outboundSchema;
})(CustomersUpdateRequest$ || (CustomersUpdateRequest$ = {}));
export function customersUpdateRequestToJSON(customersUpdateRequest) {
    return JSON.stringify(CustomersUpdateRequest$outboundSchema.parse(customersUpdateRequest));
}
export function customersUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomersUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomersUpdateRequest' from JSON`);
}
//# sourceMappingURL=customersupdate.js.map