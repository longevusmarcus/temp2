/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Customer$inboundSchema, Customer$outboundSchema, } from "./customer.js";
/** @internal */
export const WebhookCustomerUpdatedPayload$inboundSchema = z.object({
    type: z.literal("customer.updated").optional(),
    data: Customer$inboundSchema,
});
/** @internal */
export const WebhookCustomerUpdatedPayload$outboundSchema = z.object({
    type: z.literal("customer.updated").default("customer.updated"),
    data: Customer$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookCustomerUpdatedPayload$;
(function (WebhookCustomerUpdatedPayload$) {
    /** @deprecated use `WebhookCustomerUpdatedPayload$inboundSchema` instead. */
    WebhookCustomerUpdatedPayload$.inboundSchema = WebhookCustomerUpdatedPayload$inboundSchema;
    /** @deprecated use `WebhookCustomerUpdatedPayload$outboundSchema` instead. */
    WebhookCustomerUpdatedPayload$.outboundSchema = WebhookCustomerUpdatedPayload$outboundSchema;
})(WebhookCustomerUpdatedPayload$ || (WebhookCustomerUpdatedPayload$ = {}));
export function webhookCustomerUpdatedPayloadToJSON(webhookCustomerUpdatedPayload) {
    return JSON.stringify(WebhookCustomerUpdatedPayload$outboundSchema.parse(webhookCustomerUpdatedPayload));
}
export function webhookCustomerUpdatedPayloadFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookCustomerUpdatedPayload$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookCustomerUpdatedPayload' from JSON`);
}
//# sourceMappingURL=webhookcustomerupdatedpayload.js.map