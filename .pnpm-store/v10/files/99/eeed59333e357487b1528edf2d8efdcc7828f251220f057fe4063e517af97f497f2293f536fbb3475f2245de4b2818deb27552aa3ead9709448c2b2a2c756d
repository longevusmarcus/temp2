/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const BenefitsDeleteRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const BenefitsDeleteRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitsDeleteRequest$;
(function (BenefitsDeleteRequest$) {
    /** @deprecated use `BenefitsDeleteRequest$inboundSchema` instead. */
    BenefitsDeleteRequest$.inboundSchema = BenefitsDeleteRequest$inboundSchema;
    /** @deprecated use `BenefitsDeleteRequest$outboundSchema` instead. */
    BenefitsDeleteRequest$.outboundSchema = BenefitsDeleteRequest$outboundSchema;
})(BenefitsDeleteRequest$ || (BenefitsDeleteRequest$ = {}));
export function benefitsDeleteRequestToJSON(benefitsDeleteRequest) {
    return JSON.stringify(BenefitsDeleteRequest$outboundSchema.parse(benefitsDeleteRequest));
}
export function benefitsDeleteRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitsDeleteRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitsDeleteRequest' from JSON`);
}
//# sourceMappingURL=benefitsdelete.js.map