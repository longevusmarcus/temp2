/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Organization$inboundSchema, Organization$outboundSchema, } from "./organization.js";
/** @internal */
export const WebhookOrganizationUpdatedPayload$inboundSchema = z.object({
    type: z.literal("organization.updated").optional(),
    data: Organization$inboundSchema,
});
/** @internal */
export const WebhookOrganizationUpdatedPayload$outboundSchema = z.object({
    type: z.literal("organization.updated").default("organization.updated"),
    data: Organization$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookOrganizationUpdatedPayload$;
(function (WebhookOrganizationUpdatedPayload$) {
    /** @deprecated use `WebhookOrganizationUpdatedPayload$inboundSchema` instead. */
    WebhookOrganizationUpdatedPayload$.inboundSchema = WebhookOrganizationUpdatedPayload$inboundSchema;
    /** @deprecated use `WebhookOrganizationUpdatedPayload$outboundSchema` instead. */
    WebhookOrganizationUpdatedPayload$.outboundSchema = WebhookOrganizationUpdatedPayload$outboundSchema;
})(WebhookOrganizationUpdatedPayload$ || (WebhookOrganizationUpdatedPayload$ = {}));
export function webhookOrganizationUpdatedPayloadToJSON(webhookOrganizationUpdatedPayload) {
    return JSON.stringify(WebhookOrganizationUpdatedPayload$outboundSchema.parse(webhookOrganizationUpdatedPayload));
}
export function webhookOrganizationUpdatedPayloadFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookOrganizationUpdatedPayload$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookOrganizationUpdatedPayload' from JSON`);
}
//# sourceMappingURL=webhookorganizationupdatedpayload.js.map