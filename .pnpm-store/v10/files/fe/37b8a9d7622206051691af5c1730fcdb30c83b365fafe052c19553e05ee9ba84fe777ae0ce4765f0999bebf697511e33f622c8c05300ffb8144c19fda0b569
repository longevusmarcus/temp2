import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import { Subscription } from "../models/components/subscription.js";
import { SubscriptionsExportRequest } from "../models/operations/subscriptionsexport.js";
import { SubscriptionsGetRequest } from "../models/operations/subscriptionsget.js";
import { SubscriptionsListRequest, SubscriptionsListResponse } from "../models/operations/subscriptionslist.js";
import { SubscriptionsRevokeRequest } from "../models/operations/subscriptionsrevoke.js";
import { SubscriptionsUpdateRequest } from "../models/operations/subscriptionsupdate.js";
import { PageIterator } from "../types/operations.js";
export declare class Subscriptions extends ClientSDK {
    /**
     * List Subscriptions
     *
     * @remarks
     * List subscriptions.
     *
     * **Scopes**: `subscriptions:read` `subscriptions:write`
     */
    list(request: SubscriptionsListRequest, options?: RequestOptions): Promise<PageIterator<SubscriptionsListResponse, {
        page: number;
    }>>;
    /**
     * Export Subscriptions
     *
     * @remarks
     * Export subscriptions as a CSV file.
     *
     * **Scopes**: `subscriptions:read` `subscriptions:write`
     */
    export(request: SubscriptionsExportRequest, options?: RequestOptions): Promise<any>;
    /**
     * Get Subscription
     *
     * @remarks
     * Get a subscription by ID.
     *
     * **Scopes**: `subscriptions:write`
     */
    get(request: SubscriptionsGetRequest, options?: RequestOptions): Promise<Subscription>;
    /**
     * Update Subscription
     *
     * @remarks
     * Update a subscription.
     *
     * **Scopes**: `subscriptions:write`
     */
    update(request: SubscriptionsUpdateRequest, options?: RequestOptions): Promise<Subscription>;
    /**
     * Revoke Subscription
     *
     * @remarks
     * Revoke a subscription, i.e cancel immediately.
     *
     * **Scopes**: `subscriptions:write`
     */
    revoke(request: SubscriptionsRevokeRequest, options?: RequestOptions): Promise<Subscription>;
}
//# sourceMappingURL=subscriptions.d.ts.map