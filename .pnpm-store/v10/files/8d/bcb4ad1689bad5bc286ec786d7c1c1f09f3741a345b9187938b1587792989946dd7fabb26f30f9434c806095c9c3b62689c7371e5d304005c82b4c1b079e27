/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Subscription$inboundSchema, Subscription$outboundSchema, } from "./subscription.js";
/** @internal */
export const WebhookSubscriptionActivePayload$inboundSchema = z.object({
    type: z.literal("subscription.active").optional(),
    data: Subscription$inboundSchema,
});
/** @internal */
export const WebhookSubscriptionActivePayload$outboundSchema = z.object({
    type: z.literal("subscription.active").default("subscription.active"),
    data: Subscription$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookSubscriptionActivePayload$;
(function (WebhookSubscriptionActivePayload$) {
    /** @deprecated use `WebhookSubscriptionActivePayload$inboundSchema` instead. */
    WebhookSubscriptionActivePayload$.inboundSchema = WebhookSubscriptionActivePayload$inboundSchema;
    /** @deprecated use `WebhookSubscriptionActivePayload$outboundSchema` instead. */
    WebhookSubscriptionActivePayload$.outboundSchema = WebhookSubscriptionActivePayload$outboundSchema;
})(WebhookSubscriptionActivePayload$ || (WebhookSubscriptionActivePayload$ = {}));
export function webhookSubscriptionActivePayloadToJSON(webhookSubscriptionActivePayload) {
    return JSON.stringify(WebhookSubscriptionActivePayload$outboundSchema.parse(webhookSubscriptionActivePayload));
}
export function webhookSubscriptionActivePayloadFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookSubscriptionActivePayload$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookSubscriptionActivePayload' from JSON`);
}
//# sourceMappingURL=webhooksubscriptionactivepayload.js.map