/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const OrdersGetRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const OrdersGetRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrdersGetRequest$;
(function (OrdersGetRequest$) {
    /** @deprecated use `OrdersGetRequest$inboundSchema` instead. */
    OrdersGetRequest$.inboundSchema = OrdersGetRequest$inboundSchema;
    /** @deprecated use `OrdersGetRequest$outboundSchema` instead. */
    OrdersGetRequest$.outboundSchema = OrdersGetRequest$outboundSchema;
})(OrdersGetRequest$ || (OrdersGetRequest$ = {}));
export function ordersGetRequestToJSON(ordersGetRequest) {
    return JSON.stringify(OrdersGetRequest$outboundSchema.parse(ordersGetRequest));
}
export function ordersGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrdersGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrdersGetRequest' from JSON`);
}
//# sourceMappingURL=ordersget.js.map