"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckoutLink$ = exports.CheckoutLink$outboundSchema = exports.CheckoutLink$inboundSchema = exports.CheckoutLinkProductPrice$ = exports.CheckoutLinkProductPrice$outboundSchema = exports.CheckoutLinkProductPrice$inboundSchema = exports.CheckoutLinkDiscount$ = exports.CheckoutLinkDiscount$outboundSchema = exports.CheckoutLinkDiscount$inboundSchema = exports.CheckoutLinkMetadata$ = exports.CheckoutLinkMetadata$outboundSchema = exports.CheckoutLinkMetadata$inboundSchema = void 0;
exports.checkoutLinkMetadataToJSON = checkoutLinkMetadataToJSON;
exports.checkoutLinkMetadataFromJSON = checkoutLinkMetadataFromJSON;
exports.checkoutLinkDiscountToJSON = checkoutLinkDiscountToJSON;
exports.checkoutLinkDiscountFromJSON = checkoutLinkDiscountFromJSON;
exports.checkoutLinkProductPriceToJSON = checkoutLinkProductPriceToJSON;
exports.checkoutLinkProductPriceFromJSON = checkoutLinkProductPriceFromJSON;
exports.checkoutLinkToJSON = checkoutLinkToJSON;
exports.checkoutLinkFromJSON = checkoutLinkFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const checkoutlinkproduct_js_1 = require("./checkoutlinkproduct.js");
const discountfixedonceforeverdurationbase_js_1 = require("./discountfixedonceforeverdurationbase.js");
const discountfixedrepeatdurationbase_js_1 = require("./discountfixedrepeatdurationbase.js");
const discountpercentageonceforeverdurationbase_js_1 = require("./discountpercentageonceforeverdurationbase.js");
const discountpercentagerepeatdurationbase_js_1 = require("./discountpercentagerepeatdurationbase.js");
const legacyrecurringproductprice_js_1 = require("./legacyrecurringproductprice.js");
const paymentprocessor_js_1 = require("./paymentprocessor.js");
const productprice_js_1 = require("./productprice.js");
/** @internal */
exports.CheckoutLinkMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
exports.CheckoutLinkMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckoutLinkMetadata$;
(function (CheckoutLinkMetadata$) {
    /** @deprecated use `CheckoutLinkMetadata$inboundSchema` instead. */
    CheckoutLinkMetadata$.inboundSchema = exports.CheckoutLinkMetadata$inboundSchema;
    /** @deprecated use `CheckoutLinkMetadata$outboundSchema` instead. */
    CheckoutLinkMetadata$.outboundSchema = exports.CheckoutLinkMetadata$outboundSchema;
})(CheckoutLinkMetadata$ || (exports.CheckoutLinkMetadata$ = CheckoutLinkMetadata$ = {}));
function checkoutLinkMetadataToJSON(checkoutLinkMetadata) {
    return JSON.stringify(exports.CheckoutLinkMetadata$outboundSchema.parse(checkoutLinkMetadata));
}
function checkoutLinkMetadataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CheckoutLinkMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutLinkMetadata' from JSON`);
}
/** @internal */
exports.CheckoutLinkDiscount$inboundSchema = z.union([
    discountpercentageonceforeverdurationbase_js_1.DiscountPercentageOnceForeverDurationBase$inboundSchema,
    discountfixedonceforeverdurationbase_js_1.DiscountFixedOnceForeverDurationBase$inboundSchema,
    discountpercentagerepeatdurationbase_js_1.DiscountPercentageRepeatDurationBase$inboundSchema,
    discountfixedrepeatdurationbase_js_1.DiscountFixedRepeatDurationBase$inboundSchema,
]);
/** @internal */
exports.CheckoutLinkDiscount$outboundSchema = z.union([
    discountpercentageonceforeverdurationbase_js_1.DiscountPercentageOnceForeverDurationBase$outboundSchema,
    discountfixedonceforeverdurationbase_js_1.DiscountFixedOnceForeverDurationBase$outboundSchema,
    discountpercentagerepeatdurationbase_js_1.DiscountPercentageRepeatDurationBase$outboundSchema,
    discountfixedrepeatdurationbase_js_1.DiscountFixedRepeatDurationBase$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckoutLinkDiscount$;
(function (CheckoutLinkDiscount$) {
    /** @deprecated use `CheckoutLinkDiscount$inboundSchema` instead. */
    CheckoutLinkDiscount$.inboundSchema = exports.CheckoutLinkDiscount$inboundSchema;
    /** @deprecated use `CheckoutLinkDiscount$outboundSchema` instead. */
    CheckoutLinkDiscount$.outboundSchema = exports.CheckoutLinkDiscount$outboundSchema;
})(CheckoutLinkDiscount$ || (exports.CheckoutLinkDiscount$ = CheckoutLinkDiscount$ = {}));
function checkoutLinkDiscountToJSON(checkoutLinkDiscount) {
    return JSON.stringify(exports.CheckoutLinkDiscount$outboundSchema.parse(checkoutLinkDiscount));
}
function checkoutLinkDiscountFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CheckoutLinkDiscount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutLinkDiscount' from JSON`);
}
/** @internal */
exports.CheckoutLinkProductPrice$inboundSchema = z.union([
    legacyrecurringproductprice_js_1.LegacyRecurringProductPrice$inboundSchema,
    productprice_js_1.ProductPrice$inboundSchema,
]);
/** @internal */
exports.CheckoutLinkProductPrice$outboundSchema = z.union([
    legacyrecurringproductprice_js_1.LegacyRecurringProductPrice$outboundSchema,
    productprice_js_1.ProductPrice$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckoutLinkProductPrice$;
(function (CheckoutLinkProductPrice$) {
    /** @deprecated use `CheckoutLinkProductPrice$inboundSchema` instead. */
    CheckoutLinkProductPrice$.inboundSchema = exports.CheckoutLinkProductPrice$inboundSchema;
    /** @deprecated use `CheckoutLinkProductPrice$outboundSchema` instead. */
    CheckoutLinkProductPrice$.outboundSchema = exports.CheckoutLinkProductPrice$outboundSchema;
})(CheckoutLinkProductPrice$ || (exports.CheckoutLinkProductPrice$ = CheckoutLinkProductPrice$ = {}));
function checkoutLinkProductPriceToJSON(checkoutLinkProductPrice) {
    return JSON.stringify(exports.CheckoutLinkProductPrice$outboundSchema.parse(checkoutLinkProductPrice));
}
function checkoutLinkProductPriceFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CheckoutLinkProductPrice$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutLinkProductPrice' from JSON`);
}
/** @internal */
exports.CheckoutLink$inboundSchema = z.object({
    created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    modified_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    id: z.string(),
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()])),
    payment_processor: paymentprocessor_js_1.PaymentProcessor$inboundSchema,
    client_secret: z.string(),
    success_url: z.nullable(z.string()),
    label: z.nullable(z.string()),
    allow_discount_codes: z.boolean(),
    discount_id: z.nullable(z.string()),
    organization_id: z.string(),
    products: z.array(checkoutlinkproduct_js_1.CheckoutLinkProduct$inboundSchema),
    discount: z.nullable(z.union([
        discountpercentageonceforeverdurationbase_js_1.DiscountPercentageOnceForeverDurationBase$inboundSchema,
        discountfixedonceforeverdurationbase_js_1.DiscountFixedOnceForeverDurationBase$inboundSchema,
        discountpercentagerepeatdurationbase_js_1.DiscountPercentageRepeatDurationBase$inboundSchema,
        discountfixedrepeatdurationbase_js_1.DiscountFixedRepeatDurationBase$inboundSchema,
    ])),
    product_id: z.string(),
    product_price_id: z.string(),
    product: checkoutlinkproduct_js_1.CheckoutLinkProduct$inboundSchema,
    product_price: z.union([
        legacyrecurringproductprice_js_1.LegacyRecurringProductPrice$inboundSchema,
        productprice_js_1.ProductPrice$inboundSchema,
    ]),
    url: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "created_at": "createdAt",
        "modified_at": "modifiedAt",
        "payment_processor": "paymentProcessor",
        "client_secret": "clientSecret",
        "success_url": "successUrl",
        "allow_discount_codes": "allowDiscountCodes",
        "discount_id": "discountId",
        "organization_id": "organizationId",
        "product_id": "productId",
        "product_price_id": "productPriceId",
        "product_price": "productPrice",
    });
});
/** @internal */
exports.CheckoutLink$outboundSchema = z.object({
    createdAt: z.date().transform(v => v.toISOString()),
    modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),
    id: z.string(),
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()])),
    paymentProcessor: paymentprocessor_js_1.PaymentProcessor$outboundSchema,
    clientSecret: z.string(),
    successUrl: z.nullable(z.string()),
    label: z.nullable(z.string()),
    allowDiscountCodes: z.boolean(),
    discountId: z.nullable(z.string()),
    organizationId: z.string(),
    products: z.array(checkoutlinkproduct_js_1.CheckoutLinkProduct$outboundSchema),
    discount: z.nullable(z.union([
        discountpercentageonceforeverdurationbase_js_1.DiscountPercentageOnceForeverDurationBase$outboundSchema,
        discountfixedonceforeverdurationbase_js_1.DiscountFixedOnceForeverDurationBase$outboundSchema,
        discountpercentagerepeatdurationbase_js_1.DiscountPercentageRepeatDurationBase$outboundSchema,
        discountfixedrepeatdurationbase_js_1.DiscountFixedRepeatDurationBase$outboundSchema,
    ])),
    productId: z.string(),
    productPriceId: z.string(),
    product: checkoutlinkproduct_js_1.CheckoutLinkProduct$outboundSchema,
    productPrice: z.union([
        legacyrecurringproductprice_js_1.LegacyRecurringProductPrice$outboundSchema,
        productprice_js_1.ProductPrice$outboundSchema,
    ]),
    url: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        createdAt: "created_at",
        modifiedAt: "modified_at",
        paymentProcessor: "payment_processor",
        clientSecret: "client_secret",
        successUrl: "success_url",
        allowDiscountCodes: "allow_discount_codes",
        discountId: "discount_id",
        organizationId: "organization_id",
        productId: "product_id",
        productPriceId: "product_price_id",
        productPrice: "product_price",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckoutLink$;
(function (CheckoutLink$) {
    /** @deprecated use `CheckoutLink$inboundSchema` instead. */
    CheckoutLink$.inboundSchema = exports.CheckoutLink$inboundSchema;
    /** @deprecated use `CheckoutLink$outboundSchema` instead. */
    CheckoutLink$.outboundSchema = exports.CheckoutLink$outboundSchema;
})(CheckoutLink$ || (exports.CheckoutLink$ = CheckoutLink$ = {}));
function checkoutLinkToJSON(checkoutLink) {
    return JSON.stringify(exports.CheckoutLink$outboundSchema.parse(checkoutLink));
}
function checkoutLinkFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CheckoutLink$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutLink' from JSON`);
}
//# sourceMappingURL=checkoutlink.js.map