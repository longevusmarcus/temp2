/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomerPortalOrdersGetSecurity$inboundSchema = z.object({
    customer_session: z.string(),
}).transform((v) => {
    return remap$(v, {
        "customer_session": "customerSession",
    });
});
/** @internal */
export const CustomerPortalOrdersGetSecurity$outboundSchema = z.object({
    customerSession: z.string(),
}).transform((v) => {
    return remap$(v, {
        customerSession: "customer_session",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalOrdersGetSecurity$;
(function (CustomerPortalOrdersGetSecurity$) {
    /** @deprecated use `CustomerPortalOrdersGetSecurity$inboundSchema` instead. */
    CustomerPortalOrdersGetSecurity$.inboundSchema = CustomerPortalOrdersGetSecurity$inboundSchema;
    /** @deprecated use `CustomerPortalOrdersGetSecurity$outboundSchema` instead. */
    CustomerPortalOrdersGetSecurity$.outboundSchema = CustomerPortalOrdersGetSecurity$outboundSchema;
})(CustomerPortalOrdersGetSecurity$ || (CustomerPortalOrdersGetSecurity$ = {}));
export function customerPortalOrdersGetSecurityToJSON(customerPortalOrdersGetSecurity) {
    return JSON.stringify(CustomerPortalOrdersGetSecurity$outboundSchema.parse(customerPortalOrdersGetSecurity));
}
export function customerPortalOrdersGetSecurityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalOrdersGetSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalOrdersGetSecurity' from JSON`);
}
/** @internal */
export const CustomerPortalOrdersGetRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const CustomerPortalOrdersGetRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalOrdersGetRequest$;
(function (CustomerPortalOrdersGetRequest$) {
    /** @deprecated use `CustomerPortalOrdersGetRequest$inboundSchema` instead. */
    CustomerPortalOrdersGetRequest$.inboundSchema = CustomerPortalOrdersGetRequest$inboundSchema;
    /** @deprecated use `CustomerPortalOrdersGetRequest$outboundSchema` instead. */
    CustomerPortalOrdersGetRequest$.outboundSchema = CustomerPortalOrdersGetRequest$outboundSchema;
})(CustomerPortalOrdersGetRequest$ || (CustomerPortalOrdersGetRequest$ = {}));
export function customerPortalOrdersGetRequestToJSON(customerPortalOrdersGetRequest) {
    return JSON.stringify(CustomerPortalOrdersGetRequest$outboundSchema.parse(customerPortalOrdersGetRequest));
}
export function customerPortalOrdersGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalOrdersGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalOrdersGetRequest' from JSON`);
}
//# sourceMappingURL=customerportalordersget.js.map