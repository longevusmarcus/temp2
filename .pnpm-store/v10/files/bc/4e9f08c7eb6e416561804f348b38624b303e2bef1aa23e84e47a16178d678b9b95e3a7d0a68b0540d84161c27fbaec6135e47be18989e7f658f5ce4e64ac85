/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ListResourceOrder$inboundSchema, ListResourceOrder$outboundSchema, } from "../components/listresourceorder.js";
import { OrderSortProperty$inboundSchema, OrderSortProperty$outboundSchema, } from "../components/ordersortproperty.js";
import { ProductBillingType$inboundSchema, ProductBillingType$outboundSchema, } from "../components/productbillingtype.js";
import { ProductPriceType$inboundSchema, ProductPriceType$outboundSchema, } from "../components/productpricetype.js";
/** @internal */
export const OrdersListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const OrdersListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrdersListQueryParamOrganizationIDFilter$;
(function (OrdersListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `OrdersListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    OrdersListQueryParamOrganizationIDFilter$.inboundSchema = OrdersListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `OrdersListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    OrdersListQueryParamOrganizationIDFilter$.outboundSchema = OrdersListQueryParamOrganizationIDFilter$outboundSchema;
})(OrdersListQueryParamOrganizationIDFilter$ || (OrdersListQueryParamOrganizationIDFilter$ = {}));
export function ordersListQueryParamOrganizationIDFilterToJSON(ordersListQueryParamOrganizationIDFilter) {
    return JSON.stringify(OrdersListQueryParamOrganizationIDFilter$outboundSchema.parse(ordersListQueryParamOrganizationIDFilter));
}
export function ordersListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrdersListQueryParamOrganizationIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrdersListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
export const OrdersListQueryParamProductIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const OrdersListQueryParamProductIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrdersListQueryParamProductIDFilter$;
(function (OrdersListQueryParamProductIDFilter$) {
    /** @deprecated use `OrdersListQueryParamProductIDFilter$inboundSchema` instead. */
    OrdersListQueryParamProductIDFilter$.inboundSchema = OrdersListQueryParamProductIDFilter$inboundSchema;
    /** @deprecated use `OrdersListQueryParamProductIDFilter$outboundSchema` instead. */
    OrdersListQueryParamProductIDFilter$.outboundSchema = OrdersListQueryParamProductIDFilter$outboundSchema;
})(OrdersListQueryParamProductIDFilter$ || (OrdersListQueryParamProductIDFilter$ = {}));
export function ordersListQueryParamProductIDFilterToJSON(ordersListQueryParamProductIDFilter) {
    return JSON.stringify(OrdersListQueryParamProductIDFilter$outboundSchema.parse(ordersListQueryParamProductIDFilter));
}
export function ordersListQueryParamProductIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrdersListQueryParamProductIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrdersListQueryParamProductIDFilter' from JSON`);
}
/** @internal */
export const ProductBillingTypeFilter$inboundSchema = z.union([
    ProductBillingType$inboundSchema,
    z.array(ProductBillingType$inboundSchema),
]);
/** @internal */
export const ProductBillingTypeFilter$outboundSchema = z.union([
    ProductBillingType$outboundSchema,
    z.array(ProductBillingType$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ProductBillingTypeFilter$;
(function (ProductBillingTypeFilter$) {
    /** @deprecated use `ProductBillingTypeFilter$inboundSchema` instead. */
    ProductBillingTypeFilter$.inboundSchema = ProductBillingTypeFilter$inboundSchema;
    /** @deprecated use `ProductBillingTypeFilter$outboundSchema` instead. */
    ProductBillingTypeFilter$.outboundSchema = ProductBillingTypeFilter$outboundSchema;
})(ProductBillingTypeFilter$ || (ProductBillingTypeFilter$ = {}));
export function productBillingTypeFilterToJSON(productBillingTypeFilter) {
    return JSON.stringify(ProductBillingTypeFilter$outboundSchema.parse(productBillingTypeFilter));
}
export function productBillingTypeFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ProductBillingTypeFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductBillingTypeFilter' from JSON`);
}
/** @internal */
export const ProductPriceTypeFilter$inboundSchema = z.union([
    ProductPriceType$inboundSchema,
    z.array(ProductPriceType$inboundSchema),
]);
/** @internal */
export const ProductPriceTypeFilter$outboundSchema = z.union([
    ProductPriceType$outboundSchema,
    z.array(ProductPriceType$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ProductPriceTypeFilter$;
(function (ProductPriceTypeFilter$) {
    /** @deprecated use `ProductPriceTypeFilter$inboundSchema` instead. */
    ProductPriceTypeFilter$.inboundSchema = ProductPriceTypeFilter$inboundSchema;
    /** @deprecated use `ProductPriceTypeFilter$outboundSchema` instead. */
    ProductPriceTypeFilter$.outboundSchema = ProductPriceTypeFilter$outboundSchema;
})(ProductPriceTypeFilter$ || (ProductPriceTypeFilter$ = {}));
export function productPriceTypeFilterToJSON(productPriceTypeFilter) {
    return JSON.stringify(ProductPriceTypeFilter$outboundSchema.parse(productPriceTypeFilter));
}
export function productPriceTypeFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ProductPriceTypeFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductPriceTypeFilter' from JSON`);
}
/** @internal */
export const QueryParamDiscountIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const QueryParamDiscountIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var QueryParamDiscountIDFilter$;
(function (QueryParamDiscountIDFilter$) {
    /** @deprecated use `QueryParamDiscountIDFilter$inboundSchema` instead. */
    QueryParamDiscountIDFilter$.inboundSchema = QueryParamDiscountIDFilter$inboundSchema;
    /** @deprecated use `QueryParamDiscountIDFilter$outboundSchema` instead. */
    QueryParamDiscountIDFilter$.outboundSchema = QueryParamDiscountIDFilter$outboundSchema;
})(QueryParamDiscountIDFilter$ || (QueryParamDiscountIDFilter$ = {}));
export function queryParamDiscountIDFilterToJSON(queryParamDiscountIDFilter) {
    return JSON.stringify(QueryParamDiscountIDFilter$outboundSchema.parse(queryParamDiscountIDFilter));
}
export function queryParamDiscountIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => QueryParamDiscountIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamDiscountIDFilter' from JSON`);
}
/** @internal */
export const OrdersListQueryParamCustomerIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const OrdersListQueryParamCustomerIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrdersListQueryParamCustomerIDFilter$;
(function (OrdersListQueryParamCustomerIDFilter$) {
    /** @deprecated use `OrdersListQueryParamCustomerIDFilter$inboundSchema` instead. */
    OrdersListQueryParamCustomerIDFilter$.inboundSchema = OrdersListQueryParamCustomerIDFilter$inboundSchema;
    /** @deprecated use `OrdersListQueryParamCustomerIDFilter$outboundSchema` instead. */
    OrdersListQueryParamCustomerIDFilter$.outboundSchema = OrdersListQueryParamCustomerIDFilter$outboundSchema;
})(OrdersListQueryParamCustomerIDFilter$ || (OrdersListQueryParamCustomerIDFilter$ = {}));
export function ordersListQueryParamCustomerIDFilterToJSON(ordersListQueryParamCustomerIDFilter) {
    return JSON.stringify(OrdersListQueryParamCustomerIDFilter$outboundSchema.parse(ordersListQueryParamCustomerIDFilter));
}
export function ordersListQueryParamCustomerIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrdersListQueryParamCustomerIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrdersListQueryParamCustomerIDFilter' from JSON`);
}
/** @internal */
export const CheckoutIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const CheckoutIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CheckoutIDFilter$;
(function (CheckoutIDFilter$) {
    /** @deprecated use `CheckoutIDFilter$inboundSchema` instead. */
    CheckoutIDFilter$.inboundSchema = CheckoutIDFilter$inboundSchema;
    /** @deprecated use `CheckoutIDFilter$outboundSchema` instead. */
    CheckoutIDFilter$.outboundSchema = CheckoutIDFilter$outboundSchema;
})(CheckoutIDFilter$ || (CheckoutIDFilter$ = {}));
export function checkoutIDFilterToJSON(checkoutIDFilter) {
    return JSON.stringify(CheckoutIDFilter$outboundSchema.parse(checkoutIDFilter));
}
export function checkoutIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CheckoutIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutIDFilter' from JSON`);
}
/** @internal */
export const OrdersListRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    product_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    product_billing_type: z.nullable(z.union([
        ProductBillingType$inboundSchema,
        z.array(ProductBillingType$inboundSchema),
    ])).optional(),
    product_price_type: z.nullable(z.union([
        ProductPriceType$inboundSchema,
        z.array(ProductPriceType$inboundSchema),
    ])).optional(),
    discount_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    customer_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    checkout_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(OrderSortProperty$inboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        "organization_id": "organizationId",
        "product_id": "productId",
        "product_billing_type": "productBillingType",
        "product_price_type": "productPriceType",
        "discount_id": "discountId",
        "customer_id": "customerId",
        "checkout_id": "checkoutId",
    });
});
/** @internal */
export const OrdersListRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    productId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    productBillingType: z.nullable(z.union([
        ProductBillingType$outboundSchema,
        z.array(ProductBillingType$outboundSchema),
    ])).optional(),
    productPriceType: z.nullable(z.union([
        ProductPriceType$outboundSchema,
        z.array(ProductPriceType$outboundSchema),
    ])).optional(),
    discountId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    customerId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    checkoutId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(OrderSortProperty$outboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        organizationId: "organization_id",
        productId: "product_id",
        productBillingType: "product_billing_type",
        productPriceType: "product_price_type",
        discountId: "discount_id",
        customerId: "customer_id",
        checkoutId: "checkout_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrdersListRequest$;
(function (OrdersListRequest$) {
    /** @deprecated use `OrdersListRequest$inboundSchema` instead. */
    OrdersListRequest$.inboundSchema = OrdersListRequest$inboundSchema;
    /** @deprecated use `OrdersListRequest$outboundSchema` instead. */
    OrdersListRequest$.outboundSchema = OrdersListRequest$outboundSchema;
})(OrdersListRequest$ || (OrdersListRequest$ = {}));
export function ordersListRequestToJSON(ordersListRequest) {
    return JSON.stringify(OrdersListRequest$outboundSchema.parse(ordersListRequest));
}
export function ordersListRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrdersListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrdersListRequest' from JSON`);
}
/** @internal */
export const OrdersListResponse$inboundSchema = z.object({
    Result: ListResourceOrder$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Result": "result",
    });
});
/** @internal */
export const OrdersListResponse$outboundSchema = z.object({
    result: ListResourceOrder$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrdersListResponse$;
(function (OrdersListResponse$) {
    /** @deprecated use `OrdersListResponse$inboundSchema` instead. */
    OrdersListResponse$.inboundSchema = OrdersListResponse$inboundSchema;
    /** @deprecated use `OrdersListResponse$outboundSchema` instead. */
    OrdersListResponse$.outboundSchema = OrdersListResponse$outboundSchema;
})(OrdersListResponse$ || (OrdersListResponse$ = {}));
export function ordersListResponseToJSON(ordersListResponse) {
    return JSON.stringify(OrdersListResponse$outboundSchema.parse(ordersListResponse));
}
export function ordersListResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrdersListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrdersListResponse' from JSON`);
}
//# sourceMappingURL=orderslist.js.map