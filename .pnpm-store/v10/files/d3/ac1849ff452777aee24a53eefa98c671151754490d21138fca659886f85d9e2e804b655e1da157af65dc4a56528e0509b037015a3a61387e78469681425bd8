/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { DiscountDuration$inboundSchema, DiscountDuration$outboundSchema, } from "./discountduration.js";
import { DiscountType$inboundSchema, DiscountType$outboundSchema, } from "./discounttype.js";
/** @internal */
export const DiscountPercentageRepeatDurationCreateMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
export const DiscountPercentageRepeatDurationCreateMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DiscountPercentageRepeatDurationCreateMetadata$;
(function (DiscountPercentageRepeatDurationCreateMetadata$) {
    /** @deprecated use `DiscountPercentageRepeatDurationCreateMetadata$inboundSchema` instead. */
    DiscountPercentageRepeatDurationCreateMetadata$.inboundSchema = DiscountPercentageRepeatDurationCreateMetadata$inboundSchema;
    /** @deprecated use `DiscountPercentageRepeatDurationCreateMetadata$outboundSchema` instead. */
    DiscountPercentageRepeatDurationCreateMetadata$.outboundSchema = DiscountPercentageRepeatDurationCreateMetadata$outboundSchema;
})(DiscountPercentageRepeatDurationCreateMetadata$ || (DiscountPercentageRepeatDurationCreateMetadata$ = {}));
export function discountPercentageRepeatDurationCreateMetadataToJSON(discountPercentageRepeatDurationCreateMetadata) {
    return JSON.stringify(DiscountPercentageRepeatDurationCreateMetadata$outboundSchema.parse(discountPercentageRepeatDurationCreateMetadata));
}
export function discountPercentageRepeatDurationCreateMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DiscountPercentageRepeatDurationCreateMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DiscountPercentageRepeatDurationCreateMetadata' from JSON`);
}
/** @internal */
export const DiscountPercentageRepeatDurationCreate$inboundSchema = z.object({
    duration: DiscountDuration$inboundSchema,
    duration_in_months: z.number().int(),
    type: DiscountType$inboundSchema,
    basis_points: z.number().int(),
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    name: z.string(),
    code: z.nullable(z.string()).optional(),
    starts_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    ends_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    max_redemptions: z.nullable(z.number().int()).optional(),
    products: z.nullable(z.array(z.string())).optional(),
    organization_id: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        "duration_in_months": "durationInMonths",
        "basis_points": "basisPoints",
        "starts_at": "startsAt",
        "ends_at": "endsAt",
        "max_redemptions": "maxRedemptions",
        "organization_id": "organizationId",
    });
});
/** @internal */
export const DiscountPercentageRepeatDurationCreate$outboundSchema = z.object({
    duration: DiscountDuration$outboundSchema,
    durationInMonths: z.number().int(),
    type: DiscountType$outboundSchema,
    basisPoints: z.number().int(),
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    name: z.string(),
    code: z.nullable(z.string()).optional(),
    startsAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    endsAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    maxRedemptions: z.nullable(z.number().int()).optional(),
    products: z.nullable(z.array(z.string())).optional(),
    organizationId: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        durationInMonths: "duration_in_months",
        basisPoints: "basis_points",
        startsAt: "starts_at",
        endsAt: "ends_at",
        maxRedemptions: "max_redemptions",
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DiscountPercentageRepeatDurationCreate$;
(function (DiscountPercentageRepeatDurationCreate$) {
    /** @deprecated use `DiscountPercentageRepeatDurationCreate$inboundSchema` instead. */
    DiscountPercentageRepeatDurationCreate$.inboundSchema = DiscountPercentageRepeatDurationCreate$inboundSchema;
    /** @deprecated use `DiscountPercentageRepeatDurationCreate$outboundSchema` instead. */
    DiscountPercentageRepeatDurationCreate$.outboundSchema = DiscountPercentageRepeatDurationCreate$outboundSchema;
})(DiscountPercentageRepeatDurationCreate$ || (DiscountPercentageRepeatDurationCreate$ = {}));
export function discountPercentageRepeatDurationCreateToJSON(discountPercentageRepeatDurationCreate) {
    return JSON.stringify(DiscountPercentageRepeatDurationCreate$outboundSchema.parse(discountPercentageRepeatDurationCreate));
}
export function discountPercentageRepeatDurationCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DiscountPercentageRepeatDurationCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DiscountPercentageRepeatDurationCreate' from JSON`);
}
//# sourceMappingURL=discountpercentagerepeatdurationcreate.js.map