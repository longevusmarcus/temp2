"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerPortalBenefitGrantsListResponse$ = exports.CustomerPortalBenefitGrantsListResponse$outboundSchema = exports.CustomerPortalBenefitGrantsListResponse$inboundSchema = exports.CustomerPortalBenefitGrantsListRequest$ = exports.CustomerPortalBenefitGrantsListRequest$outboundSchema = exports.CustomerPortalBenefitGrantsListRequest$inboundSchema = exports.QueryParamSubscriptionIDFilter$ = exports.QueryParamSubscriptionIDFilter$outboundSchema = exports.QueryParamSubscriptionIDFilter$inboundSchema = exports.QueryParamOrderIDFilter$ = exports.QueryParamOrderIDFilter$outboundSchema = exports.QueryParamOrderIDFilter$inboundSchema = exports.QueryParamCheckoutIDFilter$ = exports.QueryParamCheckoutIDFilter$outboundSchema = exports.QueryParamCheckoutIDFilter$inboundSchema = exports.CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$ = exports.CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$outboundSchema = exports.CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$inboundSchema = exports.CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$ = exports.CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$outboundSchema = exports.CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$inboundSchema = exports.QueryParamBenefitTypeFilter$ = exports.QueryParamBenefitTypeFilter$outboundSchema = exports.QueryParamBenefitTypeFilter$inboundSchema = exports.CustomerPortalBenefitGrantsListSecurity$ = exports.CustomerPortalBenefitGrantsListSecurity$outboundSchema = exports.CustomerPortalBenefitGrantsListSecurity$inboundSchema = void 0;
exports.customerPortalBenefitGrantsListSecurityToJSON = customerPortalBenefitGrantsListSecurityToJSON;
exports.customerPortalBenefitGrantsListSecurityFromJSON = customerPortalBenefitGrantsListSecurityFromJSON;
exports.queryParamBenefitTypeFilterToJSON = queryParamBenefitTypeFilterToJSON;
exports.queryParamBenefitTypeFilterFromJSON = queryParamBenefitTypeFilterFromJSON;
exports.customerPortalBenefitGrantsListQueryParamBenefitIDFilterToJSON = customerPortalBenefitGrantsListQueryParamBenefitIDFilterToJSON;
exports.customerPortalBenefitGrantsListQueryParamBenefitIDFilterFromJSON = customerPortalBenefitGrantsListQueryParamBenefitIDFilterFromJSON;
exports.customerPortalBenefitGrantsListQueryParamOrganizationIDFilterToJSON = customerPortalBenefitGrantsListQueryParamOrganizationIDFilterToJSON;
exports.customerPortalBenefitGrantsListQueryParamOrganizationIDFilterFromJSON = customerPortalBenefitGrantsListQueryParamOrganizationIDFilterFromJSON;
exports.queryParamCheckoutIDFilterToJSON = queryParamCheckoutIDFilterToJSON;
exports.queryParamCheckoutIDFilterFromJSON = queryParamCheckoutIDFilterFromJSON;
exports.queryParamOrderIDFilterToJSON = queryParamOrderIDFilterToJSON;
exports.queryParamOrderIDFilterFromJSON = queryParamOrderIDFilterFromJSON;
exports.queryParamSubscriptionIDFilterToJSON = queryParamSubscriptionIDFilterToJSON;
exports.queryParamSubscriptionIDFilterFromJSON = queryParamSubscriptionIDFilterFromJSON;
exports.customerPortalBenefitGrantsListRequestToJSON = customerPortalBenefitGrantsListRequestToJSON;
exports.customerPortalBenefitGrantsListRequestFromJSON = customerPortalBenefitGrantsListRequestFromJSON;
exports.customerPortalBenefitGrantsListResponseToJSON = customerPortalBenefitGrantsListResponseToJSON;
exports.customerPortalBenefitGrantsListResponseFromJSON = customerPortalBenefitGrantsListResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const benefittype_js_1 = require("../components/benefittype.js");
const customerbenefitgrantsortproperty_js_1 = require("../components/customerbenefitgrantsortproperty.js");
const listresourcecustomerbenefitgrant_js_1 = require("../components/listresourcecustomerbenefitgrant.js");
/** @internal */
exports.CustomerPortalBenefitGrantsListSecurity$inboundSchema = z.object({
    customer_session: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "customer_session": "customerSession",
    });
});
/** @internal */
exports.CustomerPortalBenefitGrantsListSecurity$outboundSchema = z.object({
    customerSession: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        customerSession: "customer_session",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerPortalBenefitGrantsListSecurity$;
(function (CustomerPortalBenefitGrantsListSecurity$) {
    /** @deprecated use `CustomerPortalBenefitGrantsListSecurity$inboundSchema` instead. */
    CustomerPortalBenefitGrantsListSecurity$.inboundSchema = exports.CustomerPortalBenefitGrantsListSecurity$inboundSchema;
    /** @deprecated use `CustomerPortalBenefitGrantsListSecurity$outboundSchema` instead. */
    CustomerPortalBenefitGrantsListSecurity$.outboundSchema = exports.CustomerPortalBenefitGrantsListSecurity$outboundSchema;
})(CustomerPortalBenefitGrantsListSecurity$ || (exports.CustomerPortalBenefitGrantsListSecurity$ = CustomerPortalBenefitGrantsListSecurity$ = {}));
function customerPortalBenefitGrantsListSecurityToJSON(customerPortalBenefitGrantsListSecurity) {
    return JSON.stringify(exports.CustomerPortalBenefitGrantsListSecurity$outboundSchema.parse(customerPortalBenefitGrantsListSecurity));
}
function customerPortalBenefitGrantsListSecurityFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerPortalBenefitGrantsListSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalBenefitGrantsListSecurity' from JSON`);
}
/** @internal */
exports.QueryParamBenefitTypeFilter$inboundSchema = z.union([benefittype_js_1.BenefitType$inboundSchema, z.array(benefittype_js_1.BenefitType$inboundSchema)]);
/** @internal */
exports.QueryParamBenefitTypeFilter$outboundSchema = z.union([benefittype_js_1.BenefitType$outboundSchema, z.array(benefittype_js_1.BenefitType$outboundSchema)]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var QueryParamBenefitTypeFilter$;
(function (QueryParamBenefitTypeFilter$) {
    /** @deprecated use `QueryParamBenefitTypeFilter$inboundSchema` instead. */
    QueryParamBenefitTypeFilter$.inboundSchema = exports.QueryParamBenefitTypeFilter$inboundSchema;
    /** @deprecated use `QueryParamBenefitTypeFilter$outboundSchema` instead. */
    QueryParamBenefitTypeFilter$.outboundSchema = exports.QueryParamBenefitTypeFilter$outboundSchema;
})(QueryParamBenefitTypeFilter$ || (exports.QueryParamBenefitTypeFilter$ = QueryParamBenefitTypeFilter$ = {}));
function queryParamBenefitTypeFilterToJSON(queryParamBenefitTypeFilter) {
    return JSON.stringify(exports.QueryParamBenefitTypeFilter$outboundSchema.parse(queryParamBenefitTypeFilter));
}
function queryParamBenefitTypeFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.QueryParamBenefitTypeFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamBenefitTypeFilter' from JSON`);
}
/** @internal */
exports.CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$;
(function (CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$) {
    /** @deprecated use `CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$inboundSchema` instead. */
    CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$.inboundSchema = exports.CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$inboundSchema;
    /** @deprecated use `CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$outboundSchema` instead. */
    CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$.outboundSchema = exports.CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$outboundSchema;
})(CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$ || (exports.CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$ = CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$ = {}));
function customerPortalBenefitGrantsListQueryParamBenefitIDFilterToJSON(customerPortalBenefitGrantsListQueryParamBenefitIDFilter) {
    return JSON.stringify(exports.CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$outboundSchema
        .parse(customerPortalBenefitGrantsListQueryParamBenefitIDFilter));
}
function customerPortalBenefitGrantsListQueryParamBenefitIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'CustomerPortalBenefitGrantsListQueryParamBenefitIDFilter' from JSON`);
}
/** @internal */
exports.CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$;
(function (CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$.inboundSchema = exports.CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$.outboundSchema = exports.CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$outboundSchema;
})(CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$ || (exports.CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$ = CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$ = {}));
function customerPortalBenefitGrantsListQueryParamOrganizationIDFilterToJSON(customerPortalBenefitGrantsListQueryParamOrganizationIDFilter) {
    return JSON.stringify(exports.CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$outboundSchema
        .parse(customerPortalBenefitGrantsListQueryParamOrganizationIDFilter));
}
function customerPortalBenefitGrantsListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'CustomerPortalBenefitGrantsListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
exports.QueryParamCheckoutIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.QueryParamCheckoutIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var QueryParamCheckoutIDFilter$;
(function (QueryParamCheckoutIDFilter$) {
    /** @deprecated use `QueryParamCheckoutIDFilter$inboundSchema` instead. */
    QueryParamCheckoutIDFilter$.inboundSchema = exports.QueryParamCheckoutIDFilter$inboundSchema;
    /** @deprecated use `QueryParamCheckoutIDFilter$outboundSchema` instead. */
    QueryParamCheckoutIDFilter$.outboundSchema = exports.QueryParamCheckoutIDFilter$outboundSchema;
})(QueryParamCheckoutIDFilter$ || (exports.QueryParamCheckoutIDFilter$ = QueryParamCheckoutIDFilter$ = {}));
function queryParamCheckoutIDFilterToJSON(queryParamCheckoutIDFilter) {
    return JSON.stringify(exports.QueryParamCheckoutIDFilter$outboundSchema.parse(queryParamCheckoutIDFilter));
}
function queryParamCheckoutIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.QueryParamCheckoutIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamCheckoutIDFilter' from JSON`);
}
/** @internal */
exports.QueryParamOrderIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.QueryParamOrderIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var QueryParamOrderIDFilter$;
(function (QueryParamOrderIDFilter$) {
    /** @deprecated use `QueryParamOrderIDFilter$inboundSchema` instead. */
    QueryParamOrderIDFilter$.inboundSchema = exports.QueryParamOrderIDFilter$inboundSchema;
    /** @deprecated use `QueryParamOrderIDFilter$outboundSchema` instead. */
    QueryParamOrderIDFilter$.outboundSchema = exports.QueryParamOrderIDFilter$outboundSchema;
})(QueryParamOrderIDFilter$ || (exports.QueryParamOrderIDFilter$ = QueryParamOrderIDFilter$ = {}));
function queryParamOrderIDFilterToJSON(queryParamOrderIDFilter) {
    return JSON.stringify(exports.QueryParamOrderIDFilter$outboundSchema.parse(queryParamOrderIDFilter));
}
function queryParamOrderIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.QueryParamOrderIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamOrderIDFilter' from JSON`);
}
/** @internal */
exports.QueryParamSubscriptionIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.QueryParamSubscriptionIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var QueryParamSubscriptionIDFilter$;
(function (QueryParamSubscriptionIDFilter$) {
    /** @deprecated use `QueryParamSubscriptionIDFilter$inboundSchema` instead. */
    QueryParamSubscriptionIDFilter$.inboundSchema = exports.QueryParamSubscriptionIDFilter$inboundSchema;
    /** @deprecated use `QueryParamSubscriptionIDFilter$outboundSchema` instead. */
    QueryParamSubscriptionIDFilter$.outboundSchema = exports.QueryParamSubscriptionIDFilter$outboundSchema;
})(QueryParamSubscriptionIDFilter$ || (exports.QueryParamSubscriptionIDFilter$ = QueryParamSubscriptionIDFilter$ = {}));
function queryParamSubscriptionIDFilterToJSON(queryParamSubscriptionIDFilter) {
    return JSON.stringify(exports.QueryParamSubscriptionIDFilter$outboundSchema.parse(queryParamSubscriptionIDFilter));
}
function queryParamSubscriptionIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.QueryParamSubscriptionIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamSubscriptionIDFilter' from JSON`);
}
/** @internal */
exports.CustomerPortalBenefitGrantsListRequest$inboundSchema = z.object({
    type_filter: z.nullable(z.union([benefittype_js_1.BenefitType$inboundSchema, z.array(benefittype_js_1.BenefitType$inboundSchema)])).optional(),
    benefit_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    checkout_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    order_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    subscription_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(customerbenefitgrantsortproperty_js_1.CustomerBenefitGrantSortProperty$inboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "type_filter": "typeFilter",
        "benefit_id": "benefitId",
        "organization_id": "organizationId",
        "checkout_id": "checkoutId",
        "order_id": "orderId",
        "subscription_id": "subscriptionId",
    });
});
/** @internal */
exports.CustomerPortalBenefitGrantsListRequest$outboundSchema = z.object({
    typeFilter: z.nullable(z.union([benefittype_js_1.BenefitType$outboundSchema, z.array(benefittype_js_1.BenefitType$outboundSchema)])).optional(),
    benefitId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    checkoutId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    orderId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    subscriptionId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(customerbenefitgrantsortproperty_js_1.CustomerBenefitGrantSortProperty$outboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        typeFilter: "type_filter",
        benefitId: "benefit_id",
        organizationId: "organization_id",
        checkoutId: "checkout_id",
        orderId: "order_id",
        subscriptionId: "subscription_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerPortalBenefitGrantsListRequest$;
(function (CustomerPortalBenefitGrantsListRequest$) {
    /** @deprecated use `CustomerPortalBenefitGrantsListRequest$inboundSchema` instead. */
    CustomerPortalBenefitGrantsListRequest$.inboundSchema = exports.CustomerPortalBenefitGrantsListRequest$inboundSchema;
    /** @deprecated use `CustomerPortalBenefitGrantsListRequest$outboundSchema` instead. */
    CustomerPortalBenefitGrantsListRequest$.outboundSchema = exports.CustomerPortalBenefitGrantsListRequest$outboundSchema;
})(CustomerPortalBenefitGrantsListRequest$ || (exports.CustomerPortalBenefitGrantsListRequest$ = CustomerPortalBenefitGrantsListRequest$ = {}));
function customerPortalBenefitGrantsListRequestToJSON(customerPortalBenefitGrantsListRequest) {
    return JSON.stringify(exports.CustomerPortalBenefitGrantsListRequest$outboundSchema.parse(customerPortalBenefitGrantsListRequest));
}
function customerPortalBenefitGrantsListRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerPortalBenefitGrantsListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalBenefitGrantsListRequest' from JSON`);
}
/** @internal */
exports.CustomerPortalBenefitGrantsListResponse$inboundSchema = z.object({
    Result: listresourcecustomerbenefitgrant_js_1.ListResourceCustomerBenefitGrant$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Result": "result",
    });
});
/** @internal */
exports.CustomerPortalBenefitGrantsListResponse$outboundSchema = z.object({
    result: listresourcecustomerbenefitgrant_js_1.ListResourceCustomerBenefitGrant$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerPortalBenefitGrantsListResponse$;
(function (CustomerPortalBenefitGrantsListResponse$) {
    /** @deprecated use `CustomerPortalBenefitGrantsListResponse$inboundSchema` instead. */
    CustomerPortalBenefitGrantsListResponse$.inboundSchema = exports.CustomerPortalBenefitGrantsListResponse$inboundSchema;
    /** @deprecated use `CustomerPortalBenefitGrantsListResponse$outboundSchema` instead. */
    CustomerPortalBenefitGrantsListResponse$.outboundSchema = exports.CustomerPortalBenefitGrantsListResponse$outboundSchema;
})(CustomerPortalBenefitGrantsListResponse$ || (exports.CustomerPortalBenefitGrantsListResponse$ = CustomerPortalBenefitGrantsListResponse$ = {}));
function customerPortalBenefitGrantsListResponseToJSON(customerPortalBenefitGrantsListResponse) {
    return JSON.stringify(exports.CustomerPortalBenefitGrantsListResponse$outboundSchema.parse(customerPortalBenefitGrantsListResponse));
}
function customerPortalBenefitGrantsListResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerPortalBenefitGrantsListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalBenefitGrantsListResponse' from JSON`);
}
//# sourceMappingURL=customerportalbenefitgrantslist.js.map