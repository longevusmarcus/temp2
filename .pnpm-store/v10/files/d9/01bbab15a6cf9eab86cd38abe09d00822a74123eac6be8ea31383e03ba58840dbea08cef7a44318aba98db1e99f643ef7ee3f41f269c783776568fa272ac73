/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const SubscriptionsRevokeRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const SubscriptionsRevokeRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SubscriptionsRevokeRequest$;
(function (SubscriptionsRevokeRequest$) {
    /** @deprecated use `SubscriptionsRevokeRequest$inboundSchema` instead. */
    SubscriptionsRevokeRequest$.inboundSchema = SubscriptionsRevokeRequest$inboundSchema;
    /** @deprecated use `SubscriptionsRevokeRequest$outboundSchema` instead. */
    SubscriptionsRevokeRequest$.outboundSchema = SubscriptionsRevokeRequest$outboundSchema;
})(SubscriptionsRevokeRequest$ || (SubscriptionsRevokeRequest$ = {}));
export function subscriptionsRevokeRequestToJSON(subscriptionsRevokeRequest) {
    return JSON.stringify(SubscriptionsRevokeRequest$outboundSchema.parse(subscriptionsRevokeRequest));
}
export function subscriptionsRevokeRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SubscriptionsRevokeRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriptionsRevokeRequest' from JSON`);
}
//# sourceMappingURL=subscriptionsrevoke.js.map