/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const SubscriptionsGetRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const SubscriptionsGetRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SubscriptionsGetRequest$;
(function (SubscriptionsGetRequest$) {
    /** @deprecated use `SubscriptionsGetRequest$inboundSchema` instead. */
    SubscriptionsGetRequest$.inboundSchema = SubscriptionsGetRequest$inboundSchema;
    /** @deprecated use `SubscriptionsGetRequest$outboundSchema` instead. */
    SubscriptionsGetRequest$.outboundSchema = SubscriptionsGetRequest$outboundSchema;
})(SubscriptionsGetRequest$ || (SubscriptionsGetRequest$ = {}));
export function subscriptionsGetRequestToJSON(subscriptionsGetRequest) {
    return JSON.stringify(SubscriptionsGetRequest$outboundSchema.parse(subscriptionsGetRequest));
}
export function subscriptionsGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SubscriptionsGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriptionsGetRequest' from JSON`);
}
//# sourceMappingURL=subscriptionsget.js.map