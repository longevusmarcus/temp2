import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { CustomerOrderSortProperty } from "../components/customerordersortproperty.js";
import { ListResourceCustomerOrder, ListResourceCustomerOrder$Outbound } from "../components/listresourcecustomerorder.js";
import { ProductBillingType } from "../components/productbillingtype.js";
import { ProductPriceType } from "../components/productpricetype.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CustomerPortalOrdersListSecurity = {
    customerSession: string;
};
/**
 * Filter by organization ID.
 */
export type CustomerPortalOrdersListQueryParamOrganizationIDFilter = string | Array<string>;
/**
 * Filter by product ID.
 */
export type CustomerPortalOrdersListQueryParamProductIDFilter = string | Array<string>;
/**
 * Filter by product billing type. `recurring` will filter data corresponding to subscriptions creations or renewals. `one_time` will filter data corresponding to one-time purchases.
 */
export type CustomerPortalOrdersListQueryParamProductBillingTypeFilter = ProductBillingType | Array<ProductBillingType>;
export type QueryParamProductPriceTypeFilter = ProductPriceType | Array<ProductPriceType>;
/**
 * Filter by subscription ID.
 */
export type CustomerPortalOrdersListQueryParamSubscriptionIDFilter = string | Array<string>;
export type CustomerPortalOrdersListRequest = {
    /**
     * Filter by organization ID.
     */
    organizationId?: string | Array<string> | null | undefined;
    /**
     * Filter by product ID.
     */
    productId?: string | Array<string> | null | undefined;
    /**
     * Filter by product billing type. `recurring` will filter data corresponding to subscriptions creations or renewals. `one_time` will filter data corresponding to one-time purchases.
     */
    productBillingType?: ProductBillingType | Array<ProductBillingType> | null | undefined;
    /**
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    productPriceType?: ProductPriceType | Array<ProductPriceType> | null | undefined;
    /**
     * Filter by subscription ID.
     */
    subscriptionId?: string | Array<string> | null | undefined;
    /**
     * Search by product or organization name.
     */
    query?: string | null | undefined;
    /**
     * Page number, defaults to 1.
     */
    page?: number | undefined;
    /**
     * Size of a page, defaults to 10. Maximum is 100.
     */
    limit?: number | undefined;
    /**
     * Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.
     */
    sorting?: Array<CustomerOrderSortProperty> | null | undefined;
};
export type CustomerPortalOrdersListResponse = {
    result: ListResourceCustomerOrder;
};
/** @internal */
export declare const CustomerPortalOrdersListSecurity$inboundSchema: z.ZodType<CustomerPortalOrdersListSecurity, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalOrdersListSecurity$Outbound = {
    customer_session: string;
};
/** @internal */
export declare const CustomerPortalOrdersListSecurity$outboundSchema: z.ZodType<CustomerPortalOrdersListSecurity$Outbound, z.ZodTypeDef, CustomerPortalOrdersListSecurity>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalOrdersListSecurity$ {
    /** @deprecated use `CustomerPortalOrdersListSecurity$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalOrdersListSecurity, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalOrdersListSecurity$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalOrdersListSecurity$Outbound, z.ZodTypeDef, CustomerPortalOrdersListSecurity>;
    /** @deprecated use `CustomerPortalOrdersListSecurity$Outbound` instead. */
    type Outbound = CustomerPortalOrdersListSecurity$Outbound;
}
export declare function customerPortalOrdersListSecurityToJSON(customerPortalOrdersListSecurity: CustomerPortalOrdersListSecurity): string;
export declare function customerPortalOrdersListSecurityFromJSON(jsonString: string): SafeParseResult<CustomerPortalOrdersListSecurity, SDKValidationError>;
/** @internal */
export declare const CustomerPortalOrdersListQueryParamOrganizationIDFilter$inboundSchema: z.ZodType<CustomerPortalOrdersListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalOrdersListQueryParamOrganizationIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const CustomerPortalOrdersListQueryParamOrganizationIDFilter$outboundSchema: z.ZodType<CustomerPortalOrdersListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, CustomerPortalOrdersListQueryParamOrganizationIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalOrdersListQueryParamOrganizationIDFilter$ {
    /** @deprecated use `CustomerPortalOrdersListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalOrdersListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalOrdersListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalOrdersListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, CustomerPortalOrdersListQueryParamOrganizationIDFilter>;
    /** @deprecated use `CustomerPortalOrdersListQueryParamOrganizationIDFilter$Outbound` instead. */
    type Outbound = CustomerPortalOrdersListQueryParamOrganizationIDFilter$Outbound;
}
export declare function customerPortalOrdersListQueryParamOrganizationIDFilterToJSON(customerPortalOrdersListQueryParamOrganizationIDFilter: CustomerPortalOrdersListQueryParamOrganizationIDFilter): string;
export declare function customerPortalOrdersListQueryParamOrganizationIDFilterFromJSON(jsonString: string): SafeParseResult<CustomerPortalOrdersListQueryParamOrganizationIDFilter, SDKValidationError>;
/** @internal */
export declare const CustomerPortalOrdersListQueryParamProductIDFilter$inboundSchema: z.ZodType<CustomerPortalOrdersListQueryParamProductIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalOrdersListQueryParamProductIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const CustomerPortalOrdersListQueryParamProductIDFilter$outboundSchema: z.ZodType<CustomerPortalOrdersListQueryParamProductIDFilter$Outbound, z.ZodTypeDef, CustomerPortalOrdersListQueryParamProductIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalOrdersListQueryParamProductIDFilter$ {
    /** @deprecated use `CustomerPortalOrdersListQueryParamProductIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalOrdersListQueryParamProductIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalOrdersListQueryParamProductIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalOrdersListQueryParamProductIDFilter$Outbound, z.ZodTypeDef, CustomerPortalOrdersListQueryParamProductIDFilter>;
    /** @deprecated use `CustomerPortalOrdersListQueryParamProductIDFilter$Outbound` instead. */
    type Outbound = CustomerPortalOrdersListQueryParamProductIDFilter$Outbound;
}
export declare function customerPortalOrdersListQueryParamProductIDFilterToJSON(customerPortalOrdersListQueryParamProductIDFilter: CustomerPortalOrdersListQueryParamProductIDFilter): string;
export declare function customerPortalOrdersListQueryParamProductIDFilterFromJSON(jsonString: string): SafeParseResult<CustomerPortalOrdersListQueryParamProductIDFilter, SDKValidationError>;
/** @internal */
export declare const CustomerPortalOrdersListQueryParamProductBillingTypeFilter$inboundSchema: z.ZodType<CustomerPortalOrdersListQueryParamProductBillingTypeFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalOrdersListQueryParamProductBillingTypeFilter$Outbound = string | Array<string>;
/** @internal */
export declare const CustomerPortalOrdersListQueryParamProductBillingTypeFilter$outboundSchema: z.ZodType<CustomerPortalOrdersListQueryParamProductBillingTypeFilter$Outbound, z.ZodTypeDef, CustomerPortalOrdersListQueryParamProductBillingTypeFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalOrdersListQueryParamProductBillingTypeFilter$ {
    /** @deprecated use `CustomerPortalOrdersListQueryParamProductBillingTypeFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalOrdersListQueryParamProductBillingTypeFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalOrdersListQueryParamProductBillingTypeFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalOrdersListQueryParamProductBillingTypeFilter$Outbound, z.ZodTypeDef, CustomerPortalOrdersListQueryParamProductBillingTypeFilter>;
    /** @deprecated use `CustomerPortalOrdersListQueryParamProductBillingTypeFilter$Outbound` instead. */
    type Outbound = CustomerPortalOrdersListQueryParamProductBillingTypeFilter$Outbound;
}
export declare function customerPortalOrdersListQueryParamProductBillingTypeFilterToJSON(customerPortalOrdersListQueryParamProductBillingTypeFilter: CustomerPortalOrdersListQueryParamProductBillingTypeFilter): string;
export declare function customerPortalOrdersListQueryParamProductBillingTypeFilterFromJSON(jsonString: string): SafeParseResult<CustomerPortalOrdersListQueryParamProductBillingTypeFilter, SDKValidationError>;
/** @internal */
export declare const QueryParamProductPriceTypeFilter$inboundSchema: z.ZodType<QueryParamProductPriceTypeFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryParamProductPriceTypeFilter$Outbound = string | Array<string>;
/** @internal */
export declare const QueryParamProductPriceTypeFilter$outboundSchema: z.ZodType<QueryParamProductPriceTypeFilter$Outbound, z.ZodTypeDef, QueryParamProductPriceTypeFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryParamProductPriceTypeFilter$ {
    /** @deprecated use `QueryParamProductPriceTypeFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryParamProductPriceTypeFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryParamProductPriceTypeFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryParamProductPriceTypeFilter$Outbound, z.ZodTypeDef, QueryParamProductPriceTypeFilter>;
    /** @deprecated use `QueryParamProductPriceTypeFilter$Outbound` instead. */
    type Outbound = QueryParamProductPriceTypeFilter$Outbound;
}
export declare function queryParamProductPriceTypeFilterToJSON(queryParamProductPriceTypeFilter: QueryParamProductPriceTypeFilter): string;
export declare function queryParamProductPriceTypeFilterFromJSON(jsonString: string): SafeParseResult<QueryParamProductPriceTypeFilter, SDKValidationError>;
/** @internal */
export declare const CustomerPortalOrdersListQueryParamSubscriptionIDFilter$inboundSchema: z.ZodType<CustomerPortalOrdersListQueryParamSubscriptionIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalOrdersListQueryParamSubscriptionIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const CustomerPortalOrdersListQueryParamSubscriptionIDFilter$outboundSchema: z.ZodType<CustomerPortalOrdersListQueryParamSubscriptionIDFilter$Outbound, z.ZodTypeDef, CustomerPortalOrdersListQueryParamSubscriptionIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalOrdersListQueryParamSubscriptionIDFilter$ {
    /** @deprecated use `CustomerPortalOrdersListQueryParamSubscriptionIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalOrdersListQueryParamSubscriptionIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalOrdersListQueryParamSubscriptionIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalOrdersListQueryParamSubscriptionIDFilter$Outbound, z.ZodTypeDef, CustomerPortalOrdersListQueryParamSubscriptionIDFilter>;
    /** @deprecated use `CustomerPortalOrdersListQueryParamSubscriptionIDFilter$Outbound` instead. */
    type Outbound = CustomerPortalOrdersListQueryParamSubscriptionIDFilter$Outbound;
}
export declare function customerPortalOrdersListQueryParamSubscriptionIDFilterToJSON(customerPortalOrdersListQueryParamSubscriptionIDFilter: CustomerPortalOrdersListQueryParamSubscriptionIDFilter): string;
export declare function customerPortalOrdersListQueryParamSubscriptionIDFilterFromJSON(jsonString: string): SafeParseResult<CustomerPortalOrdersListQueryParamSubscriptionIDFilter, SDKValidationError>;
/** @internal */
export declare const CustomerPortalOrdersListRequest$inboundSchema: z.ZodType<CustomerPortalOrdersListRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalOrdersListRequest$Outbound = {
    organization_id?: string | Array<string> | null | undefined;
    product_id?: string | Array<string> | null | undefined;
    product_billing_type?: string | Array<string> | null | undefined;
    product_price_type?: string | Array<string> | null | undefined;
    subscription_id?: string | Array<string> | null | undefined;
    query?: string | null | undefined;
    page: number;
    limit: number;
    sorting?: Array<string> | null | undefined;
};
/** @internal */
export declare const CustomerPortalOrdersListRequest$outboundSchema: z.ZodType<CustomerPortalOrdersListRequest$Outbound, z.ZodTypeDef, CustomerPortalOrdersListRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalOrdersListRequest$ {
    /** @deprecated use `CustomerPortalOrdersListRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalOrdersListRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalOrdersListRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalOrdersListRequest$Outbound, z.ZodTypeDef, CustomerPortalOrdersListRequest>;
    /** @deprecated use `CustomerPortalOrdersListRequest$Outbound` instead. */
    type Outbound = CustomerPortalOrdersListRequest$Outbound;
}
export declare function customerPortalOrdersListRequestToJSON(customerPortalOrdersListRequest: CustomerPortalOrdersListRequest): string;
export declare function customerPortalOrdersListRequestFromJSON(jsonString: string): SafeParseResult<CustomerPortalOrdersListRequest, SDKValidationError>;
/** @internal */
export declare const CustomerPortalOrdersListResponse$inboundSchema: z.ZodType<CustomerPortalOrdersListResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalOrdersListResponse$Outbound = {
    Result: ListResourceCustomerOrder$Outbound;
};
/** @internal */
export declare const CustomerPortalOrdersListResponse$outboundSchema: z.ZodType<CustomerPortalOrdersListResponse$Outbound, z.ZodTypeDef, CustomerPortalOrdersListResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalOrdersListResponse$ {
    /** @deprecated use `CustomerPortalOrdersListResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalOrdersListResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalOrdersListResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalOrdersListResponse$Outbound, z.ZodTypeDef, CustomerPortalOrdersListResponse>;
    /** @deprecated use `CustomerPortalOrdersListResponse$Outbound` instead. */
    type Outbound = CustomerPortalOrdersListResponse$Outbound;
}
export declare function customerPortalOrdersListResponseToJSON(customerPortalOrdersListResponse: CustomerPortalOrdersListResponse): string;
export declare function customerPortalOrdersListResponseFromJSON(jsonString: string): SafeParseResult<CustomerPortalOrdersListResponse, SDKValidationError>;
//# sourceMappingURL=customerportalorderslist.d.ts.map