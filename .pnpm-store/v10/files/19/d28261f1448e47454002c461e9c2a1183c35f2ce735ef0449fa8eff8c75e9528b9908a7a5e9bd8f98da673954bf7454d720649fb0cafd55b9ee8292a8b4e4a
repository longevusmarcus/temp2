/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { S3FileUploadPart$inboundSchema, S3FileUploadPart$outboundSchema, } from "./s3fileuploadpart.js";
/** @internal */
export const S3FileUploadMultipart$inboundSchema = z.object({
    id: z.string(),
    path: z.string(),
    parts: z.array(S3FileUploadPart$inboundSchema),
});
/** @internal */
export const S3FileUploadMultipart$outboundSchema = z.object({
    id: z.string(),
    path: z.string(),
    parts: z.array(S3FileUploadPart$outboundSchema),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var S3FileUploadMultipart$;
(function (S3FileUploadMultipart$) {
    /** @deprecated use `S3FileUploadMultipart$inboundSchema` instead. */
    S3FileUploadMultipart$.inboundSchema = S3FileUploadMultipart$inboundSchema;
    /** @deprecated use `S3FileUploadMultipart$outboundSchema` instead. */
    S3FileUploadMultipart$.outboundSchema = S3FileUploadMultipart$outboundSchema;
})(S3FileUploadMultipart$ || (S3FileUploadMultipart$ = {}));
export function s3FileUploadMultipartToJSON(s3FileUploadMultipart) {
    return JSON.stringify(S3FileUploadMultipart$outboundSchema.parse(s3FileUploadMultipart));
}
export function s3FileUploadMultipartFromJSON(jsonString) {
    return safeParse(jsonString, (x) => S3FileUploadMultipart$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'S3FileUploadMultipart' from JSON`);
}
//# sourceMappingURL=s3fileuploadmultipart.js.map