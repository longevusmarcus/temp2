/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const EventsGetRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const EventsGetRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EventsGetRequest$;
(function (EventsGetRequest$) {
    /** @deprecated use `EventsGetRequest$inboundSchema` instead. */
    EventsGetRequest$.inboundSchema = EventsGetRequest$inboundSchema;
    /** @deprecated use `EventsGetRequest$outboundSchema` instead. */
    EventsGetRequest$.outboundSchema = EventsGetRequest$outboundSchema;
})(EventsGetRequest$ || (EventsGetRequest$ = {}));
export function eventsGetRequestToJSON(eventsGetRequest) {
    return JSON.stringify(EventsGetRequest$outboundSchema.parse(eventsGetRequest));
}
export function eventsGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => EventsGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EventsGetRequest' from JSON`);
}
//# sourceMappingURL=eventsget.js.map