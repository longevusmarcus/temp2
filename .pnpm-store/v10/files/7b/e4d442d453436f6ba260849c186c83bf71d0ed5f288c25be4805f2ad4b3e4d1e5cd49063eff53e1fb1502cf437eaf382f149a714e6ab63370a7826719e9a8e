/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Pagination$inboundSchema, Pagination$outboundSchema, } from "./pagination.js";
import { Subscription$inboundSchema, Subscription$outboundSchema, } from "./subscription.js";
/** @internal */
export const ListResourceSubscription$inboundSchema = z.object({
    items: z.array(Subscription$inboundSchema),
    pagination: Pagination$inboundSchema,
});
/** @internal */
export const ListResourceSubscription$outboundSchema = z.object({
    items: z.array(Subscription$outboundSchema),
    pagination: Pagination$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListResourceSubscription$;
(function (ListResourceSubscription$) {
    /** @deprecated use `ListResourceSubscription$inboundSchema` instead. */
    ListResourceSubscription$.inboundSchema = ListResourceSubscription$inboundSchema;
    /** @deprecated use `ListResourceSubscription$outboundSchema` instead. */
    ListResourceSubscription$.outboundSchema = ListResourceSubscription$outboundSchema;
})(ListResourceSubscription$ || (ListResourceSubscription$ = {}));
export function listResourceSubscriptionToJSON(listResourceSubscription) {
    return JSON.stringify(ListResourceSubscription$outboundSchema.parse(listResourceSubscription));
}
export function listResourceSubscriptionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListResourceSubscription$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListResourceSubscription' from JSON`);
}
//# sourceMappingURL=listresourcesubscription.js.map