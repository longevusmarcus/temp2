import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { OrganizationDetails, OrganizationDetails$Outbound } from "./organizationdetails.js";
import { OrganizationFeatureSettings, OrganizationFeatureSettings$Outbound } from "./organizationfeaturesettings.js";
import { OrganizationSocialLink, OrganizationSocialLink$Outbound } from "./organizationsociallink.js";
import { OrganizationSubscriptionSettings, OrganizationSubscriptionSettings$Outbound } from "./organizationsubscriptionsettings.js";
export type OrganizationCreate = {
    name: string;
    slug: string;
    avatarUrl?: string | null | undefined;
    /**
     * Public support email.
     */
    email?: string | null | undefined;
    /**
     * Official website of the organization.
     */
    website?: string | null | undefined;
    /**
     * Link to social profiles.
     */
    socials?: Array<OrganizationSocialLink> | null | undefined;
    /**
     * Additional, private, business details Polar needs about active organizations for compliance (KYC).
     */
    details?: OrganizationDetails | null | undefined;
    featureSettings?: OrganizationFeatureSettings | null | undefined;
    subscriptionSettings?: OrganizationSubscriptionSettings | null | undefined;
};
/** @internal */
export declare const OrganizationCreate$inboundSchema: z.ZodType<OrganizationCreate, z.ZodTypeDef, unknown>;
/** @internal */
export type OrganizationCreate$Outbound = {
    name: string;
    slug: string;
    avatar_url?: string | null | undefined;
    email?: string | null | undefined;
    website?: string | null | undefined;
    socials?: Array<OrganizationSocialLink$Outbound> | null | undefined;
    details?: OrganizationDetails$Outbound | null | undefined;
    feature_settings?: OrganizationFeatureSettings$Outbound | null | undefined;
    subscription_settings?: OrganizationSubscriptionSettings$Outbound | null | undefined;
};
/** @internal */
export declare const OrganizationCreate$outboundSchema: z.ZodType<OrganizationCreate$Outbound, z.ZodTypeDef, OrganizationCreate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrganizationCreate$ {
    /** @deprecated use `OrganizationCreate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrganizationCreate, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrganizationCreate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrganizationCreate$Outbound, z.ZodTypeDef, OrganizationCreate>;
    /** @deprecated use `OrganizationCreate$Outbound` instead. */
    type Outbound = OrganizationCreate$Outbound;
}
export declare function organizationCreateToJSON(organizationCreate: OrganizationCreate): string;
export declare function organizationCreateFromJSON(jsonString: string): SafeParseResult<OrganizationCreate, SDKValidationError>;
//# sourceMappingURL=organizationcreate.d.ts.map