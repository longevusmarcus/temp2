/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CustomFieldTextProperties$inboundSchema, CustomFieldTextProperties$outboundSchema, } from "./customfieldtextproperties.js";
/** @internal */
export const CustomFieldCreateTextMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
export const CustomFieldCreateTextMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldCreateTextMetadata$;
(function (CustomFieldCreateTextMetadata$) {
    /** @deprecated use `CustomFieldCreateTextMetadata$inboundSchema` instead. */
    CustomFieldCreateTextMetadata$.inboundSchema = CustomFieldCreateTextMetadata$inboundSchema;
    /** @deprecated use `CustomFieldCreateTextMetadata$outboundSchema` instead. */
    CustomFieldCreateTextMetadata$.outboundSchema = CustomFieldCreateTextMetadata$outboundSchema;
})(CustomFieldCreateTextMetadata$ || (CustomFieldCreateTextMetadata$ = {}));
export function customFieldCreateTextMetadataToJSON(customFieldCreateTextMetadata) {
    return JSON.stringify(CustomFieldCreateTextMetadata$outboundSchema.parse(customFieldCreateTextMetadata));
}
export function customFieldCreateTextMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldCreateTextMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldCreateTextMetadata' from JSON`);
}
/** @internal */
export const CustomFieldCreateText$inboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    type: z.literal("text").optional(),
    slug: z.string(),
    name: z.string(),
    organization_id: z.nullable(z.string()).optional(),
    properties: CustomFieldTextProperties$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "organization_id": "organizationId",
    });
});
/** @internal */
export const CustomFieldCreateText$outboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    type: z.literal("text").default("text"),
    slug: z.string(),
    name: z.string(),
    organizationId: z.nullable(z.string()).optional(),
    properties: CustomFieldTextProperties$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldCreateText$;
(function (CustomFieldCreateText$) {
    /** @deprecated use `CustomFieldCreateText$inboundSchema` instead. */
    CustomFieldCreateText$.inboundSchema = CustomFieldCreateText$inboundSchema;
    /** @deprecated use `CustomFieldCreateText$outboundSchema` instead. */
    CustomFieldCreateText$.outboundSchema = CustomFieldCreateText$outboundSchema;
})(CustomFieldCreateText$ || (CustomFieldCreateText$ = {}));
export function customFieldCreateTextToJSON(customFieldCreateText) {
    return JSON.stringify(CustomFieldCreateText$outboundSchema.parse(customFieldCreateText));
}
export function customFieldCreateTextFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldCreateText$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldCreateText' from JSON`);
}
//# sourceMappingURL=customfieldcreatetext.js.map