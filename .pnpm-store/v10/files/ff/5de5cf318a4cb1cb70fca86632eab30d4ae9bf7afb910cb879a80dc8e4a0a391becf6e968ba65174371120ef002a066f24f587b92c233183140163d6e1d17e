/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { PaymentMethodCard$inboundSchema, PaymentMethodCard$outboundSchema, } from "../components/paymentmethodcard.js";
import { PaymentMethodGeneric$inboundSchema, PaymentMethodGeneric$outboundSchema, } from "../components/paymentmethodgeneric.js";
/** @internal */
export const CustomerPortalCustomersAddPaymentMethodSecurity$inboundSchema = z.object({
    customer_session: z.string(),
}).transform((v) => {
    return remap$(v, {
        "customer_session": "customerSession",
    });
});
/** @internal */
export const CustomerPortalCustomersAddPaymentMethodSecurity$outboundSchema = z.object({
    customerSession: z.string(),
}).transform((v) => {
    return remap$(v, {
        customerSession: "customer_session",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalCustomersAddPaymentMethodSecurity$;
(function (CustomerPortalCustomersAddPaymentMethodSecurity$) {
    /** @deprecated use `CustomerPortalCustomersAddPaymentMethodSecurity$inboundSchema` instead. */
    CustomerPortalCustomersAddPaymentMethodSecurity$.inboundSchema = CustomerPortalCustomersAddPaymentMethodSecurity$inboundSchema;
    /** @deprecated use `CustomerPortalCustomersAddPaymentMethodSecurity$outboundSchema` instead. */
    CustomerPortalCustomersAddPaymentMethodSecurity$.outboundSchema = CustomerPortalCustomersAddPaymentMethodSecurity$outboundSchema;
})(CustomerPortalCustomersAddPaymentMethodSecurity$ || (CustomerPortalCustomersAddPaymentMethodSecurity$ = {}));
export function customerPortalCustomersAddPaymentMethodSecurityToJSON(customerPortalCustomersAddPaymentMethodSecurity) {
    return JSON.stringify(CustomerPortalCustomersAddPaymentMethodSecurity$outboundSchema.parse(customerPortalCustomersAddPaymentMethodSecurity));
}
export function customerPortalCustomersAddPaymentMethodSecurityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalCustomersAddPaymentMethodSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalCustomersAddPaymentMethodSecurity' from JSON`);
}
/** @internal */
export const CustomerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod$inboundSchema = z.union([
    PaymentMethodGeneric$inboundSchema,
    PaymentMethodCard$inboundSchema,
]);
/** @internal */
export const CustomerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod$outboundSchema = z.union([
    PaymentMethodGeneric$outboundSchema,
    PaymentMethodCard$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod$;
(function (CustomerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod$) {
    /** @deprecated use `CustomerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod$inboundSchema` instead. */
    CustomerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod$.inboundSchema = CustomerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod$inboundSchema;
    /** @deprecated use `CustomerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod$outboundSchema` instead. */
    CustomerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod$.outboundSchema = CustomerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod$outboundSchema;
})(CustomerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod$ || (CustomerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod$ = {}));
export function customerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethodToJSON(customerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod) {
    return JSON.stringify(CustomerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod$outboundSchema
        .parse(customerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod));
}
export function customerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethodFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'CustomerPortalCustomersAddPaymentMethodResponseCustomerPortalCustomersAddPaymentMethod' from JSON`);
}
//# sourceMappingURL=customerportalcustomersaddpaymentmethod.js.map