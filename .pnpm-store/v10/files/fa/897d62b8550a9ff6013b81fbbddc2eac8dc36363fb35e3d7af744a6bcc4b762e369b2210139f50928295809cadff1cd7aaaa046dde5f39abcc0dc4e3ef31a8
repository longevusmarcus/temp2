/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const ExistingProductPrice$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const ExistingProductPrice$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ExistingProductPrice$;
(function (ExistingProductPrice$) {
    /** @deprecated use `ExistingProductPrice$inboundSchema` instead. */
    ExistingProductPrice$.inboundSchema = ExistingProductPrice$inboundSchema;
    /** @deprecated use `ExistingProductPrice$outboundSchema` instead. */
    ExistingProductPrice$.outboundSchema = ExistingProductPrice$outboundSchema;
})(ExistingProductPrice$ || (ExistingProductPrice$ = {}));
export function existingProductPriceToJSON(existingProductPrice) {
    return JSON.stringify(ExistingProductPrice$outboundSchema.parse(existingProductPrice));
}
export function existingProductPriceFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ExistingProductPrice$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExistingProductPrice' from JSON`);
}
//# sourceMappingURL=existingproductprice.js.map