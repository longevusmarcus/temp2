/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { UserInfoOrganization$inboundSchema, UserInfoOrganization$outboundSchema, } from "../components/userinfoorganization.js";
import { UserInfoUser$inboundSchema, UserInfoUser$outboundSchema, } from "../components/userinfouser.js";
/** @internal */
export const Oauth2UserinfoResponseOauth2Userinfo$inboundSchema = z.union([UserInfoOrganization$inboundSchema, UserInfoUser$inboundSchema]);
/** @internal */
export const Oauth2UserinfoResponseOauth2Userinfo$outboundSchema = z.union([UserInfoOrganization$outboundSchema, UserInfoUser$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Oauth2UserinfoResponseOauth2Userinfo$;
(function (Oauth2UserinfoResponseOauth2Userinfo$) {
    /** @deprecated use `Oauth2UserinfoResponseOauth2Userinfo$inboundSchema` instead. */
    Oauth2UserinfoResponseOauth2Userinfo$.inboundSchema = Oauth2UserinfoResponseOauth2Userinfo$inboundSchema;
    /** @deprecated use `Oauth2UserinfoResponseOauth2Userinfo$outboundSchema` instead. */
    Oauth2UserinfoResponseOauth2Userinfo$.outboundSchema = Oauth2UserinfoResponseOauth2Userinfo$outboundSchema;
})(Oauth2UserinfoResponseOauth2Userinfo$ || (Oauth2UserinfoResponseOauth2Userinfo$ = {}));
export function oauth2UserinfoResponseOauth2UserinfoToJSON(oauth2UserinfoResponseOauth2Userinfo) {
    return JSON.stringify(Oauth2UserinfoResponseOauth2Userinfo$outboundSchema.parse(oauth2UserinfoResponseOauth2Userinfo));
}
export function oauth2UserinfoResponseOauth2UserinfoFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Oauth2UserinfoResponseOauth2Userinfo$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Oauth2UserinfoResponseOauth2Userinfo' from JSON`);
}
//# sourceMappingURL=oauth2userinfo.js.map