/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const RepositoryProfileSettingsUpdate$inboundSchema = z.object({
    set_description: z.nullable(z.boolean()).optional(),
    description: z.nullable(z.string()).optional(),
    set_cover_image_url: z.nullable(z.boolean()).optional(),
    cover_image_url: z.nullable(z.string()).optional(),
    featured_organizations: z.nullable(z.array(z.string())).optional(),
    highlighted_subscription_tiers: z.nullable(z.array(z.string())).optional(),
    links: z.nullable(z.array(z.string())).optional(),
}).transform((v) => {
    return remap$(v, {
        "set_description": "setDescription",
        "set_cover_image_url": "setCoverImageUrl",
        "cover_image_url": "coverImageUrl",
        "featured_organizations": "featuredOrganizations",
        "highlighted_subscription_tiers": "highlightedSubscriptionTiers",
    });
});
/** @internal */
export const RepositoryProfileSettingsUpdate$outboundSchema = z.object({
    setDescription: z.nullable(z.boolean()).optional(),
    description: z.nullable(z.string()).optional(),
    setCoverImageUrl: z.nullable(z.boolean()).optional(),
    coverImageUrl: z.nullable(z.string()).optional(),
    featuredOrganizations: z.nullable(z.array(z.string())).optional(),
    highlightedSubscriptionTiers: z.nullable(z.array(z.string())).optional(),
    links: z.nullable(z.array(z.string())).optional(),
}).transform((v) => {
    return remap$(v, {
        setDescription: "set_description",
        setCoverImageUrl: "set_cover_image_url",
        coverImageUrl: "cover_image_url",
        featuredOrganizations: "featured_organizations",
        highlightedSubscriptionTiers: "highlighted_subscription_tiers",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RepositoryProfileSettingsUpdate$;
(function (RepositoryProfileSettingsUpdate$) {
    /** @deprecated use `RepositoryProfileSettingsUpdate$inboundSchema` instead. */
    RepositoryProfileSettingsUpdate$.inboundSchema = RepositoryProfileSettingsUpdate$inboundSchema;
    /** @deprecated use `RepositoryProfileSettingsUpdate$outboundSchema` instead. */
    RepositoryProfileSettingsUpdate$.outboundSchema = RepositoryProfileSettingsUpdate$outboundSchema;
})(RepositoryProfileSettingsUpdate$ || (RepositoryProfileSettingsUpdate$ = {}));
export function repositoryProfileSettingsUpdateToJSON(repositoryProfileSettingsUpdate) {
    return JSON.stringify(RepositoryProfileSettingsUpdate$outboundSchema.parse(repositoryProfileSettingsUpdate));
}
export function repositoryProfileSettingsUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RepositoryProfileSettingsUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RepositoryProfileSettingsUpdate' from JSON`);
}
//# sourceMappingURL=repositoryprofilesettingsupdate.js.map