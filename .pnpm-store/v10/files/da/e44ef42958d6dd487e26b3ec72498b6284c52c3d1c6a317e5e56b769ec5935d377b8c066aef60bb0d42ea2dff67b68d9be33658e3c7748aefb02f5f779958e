/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Pagination$inboundSchema, Pagination$outboundSchema, } from "./pagination.js";
import { Repository$inboundSchema, Repository$outboundSchema, } from "./repository.js";
/** @internal */
export const ListResourceRepository$inboundSchema = z.object({
    items: z.array(Repository$inboundSchema),
    pagination: Pagination$inboundSchema,
});
/** @internal */
export const ListResourceRepository$outboundSchema = z.object({
    items: z.array(Repository$outboundSchema),
    pagination: Pagination$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListResourceRepository$;
(function (ListResourceRepository$) {
    /** @deprecated use `ListResourceRepository$inboundSchema` instead. */
    ListResourceRepository$.inboundSchema = ListResourceRepository$inboundSchema;
    /** @deprecated use `ListResourceRepository$outboundSchema` instead. */
    ListResourceRepository$.outboundSchema = ListResourceRepository$outboundSchema;
})(ListResourceRepository$ || (ListResourceRepository$ = {}));
export function listResourceRepositoryToJSON(listResourceRepository) {
    return JSON.stringify(ListResourceRepository$outboundSchema.parse(listResourceRepository));
}
export function listResourceRepositoryFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListResourceRepository$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListResourceRepository' from JSON`);
}
//# sourceMappingURL=listresourcerepository.js.map