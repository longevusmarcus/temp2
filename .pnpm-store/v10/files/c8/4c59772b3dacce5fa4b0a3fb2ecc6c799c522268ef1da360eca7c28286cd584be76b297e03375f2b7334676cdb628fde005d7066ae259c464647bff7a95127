"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrganizationDetails$ = exports.OrganizationDetails$outboundSchema = exports.OrganizationDetails$inboundSchema = exports.SwitchingFrom$ = exports.SwitchingFrom$outboundSchema = exports.SwitchingFrom$inboundSchema = exports.SwitchingFrom = void 0;
exports.organizationDetailsToJSON = organizationDetailsToJSON;
exports.organizationDetailsFromJSON = organizationDetailsFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
exports.SwitchingFrom = {
    Paddle: "paddle",
    LemonSqueezy: "lemon_squeezy",
    Gumroad: "gumroad",
    Stripe: "stripe",
    Other: "other",
};
/** @internal */
exports.SwitchingFrom$inboundSchema = z.nativeEnum(exports.SwitchingFrom);
/** @internal */
exports.SwitchingFrom$outboundSchema = exports.SwitchingFrom$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SwitchingFrom$;
(function (SwitchingFrom$) {
    /** @deprecated use `SwitchingFrom$inboundSchema` instead. */
    SwitchingFrom$.inboundSchema = exports.SwitchingFrom$inboundSchema;
    /** @deprecated use `SwitchingFrom$outboundSchema` instead. */
    SwitchingFrom$.outboundSchema = exports.SwitchingFrom$outboundSchema;
})(SwitchingFrom$ || (exports.SwitchingFrom$ = SwitchingFrom$ = {}));
/** @internal */
exports.OrganizationDetails$inboundSchema = z.object({
    about: z.string(),
    product_description: z.string(),
    intended_use: z.string(),
    customer_acquisition: z.array(z.string()),
    future_annual_revenue: z.number().int(),
    switching: z.boolean().default(true),
    switching_from: z.nullable(exports.SwitchingFrom$inboundSchema).optional(),
    previous_annual_revenue: z.number().int().default(0),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "product_description": "productDescription",
        "intended_use": "intendedUse",
        "customer_acquisition": "customerAcquisition",
        "future_annual_revenue": "futureAnnualRevenue",
        "switching_from": "switchingFrom",
        "previous_annual_revenue": "previousAnnualRevenue",
    });
});
/** @internal */
exports.OrganizationDetails$outboundSchema = z.object({
    about: z.string(),
    productDescription: z.string(),
    intendedUse: z.string(),
    customerAcquisition: z.array(z.string()),
    futureAnnualRevenue: z.number().int(),
    switching: z.boolean().default(true),
    switchingFrom: z.nullable(exports.SwitchingFrom$outboundSchema).optional(),
    previousAnnualRevenue: z.number().int().default(0),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        productDescription: "product_description",
        intendedUse: "intended_use",
        customerAcquisition: "customer_acquisition",
        futureAnnualRevenue: "future_annual_revenue",
        switchingFrom: "switching_from",
        previousAnnualRevenue: "previous_annual_revenue",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrganizationDetails$;
(function (OrganizationDetails$) {
    /** @deprecated use `OrganizationDetails$inboundSchema` instead. */
    OrganizationDetails$.inboundSchema = exports.OrganizationDetails$inboundSchema;
    /** @deprecated use `OrganizationDetails$outboundSchema` instead. */
    OrganizationDetails$.outboundSchema = exports.OrganizationDetails$outboundSchema;
})(OrganizationDetails$ || (exports.OrganizationDetails$ = OrganizationDetails$ = {}));
function organizationDetailsToJSON(organizationDetails) {
    return JSON.stringify(exports.OrganizationDetails$outboundSchema.parse(organizationDetails));
}
function organizationDetailsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.OrganizationDetails$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrganizationDetails' from JSON`);
}
//# sourceMappingURL=organizationdetails.js.map