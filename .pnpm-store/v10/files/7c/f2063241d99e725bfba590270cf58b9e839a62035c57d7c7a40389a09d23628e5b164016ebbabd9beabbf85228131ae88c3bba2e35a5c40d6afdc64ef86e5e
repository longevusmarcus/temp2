/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { BenefitLicenseKeyActivationProperties$inboundSchema, BenefitLicenseKeyActivationProperties$outboundSchema, } from "./benefitlicensekeyactivationproperties.js";
import { BenefitLicenseKeyExpirationProperties$inboundSchema, BenefitLicenseKeyExpirationProperties$outboundSchema, } from "./benefitlicensekeyexpirationproperties.js";
/** @internal */
export const BenefitLicenseKeysCreateProperties$inboundSchema = z.object({
    prefix: z.nullable(z.string()).optional(),
    expires: z.nullable(BenefitLicenseKeyExpirationProperties$inboundSchema)
        .optional(),
    activations: z.nullable(BenefitLicenseKeyActivationProperties$inboundSchema)
        .optional(),
    limit_usage: z.nullable(z.number().int()).optional(),
}).transform((v) => {
    return remap$(v, {
        "limit_usage": "limitUsage",
    });
});
/** @internal */
export const BenefitLicenseKeysCreateProperties$outboundSchema = z.object({
    prefix: z.nullable(z.string()).optional(),
    expires: z.nullable(BenefitLicenseKeyExpirationProperties$outboundSchema)
        .optional(),
    activations: z.nullable(BenefitLicenseKeyActivationProperties$outboundSchema)
        .optional(),
    limitUsage: z.nullable(z.number().int()).optional(),
}).transform((v) => {
    return remap$(v, {
        limitUsage: "limit_usage",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitLicenseKeysCreateProperties$;
(function (BenefitLicenseKeysCreateProperties$) {
    /** @deprecated use `BenefitLicenseKeysCreateProperties$inboundSchema` instead. */
    BenefitLicenseKeysCreateProperties$.inboundSchema = BenefitLicenseKeysCreateProperties$inboundSchema;
    /** @deprecated use `BenefitLicenseKeysCreateProperties$outboundSchema` instead. */
    BenefitLicenseKeysCreateProperties$.outboundSchema = BenefitLicenseKeysCreateProperties$outboundSchema;
})(BenefitLicenseKeysCreateProperties$ || (BenefitLicenseKeysCreateProperties$ = {}));
export function benefitLicenseKeysCreatePropertiesToJSON(benefitLicenseKeysCreateProperties) {
    return JSON.stringify(BenefitLicenseKeysCreateProperties$outboundSchema.parse(benefitLicenseKeysCreateProperties));
}
export function benefitLicenseKeysCreatePropertiesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitLicenseKeysCreateProperties$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitLicenseKeysCreateProperties' from JSON`);
}
//# sourceMappingURL=benefitlicensekeyscreateproperties.js.map