/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { DiscountDuration$inboundSchema, DiscountDuration$outboundSchema, } from "./discountduration.js";
import { DiscountProduct$inboundSchema, DiscountProduct$outboundSchema, } from "./discountproduct.js";
import { DiscountType$inboundSchema, DiscountType$outboundSchema, } from "./discounttype.js";
/** @internal */
export const DiscountPercentageRepeatDurationMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
export const DiscountPercentageRepeatDurationMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DiscountPercentageRepeatDurationMetadata$;
(function (DiscountPercentageRepeatDurationMetadata$) {
    /** @deprecated use `DiscountPercentageRepeatDurationMetadata$inboundSchema` instead. */
    DiscountPercentageRepeatDurationMetadata$.inboundSchema = DiscountPercentageRepeatDurationMetadata$inboundSchema;
    /** @deprecated use `DiscountPercentageRepeatDurationMetadata$outboundSchema` instead. */
    DiscountPercentageRepeatDurationMetadata$.outboundSchema = DiscountPercentageRepeatDurationMetadata$outboundSchema;
})(DiscountPercentageRepeatDurationMetadata$ || (DiscountPercentageRepeatDurationMetadata$ = {}));
export function discountPercentageRepeatDurationMetadataToJSON(discountPercentageRepeatDurationMetadata) {
    return JSON.stringify(DiscountPercentageRepeatDurationMetadata$outboundSchema.parse(discountPercentageRepeatDurationMetadata));
}
export function discountPercentageRepeatDurationMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DiscountPercentageRepeatDurationMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DiscountPercentageRepeatDurationMetadata' from JSON`);
}
/** @internal */
export const DiscountPercentageRepeatDuration$inboundSchema = z.object({
    duration: DiscountDuration$inboundSchema,
    duration_in_months: z.number().int(),
    type: DiscountType$inboundSchema,
    basis_points: z.number().int(),
    created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    modified_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    id: z.string(),
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()])),
    name: z.string(),
    code: z.nullable(z.string()),
    starts_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    ends_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    max_redemptions: z.nullable(z.number().int()),
    redemptions_count: z.number().int(),
    organization_id: z.string(),
    products: z.array(DiscountProduct$inboundSchema),
}).transform((v) => {
    return remap$(v, {
        "duration_in_months": "durationInMonths",
        "basis_points": "basisPoints",
        "created_at": "createdAt",
        "modified_at": "modifiedAt",
        "starts_at": "startsAt",
        "ends_at": "endsAt",
        "max_redemptions": "maxRedemptions",
        "redemptions_count": "redemptionsCount",
        "organization_id": "organizationId",
    });
});
/** @internal */
export const DiscountPercentageRepeatDuration$outboundSchema = z.object({
    duration: DiscountDuration$outboundSchema,
    durationInMonths: z.number().int(),
    type: DiscountType$outboundSchema,
    basisPoints: z.number().int(),
    createdAt: z.date().transform(v => v.toISOString()),
    modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),
    id: z.string(),
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()])),
    name: z.string(),
    code: z.nullable(z.string()),
    startsAt: z.nullable(z.date().transform(v => v.toISOString())),
    endsAt: z.nullable(z.date().transform(v => v.toISOString())),
    maxRedemptions: z.nullable(z.number().int()),
    redemptionsCount: z.number().int(),
    organizationId: z.string(),
    products: z.array(DiscountProduct$outboundSchema),
}).transform((v) => {
    return remap$(v, {
        durationInMonths: "duration_in_months",
        basisPoints: "basis_points",
        createdAt: "created_at",
        modifiedAt: "modified_at",
        startsAt: "starts_at",
        endsAt: "ends_at",
        maxRedemptions: "max_redemptions",
        redemptionsCount: "redemptions_count",
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DiscountPercentageRepeatDuration$;
(function (DiscountPercentageRepeatDuration$) {
    /** @deprecated use `DiscountPercentageRepeatDuration$inboundSchema` instead. */
    DiscountPercentageRepeatDuration$.inboundSchema = DiscountPercentageRepeatDuration$inboundSchema;
    /** @deprecated use `DiscountPercentageRepeatDuration$outboundSchema` instead. */
    DiscountPercentageRepeatDuration$.outboundSchema = DiscountPercentageRepeatDuration$outboundSchema;
})(DiscountPercentageRepeatDuration$ || (DiscountPercentageRepeatDuration$ = {}));
export function discountPercentageRepeatDurationToJSON(discountPercentageRepeatDuration) {
    return JSON.stringify(DiscountPercentageRepeatDuration$outboundSchema.parse(discountPercentageRepeatDuration));
}
export function discountPercentageRepeatDurationFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DiscountPercentageRepeatDuration$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DiscountPercentageRepeatDuration' from JSON`);
}
//# sourceMappingURL=discountpercentagerepeatduration.js.map