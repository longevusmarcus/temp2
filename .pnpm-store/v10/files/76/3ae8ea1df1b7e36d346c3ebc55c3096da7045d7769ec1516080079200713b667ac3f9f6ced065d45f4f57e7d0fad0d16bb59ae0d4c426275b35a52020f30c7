/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CustomerOrderSortProperty$inboundSchema, CustomerOrderSortProperty$outboundSchema, } from "../components/customerordersortproperty.js";
import { ListResourceCustomerOrder$inboundSchema, ListResourceCustomerOrder$outboundSchema, } from "../components/listresourcecustomerorder.js";
import { ProductBillingType$inboundSchema, ProductBillingType$outboundSchema, } from "../components/productbillingtype.js";
import { ProductPriceType$inboundSchema, ProductPriceType$outboundSchema, } from "../components/productpricetype.js";
/** @internal */
export const CustomerPortalOrdersListSecurity$inboundSchema = z.object({
    customer_session: z.string(),
}).transform((v) => {
    return remap$(v, {
        "customer_session": "customerSession",
    });
});
/** @internal */
export const CustomerPortalOrdersListSecurity$outboundSchema = z.object({
    customerSession: z.string(),
}).transform((v) => {
    return remap$(v, {
        customerSession: "customer_session",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalOrdersListSecurity$;
(function (CustomerPortalOrdersListSecurity$) {
    /** @deprecated use `CustomerPortalOrdersListSecurity$inboundSchema` instead. */
    CustomerPortalOrdersListSecurity$.inboundSchema = CustomerPortalOrdersListSecurity$inboundSchema;
    /** @deprecated use `CustomerPortalOrdersListSecurity$outboundSchema` instead. */
    CustomerPortalOrdersListSecurity$.outboundSchema = CustomerPortalOrdersListSecurity$outboundSchema;
})(CustomerPortalOrdersListSecurity$ || (CustomerPortalOrdersListSecurity$ = {}));
export function customerPortalOrdersListSecurityToJSON(customerPortalOrdersListSecurity) {
    return JSON.stringify(CustomerPortalOrdersListSecurity$outboundSchema.parse(customerPortalOrdersListSecurity));
}
export function customerPortalOrdersListSecurityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalOrdersListSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalOrdersListSecurity' from JSON`);
}
/** @internal */
export const CustomerPortalOrdersListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const CustomerPortalOrdersListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalOrdersListQueryParamOrganizationIDFilter$;
(function (CustomerPortalOrdersListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `CustomerPortalOrdersListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    CustomerPortalOrdersListQueryParamOrganizationIDFilter$.inboundSchema = CustomerPortalOrdersListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `CustomerPortalOrdersListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    CustomerPortalOrdersListQueryParamOrganizationIDFilter$.outboundSchema = CustomerPortalOrdersListQueryParamOrganizationIDFilter$outboundSchema;
})(CustomerPortalOrdersListQueryParamOrganizationIDFilter$ || (CustomerPortalOrdersListQueryParamOrganizationIDFilter$ = {}));
export function customerPortalOrdersListQueryParamOrganizationIDFilterToJSON(customerPortalOrdersListQueryParamOrganizationIDFilter) {
    return JSON.stringify(CustomerPortalOrdersListQueryParamOrganizationIDFilter$outboundSchema.parse(customerPortalOrdersListQueryParamOrganizationIDFilter));
}
export function customerPortalOrdersListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalOrdersListQueryParamOrganizationIDFilter$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'CustomerPortalOrdersListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
export const CustomerPortalOrdersListQueryParamProductIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const CustomerPortalOrdersListQueryParamProductIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalOrdersListQueryParamProductIDFilter$;
(function (CustomerPortalOrdersListQueryParamProductIDFilter$) {
    /** @deprecated use `CustomerPortalOrdersListQueryParamProductIDFilter$inboundSchema` instead. */
    CustomerPortalOrdersListQueryParamProductIDFilter$.inboundSchema = CustomerPortalOrdersListQueryParamProductIDFilter$inboundSchema;
    /** @deprecated use `CustomerPortalOrdersListQueryParamProductIDFilter$outboundSchema` instead. */
    CustomerPortalOrdersListQueryParamProductIDFilter$.outboundSchema = CustomerPortalOrdersListQueryParamProductIDFilter$outboundSchema;
})(CustomerPortalOrdersListQueryParamProductIDFilter$ || (CustomerPortalOrdersListQueryParamProductIDFilter$ = {}));
export function customerPortalOrdersListQueryParamProductIDFilterToJSON(customerPortalOrdersListQueryParamProductIDFilter) {
    return JSON.stringify(CustomerPortalOrdersListQueryParamProductIDFilter$outboundSchema.parse(customerPortalOrdersListQueryParamProductIDFilter));
}
export function customerPortalOrdersListQueryParamProductIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalOrdersListQueryParamProductIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalOrdersListQueryParamProductIDFilter' from JSON`);
}
/** @internal */
export const CustomerPortalOrdersListQueryParamProductBillingTypeFilter$inboundSchema = z.union([
    ProductBillingType$inboundSchema,
    z.array(ProductBillingType$inboundSchema),
]);
/** @internal */
export const CustomerPortalOrdersListQueryParamProductBillingTypeFilter$outboundSchema = z.union([
    ProductBillingType$outboundSchema,
    z.array(ProductBillingType$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalOrdersListQueryParamProductBillingTypeFilter$;
(function (CustomerPortalOrdersListQueryParamProductBillingTypeFilter$) {
    /** @deprecated use `CustomerPortalOrdersListQueryParamProductBillingTypeFilter$inboundSchema` instead. */
    CustomerPortalOrdersListQueryParamProductBillingTypeFilter$.inboundSchema = CustomerPortalOrdersListQueryParamProductBillingTypeFilter$inboundSchema;
    /** @deprecated use `CustomerPortalOrdersListQueryParamProductBillingTypeFilter$outboundSchema` instead. */
    CustomerPortalOrdersListQueryParamProductBillingTypeFilter$.outboundSchema = CustomerPortalOrdersListQueryParamProductBillingTypeFilter$outboundSchema;
})(CustomerPortalOrdersListQueryParamProductBillingTypeFilter$ || (CustomerPortalOrdersListQueryParamProductBillingTypeFilter$ = {}));
export function customerPortalOrdersListQueryParamProductBillingTypeFilterToJSON(customerPortalOrdersListQueryParamProductBillingTypeFilter) {
    return JSON.stringify(CustomerPortalOrdersListQueryParamProductBillingTypeFilter$outboundSchema
        .parse(customerPortalOrdersListQueryParamProductBillingTypeFilter));
}
export function customerPortalOrdersListQueryParamProductBillingTypeFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalOrdersListQueryParamProductBillingTypeFilter$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'CustomerPortalOrdersListQueryParamProductBillingTypeFilter' from JSON`);
}
/** @internal */
export const QueryParamProductPriceTypeFilter$inboundSchema = z.union([
    ProductPriceType$inboundSchema,
    z.array(ProductPriceType$inboundSchema),
]);
/** @internal */
export const QueryParamProductPriceTypeFilter$outboundSchema = z.union([
    ProductPriceType$outboundSchema,
    z.array(ProductPriceType$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var QueryParamProductPriceTypeFilter$;
(function (QueryParamProductPriceTypeFilter$) {
    /** @deprecated use `QueryParamProductPriceTypeFilter$inboundSchema` instead. */
    QueryParamProductPriceTypeFilter$.inboundSchema = QueryParamProductPriceTypeFilter$inboundSchema;
    /** @deprecated use `QueryParamProductPriceTypeFilter$outboundSchema` instead. */
    QueryParamProductPriceTypeFilter$.outboundSchema = QueryParamProductPriceTypeFilter$outboundSchema;
})(QueryParamProductPriceTypeFilter$ || (QueryParamProductPriceTypeFilter$ = {}));
export function queryParamProductPriceTypeFilterToJSON(queryParamProductPriceTypeFilter) {
    return JSON.stringify(QueryParamProductPriceTypeFilter$outboundSchema.parse(queryParamProductPriceTypeFilter));
}
export function queryParamProductPriceTypeFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => QueryParamProductPriceTypeFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamProductPriceTypeFilter' from JSON`);
}
/** @internal */
export const CustomerPortalOrdersListQueryParamSubscriptionIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const CustomerPortalOrdersListQueryParamSubscriptionIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalOrdersListQueryParamSubscriptionIDFilter$;
(function (CustomerPortalOrdersListQueryParamSubscriptionIDFilter$) {
    /** @deprecated use `CustomerPortalOrdersListQueryParamSubscriptionIDFilter$inboundSchema` instead. */
    CustomerPortalOrdersListQueryParamSubscriptionIDFilter$.inboundSchema = CustomerPortalOrdersListQueryParamSubscriptionIDFilter$inboundSchema;
    /** @deprecated use `CustomerPortalOrdersListQueryParamSubscriptionIDFilter$outboundSchema` instead. */
    CustomerPortalOrdersListQueryParamSubscriptionIDFilter$.outboundSchema = CustomerPortalOrdersListQueryParamSubscriptionIDFilter$outboundSchema;
})(CustomerPortalOrdersListQueryParamSubscriptionIDFilter$ || (CustomerPortalOrdersListQueryParamSubscriptionIDFilter$ = {}));
export function customerPortalOrdersListQueryParamSubscriptionIDFilterToJSON(customerPortalOrdersListQueryParamSubscriptionIDFilter) {
    return JSON.stringify(CustomerPortalOrdersListQueryParamSubscriptionIDFilter$outboundSchema.parse(customerPortalOrdersListQueryParamSubscriptionIDFilter));
}
export function customerPortalOrdersListQueryParamSubscriptionIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalOrdersListQueryParamSubscriptionIDFilter$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'CustomerPortalOrdersListQueryParamSubscriptionIDFilter' from JSON`);
}
/** @internal */
export const CustomerPortalOrdersListRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    product_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    product_billing_type: z.nullable(z.union([
        ProductBillingType$inboundSchema,
        z.array(ProductBillingType$inboundSchema),
    ])).optional(),
    product_price_type: z.nullable(z.union([
        ProductPriceType$inboundSchema,
        z.array(ProductPriceType$inboundSchema),
    ])).optional(),
    subscription_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    query: z.nullable(z.string()).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(CustomerOrderSortProperty$inboundSchema))
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "organization_id": "organizationId",
        "product_id": "productId",
        "product_billing_type": "productBillingType",
        "product_price_type": "productPriceType",
        "subscription_id": "subscriptionId",
    });
});
/** @internal */
export const CustomerPortalOrdersListRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    productId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    productBillingType: z.nullable(z.union([
        ProductBillingType$outboundSchema,
        z.array(ProductBillingType$outboundSchema),
    ])).optional(),
    productPriceType: z.nullable(z.union([
        ProductPriceType$outboundSchema,
        z.array(ProductPriceType$outboundSchema),
    ])).optional(),
    subscriptionId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    query: z.nullable(z.string()).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(CustomerOrderSortProperty$outboundSchema))
        .optional(),
}).transform((v) => {
    return remap$(v, {
        organizationId: "organization_id",
        productId: "product_id",
        productBillingType: "product_billing_type",
        productPriceType: "product_price_type",
        subscriptionId: "subscription_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalOrdersListRequest$;
(function (CustomerPortalOrdersListRequest$) {
    /** @deprecated use `CustomerPortalOrdersListRequest$inboundSchema` instead. */
    CustomerPortalOrdersListRequest$.inboundSchema = CustomerPortalOrdersListRequest$inboundSchema;
    /** @deprecated use `CustomerPortalOrdersListRequest$outboundSchema` instead. */
    CustomerPortalOrdersListRequest$.outboundSchema = CustomerPortalOrdersListRequest$outboundSchema;
})(CustomerPortalOrdersListRequest$ || (CustomerPortalOrdersListRequest$ = {}));
export function customerPortalOrdersListRequestToJSON(customerPortalOrdersListRequest) {
    return JSON.stringify(CustomerPortalOrdersListRequest$outboundSchema.parse(customerPortalOrdersListRequest));
}
export function customerPortalOrdersListRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalOrdersListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalOrdersListRequest' from JSON`);
}
/** @internal */
export const CustomerPortalOrdersListResponse$inboundSchema = z.object({
    Result: ListResourceCustomerOrder$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Result": "result",
    });
});
/** @internal */
export const CustomerPortalOrdersListResponse$outboundSchema = z.object({
    result: ListResourceCustomerOrder$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalOrdersListResponse$;
(function (CustomerPortalOrdersListResponse$) {
    /** @deprecated use `CustomerPortalOrdersListResponse$inboundSchema` instead. */
    CustomerPortalOrdersListResponse$.inboundSchema = CustomerPortalOrdersListResponse$inboundSchema;
    /** @deprecated use `CustomerPortalOrdersListResponse$outboundSchema` instead. */
    CustomerPortalOrdersListResponse$.outboundSchema = CustomerPortalOrdersListResponse$outboundSchema;
})(CustomerPortalOrdersListResponse$ || (CustomerPortalOrdersListResponse$ = {}));
export function customerPortalOrdersListResponseToJSON(customerPortalOrdersListResponse) {
    return JSON.stringify(CustomerPortalOrdersListResponse$outboundSchema.parse(customerPortalOrdersListResponse));
}
export function customerPortalOrdersListResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalOrdersListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalOrdersListResponse' from JSON`);
}
//# sourceMappingURL=customerportalorderslist.js.map