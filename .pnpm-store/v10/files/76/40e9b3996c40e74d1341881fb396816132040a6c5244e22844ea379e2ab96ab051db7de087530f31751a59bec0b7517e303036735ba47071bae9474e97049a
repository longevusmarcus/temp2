/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const MetersGetRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const MetersGetRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var MetersGetRequest$;
(function (MetersGetRequest$) {
    /** @deprecated use `MetersGetRequest$inboundSchema` instead. */
    MetersGetRequest$.inboundSchema = MetersGetRequest$inboundSchema;
    /** @deprecated use `MetersGetRequest$outboundSchema` instead. */
    MetersGetRequest$.outboundSchema = MetersGetRequest$outboundSchema;
})(MetersGetRequest$ || (MetersGetRequest$ = {}));
export function metersGetRequestToJSON(metersGetRequest) {
    return JSON.stringify(MetersGetRequest$outboundSchema.parse(metersGetRequest));
}
export function metersGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => MetersGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'MetersGetRequest' from JSON`);
}
//# sourceMappingURL=metersget.js.map