/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const OrganizationFeatureSettings$inboundSchema = z.object({
    issue_funding_enabled: z.boolean().default(false),
}).transform((v) => {
    return remap$(v, {
        "issue_funding_enabled": "issueFundingEnabled",
    });
});
/** @internal */
export const OrganizationFeatureSettings$outboundSchema = z.object({
    issueFundingEnabled: z.boolean().default(false),
}).transform((v) => {
    return remap$(v, {
        issueFundingEnabled: "issue_funding_enabled",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrganizationFeatureSettings$;
(function (OrganizationFeatureSettings$) {
    /** @deprecated use `OrganizationFeatureSettings$inboundSchema` instead. */
    OrganizationFeatureSettings$.inboundSchema = OrganizationFeatureSettings$inboundSchema;
    /** @deprecated use `OrganizationFeatureSettings$outboundSchema` instead. */
    OrganizationFeatureSettings$.outboundSchema = OrganizationFeatureSettings$outboundSchema;
})(OrganizationFeatureSettings$ || (OrganizationFeatureSettings$ = {}));
export function organizationFeatureSettingsToJSON(organizationFeatureSettings) {
    return JSON.stringify(OrganizationFeatureSettings$outboundSchema.parse(organizationFeatureSettings));
}
export function organizationFeatureSettingsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrganizationFeatureSettings$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrganizationFeatureSettings' from JSON`);
}
//# sourceMappingURL=organizationfeaturesettings.js.map