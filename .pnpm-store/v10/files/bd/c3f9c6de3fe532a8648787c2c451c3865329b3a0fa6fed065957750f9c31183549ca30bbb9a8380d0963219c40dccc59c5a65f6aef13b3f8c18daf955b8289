/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { repositoriesGet } from "../funcs/repositoriesGet.js";
import { repositoriesList } from "../funcs/repositoriesList.js";
import { repositoriesUpdate } from "../funcs/repositoriesUpdate.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
import { unwrapResultIterator } from "../types/operations.js";
export class Repositories extends ClientSDK {
    /**
     * List Repositories
     *
     * @remarks
     * List repositories.
     *
     * **Scopes**: `repositories:read` `repositories:write`
     */
    async list(request, options) {
        return unwrapResultIterator(repositoriesList(this, request, options));
    }
    /**
     * Get Repository
     *
     * @remarks
     * Get a repository by ID.
     *
     * **Scopes**: `repositories:read` `repositories:write`
     */
    async get(request, options) {
        return unwrapAsync(repositoriesGet(this, request, options));
    }
    /**
     * Update Repository
     *
     * @remarks
     * Update a repository.
     *
     * **Scopes**: `repositories:write`
     */
    async update(request, options) {
        return unwrapAsync(repositoriesUpdate(this, request, options));
    }
}
//# sourceMappingURL=repositories.js.map