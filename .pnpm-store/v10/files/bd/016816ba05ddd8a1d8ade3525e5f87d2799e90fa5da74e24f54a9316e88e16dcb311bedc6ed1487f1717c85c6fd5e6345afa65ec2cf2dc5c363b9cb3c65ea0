/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomersGetStateExternalRequest$inboundSchema = z.object({
    external_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "external_id": "externalId",
    });
});
/** @internal */
export const CustomersGetStateExternalRequest$outboundSchema = z.object({
    externalId: z.string(),
}).transform((v) => {
    return remap$(v, {
        externalId: "external_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomersGetStateExternalRequest$;
(function (CustomersGetStateExternalRequest$) {
    /** @deprecated use `CustomersGetStateExternalRequest$inboundSchema` instead. */
    CustomersGetStateExternalRequest$.inboundSchema = CustomersGetStateExternalRequest$inboundSchema;
    /** @deprecated use `CustomersGetStateExternalRequest$outboundSchema` instead. */
    CustomersGetStateExternalRequest$.outboundSchema = CustomersGetStateExternalRequest$outboundSchema;
})(CustomersGetStateExternalRequest$ || (CustomersGetStateExternalRequest$ = {}));
export function customersGetStateExternalRequestToJSON(customersGetStateExternalRequest) {
    return JSON.stringify(CustomersGetStateExternalRequest$outboundSchema.parse(customersGetStateExternalRequest));
}
export function customersGetStateExternalRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomersGetStateExternalRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomersGetStateExternalRequest' from JSON`);
}
//# sourceMappingURL=customersgetstateexternal.js.map