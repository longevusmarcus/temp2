/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const OrganizationsGetRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const OrganizationsGetRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrganizationsGetRequest$;
(function (OrganizationsGetRequest$) {
    /** @deprecated use `OrganizationsGetRequest$inboundSchema` instead. */
    OrganizationsGetRequest$.inboundSchema = OrganizationsGetRequest$inboundSchema;
    /** @deprecated use `OrganizationsGetRequest$outboundSchema` instead. */
    OrganizationsGetRequest$.outboundSchema = OrganizationsGetRequest$outboundSchema;
})(OrganizationsGetRequest$ || (OrganizationsGetRequest$ = {}));
export function organizationsGetRequestToJSON(organizationsGetRequest) {
    return JSON.stringify(OrganizationsGetRequest$outboundSchema.parse(organizationsGetRequest));
}
export function organizationsGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrganizationsGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrganizationsGetRequest' from JSON`);
}
//# sourceMappingURL=organizationsget.js.map