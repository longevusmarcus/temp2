/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomersDeleteRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const CustomersDeleteRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomersDeleteRequest$;
(function (CustomersDeleteRequest$) {
    /** @deprecated use `CustomersDeleteRequest$inboundSchema` instead. */
    CustomersDeleteRequest$.inboundSchema = CustomersDeleteRequest$inboundSchema;
    /** @deprecated use `CustomersDeleteRequest$outboundSchema` instead. */
    CustomersDeleteRequest$.outboundSchema = CustomersDeleteRequest$outboundSchema;
})(CustomersDeleteRequest$ || (CustomersDeleteRequest$ = {}));
export function customersDeleteRequestToJSON(customersDeleteRequest) {
    return JSON.stringify(CustomersDeleteRequest$outboundSchema.parse(customersDeleteRequest));
}
export function customersDeleteRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomersDeleteRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomersDeleteRequest' from JSON`);
}
//# sourceMappingURL=customersdelete.js.map