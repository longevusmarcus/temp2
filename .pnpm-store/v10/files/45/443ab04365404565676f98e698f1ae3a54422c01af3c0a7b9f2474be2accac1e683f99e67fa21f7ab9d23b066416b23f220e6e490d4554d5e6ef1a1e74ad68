/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const BenefitDownloadablesProperties$inboundSchema = z.object({
    archived: z.record(z.boolean()),
    files: z.array(z.string()),
});
/** @internal */
export const BenefitDownloadablesProperties$outboundSchema = z.object({
    archived: z.record(z.boolean()),
    files: z.array(z.string()),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitDownloadablesProperties$;
(function (BenefitDownloadablesProperties$) {
    /** @deprecated use `BenefitDownloadablesProperties$inboundSchema` instead. */
    BenefitDownloadablesProperties$.inboundSchema = BenefitDownloadablesProperties$inboundSchema;
    /** @deprecated use `BenefitDownloadablesProperties$outboundSchema` instead. */
    BenefitDownloadablesProperties$.outboundSchema = BenefitDownloadablesProperties$outboundSchema;
})(BenefitDownloadablesProperties$ || (BenefitDownloadablesProperties$ = {}));
export function benefitDownloadablesPropertiesToJSON(benefitDownloadablesProperties) {
    return JSON.stringify(BenefitDownloadablesProperties$outboundSchema.parse(benefitDownloadablesProperties));
}
export function benefitDownloadablesPropertiesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitDownloadablesProperties$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitDownloadablesProperties' from JSON`);
}
//# sourceMappingURL=benefitdownloadablesproperties.js.map