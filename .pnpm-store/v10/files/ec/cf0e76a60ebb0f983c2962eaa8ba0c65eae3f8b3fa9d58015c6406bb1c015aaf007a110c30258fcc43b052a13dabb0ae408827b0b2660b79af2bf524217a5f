/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CustomFieldUpdate$inboundSchema, CustomFieldUpdate$outboundSchema, } from "../components/customfieldupdate.js";
/** @internal */
export const CustomFieldsUpdateRequest$inboundSchema = z.object({
    id: z.string(),
    CustomFieldUpdate: CustomFieldUpdate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "CustomFieldUpdate": "customFieldUpdate",
    });
});
/** @internal */
export const CustomFieldsUpdateRequest$outboundSchema = z.object({
    id: z.string(),
    customFieldUpdate: CustomFieldUpdate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        customFieldUpdate: "CustomFieldUpdate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldsUpdateRequest$;
(function (CustomFieldsUpdateRequest$) {
    /** @deprecated use `CustomFieldsUpdateRequest$inboundSchema` instead. */
    CustomFieldsUpdateRequest$.inboundSchema = CustomFieldsUpdateRequest$inboundSchema;
    /** @deprecated use `CustomFieldsUpdateRequest$outboundSchema` instead. */
    CustomFieldsUpdateRequest$.outboundSchema = CustomFieldsUpdateRequest$outboundSchema;
})(CustomFieldsUpdateRequest$ || (CustomFieldsUpdateRequest$ = {}));
export function customFieldsUpdateRequestToJSON(customFieldsUpdateRequest) {
    return JSON.stringify(CustomFieldsUpdateRequest$outboundSchema.parse(customFieldsUpdateRequest));
}
export function customFieldsUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldsUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldsUpdateRequest' from JSON`);
}
//# sourceMappingURL=customfieldsupdate.js.map