/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ExternalOrganization$inboundSchema, ExternalOrganization$outboundSchema, } from "./externalorganization.js";
import { Organization$inboundSchema, Organization$outboundSchema, } from "./organization.js";
import { Platforms$inboundSchema, Platforms$outboundSchema, } from "./platforms.js";
import { RepositoryProfileSettings$inboundSchema, RepositoryProfileSettings$outboundSchema, } from "./repositoryprofilesettings.js";
/** @internal */
export const Repository$inboundSchema = z.object({
    id: z.string(),
    platform: Platforms$inboundSchema,
    is_private: z.boolean(),
    name: z.string(),
    description: z.nullable(z.string()),
    stars: z.nullable(z.number().int()),
    license: z.nullable(z.string()),
    homepage: z.nullable(z.string()),
    profile_settings: z.nullable(RepositoryProfileSettings$inboundSchema),
    organization: ExternalOrganization$inboundSchema,
    internal_organization: z.nullable(Organization$inboundSchema),
}).transform((v) => {
    return remap$(v, {
        "is_private": "isPrivate",
        "profile_settings": "profileSettings",
        "internal_organization": "internalOrganization",
    });
});
/** @internal */
export const Repository$outboundSchema = z.object({
    id: z.string(),
    platform: Platforms$outboundSchema,
    isPrivate: z.boolean(),
    name: z.string(),
    description: z.nullable(z.string()),
    stars: z.nullable(z.number().int()),
    license: z.nullable(z.string()),
    homepage: z.nullable(z.string()),
    profileSettings: z.nullable(RepositoryProfileSettings$outboundSchema),
    organization: ExternalOrganization$outboundSchema,
    internalOrganization: z.nullable(Organization$outboundSchema),
}).transform((v) => {
    return remap$(v, {
        isPrivate: "is_private",
        profileSettings: "profile_settings",
        internalOrganization: "internal_organization",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Repository$;
(function (Repository$) {
    /** @deprecated use `Repository$inboundSchema` instead. */
    Repository$.inboundSchema = Repository$inboundSchema;
    /** @deprecated use `Repository$outboundSchema` instead. */
    Repository$.outboundSchema = Repository$outboundSchema;
})(Repository$ || (Repository$ = {}));
export function repositoryToJSON(repository) {
    return JSON.stringify(Repository$outboundSchema.parse(repository));
}
export function repositoryFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Repository$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Repository' from JSON`);
}
//# sourceMappingURL=repository.js.map