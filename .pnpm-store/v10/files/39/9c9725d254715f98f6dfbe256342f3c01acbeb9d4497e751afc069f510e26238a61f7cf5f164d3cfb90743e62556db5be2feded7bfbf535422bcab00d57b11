/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { AttachedCustomFieldCreate$inboundSchema, AttachedCustomFieldCreate$outboundSchema, } from "./attachedcustomfieldcreate.js";
import { ProductPriceCustomCreate$inboundSchema, ProductPriceCustomCreate$outboundSchema, } from "./productpricecustomcreate.js";
import { ProductPriceFixedCreate$inboundSchema, ProductPriceFixedCreate$outboundSchema, } from "./productpricefixedcreate.js";
import { ProductPriceFreeCreate$inboundSchema, ProductPriceFreeCreate$outboundSchema, } from "./productpricefreecreate.js";
import { SubscriptionRecurringInterval$inboundSchema, SubscriptionRecurringInterval$outboundSchema, } from "./subscriptionrecurringinterval.js";
/** @internal */
export const ProductCreateMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
export const ProductCreateMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ProductCreateMetadata$;
(function (ProductCreateMetadata$) {
    /** @deprecated use `ProductCreateMetadata$inboundSchema` instead. */
    ProductCreateMetadata$.inboundSchema = ProductCreateMetadata$inboundSchema;
    /** @deprecated use `ProductCreateMetadata$outboundSchema` instead. */
    ProductCreateMetadata$.outboundSchema = ProductCreateMetadata$outboundSchema;
})(ProductCreateMetadata$ || (ProductCreateMetadata$ = {}));
export function productCreateMetadataToJSON(productCreateMetadata) {
    return JSON.stringify(ProductCreateMetadata$outboundSchema.parse(productCreateMetadata));
}
export function productCreateMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ProductCreateMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductCreateMetadata' from JSON`);
}
/** @internal */
export const ProductCreatePrices$inboundSchema = z.union([
    ProductPriceFreeCreate$inboundSchema,
    ProductPriceFixedCreate$inboundSchema,
    ProductPriceCustomCreate$inboundSchema,
]);
/** @internal */
export const ProductCreatePrices$outboundSchema = z.union([
    ProductPriceFreeCreate$outboundSchema,
    ProductPriceFixedCreate$outboundSchema,
    ProductPriceCustomCreate$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ProductCreatePrices$;
(function (ProductCreatePrices$) {
    /** @deprecated use `ProductCreatePrices$inboundSchema` instead. */
    ProductCreatePrices$.inboundSchema = ProductCreatePrices$inboundSchema;
    /** @deprecated use `ProductCreatePrices$outboundSchema` instead. */
    ProductCreatePrices$.outboundSchema = ProductCreatePrices$outboundSchema;
})(ProductCreatePrices$ || (ProductCreatePrices$ = {}));
export function productCreatePricesToJSON(productCreatePrices) {
    return JSON.stringify(ProductCreatePrices$outboundSchema.parse(productCreatePrices));
}
export function productCreatePricesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ProductCreatePrices$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductCreatePrices' from JSON`);
}
/** @internal */
export const ProductCreate$inboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    name: z.string(),
    description: z.nullable(z.string()).optional(),
    recurring_interval: z.nullable(SubscriptionRecurringInterval$inboundSchema),
    prices: z.array(z.union([
        ProductPriceFreeCreate$inboundSchema,
        ProductPriceFixedCreate$inboundSchema,
        ProductPriceCustomCreate$inboundSchema,
    ])),
    medias: z.nullable(z.array(z.string())).optional(),
    attached_custom_fields: z.array(AttachedCustomFieldCreate$inboundSchema)
        .optional(),
    organization_id: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        "recurring_interval": "recurringInterval",
        "attached_custom_fields": "attachedCustomFields",
        "organization_id": "organizationId",
    });
});
/** @internal */
export const ProductCreate$outboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    name: z.string(),
    description: z.nullable(z.string()).optional(),
    recurringInterval: z.nullable(SubscriptionRecurringInterval$outboundSchema),
    prices: z.array(z.union([
        ProductPriceFreeCreate$outboundSchema,
        ProductPriceFixedCreate$outboundSchema,
        ProductPriceCustomCreate$outboundSchema,
    ])),
    medias: z.nullable(z.array(z.string())).optional(),
    attachedCustomFields: z.array(AttachedCustomFieldCreate$outboundSchema)
        .optional(),
    organizationId: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        recurringInterval: "recurring_interval",
        attachedCustomFields: "attached_custom_fields",
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ProductCreate$;
(function (ProductCreate$) {
    /** @deprecated use `ProductCreate$inboundSchema` instead. */
    ProductCreate$.inboundSchema = ProductCreate$inboundSchema;
    /** @deprecated use `ProductCreate$outboundSchema` instead. */
    ProductCreate$.outboundSchema = ProductCreate$outboundSchema;
})(ProductCreate$ || (ProductCreate$ = {}));
export function productCreateToJSON(productCreate) {
    return JSON.stringify(ProductCreate$outboundSchema.parse(productCreate));
}
export function productCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ProductCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductCreate' from JSON`);
}
//# sourceMappingURL=productcreate.js.map