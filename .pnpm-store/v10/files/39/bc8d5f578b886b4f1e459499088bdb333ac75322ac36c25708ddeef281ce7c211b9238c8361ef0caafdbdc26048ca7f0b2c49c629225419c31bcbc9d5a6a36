"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventCreateExternalCustomer$ = exports.EventCreateExternalCustomer$outboundSchema = exports.EventCreateExternalCustomer$inboundSchema = exports.EventCreateExternalCustomerMetadata$ = exports.EventCreateExternalCustomerMetadata$outboundSchema = exports.EventCreateExternalCustomerMetadata$inboundSchema = void 0;
exports.eventCreateExternalCustomerMetadataToJSON = eventCreateExternalCustomerMetadataToJSON;
exports.eventCreateExternalCustomerMetadataFromJSON = eventCreateExternalCustomerMetadataFromJSON;
exports.eventCreateExternalCustomerToJSON = eventCreateExternalCustomerToJSON;
exports.eventCreateExternalCustomerFromJSON = eventCreateExternalCustomerFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/** @internal */
exports.EventCreateExternalCustomerMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
exports.EventCreateExternalCustomerMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var EventCreateExternalCustomerMetadata$;
(function (EventCreateExternalCustomerMetadata$) {
    /** @deprecated use `EventCreateExternalCustomerMetadata$inboundSchema` instead. */
    EventCreateExternalCustomerMetadata$.inboundSchema = exports.EventCreateExternalCustomerMetadata$inboundSchema;
    /** @deprecated use `EventCreateExternalCustomerMetadata$outboundSchema` instead. */
    EventCreateExternalCustomerMetadata$.outboundSchema = exports.EventCreateExternalCustomerMetadata$outboundSchema;
})(EventCreateExternalCustomerMetadata$ || (exports.EventCreateExternalCustomerMetadata$ = EventCreateExternalCustomerMetadata$ = {}));
function eventCreateExternalCustomerMetadataToJSON(eventCreateExternalCustomerMetadata) {
    return JSON.stringify(exports.EventCreateExternalCustomerMetadata$outboundSchema.parse(eventCreateExternalCustomerMetadata));
}
function eventCreateExternalCustomerMetadataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.EventCreateExternalCustomerMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EventCreateExternalCustomerMetadata' from JSON`);
}
/** @internal */
exports.EventCreateExternalCustomer$inboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v))
        .optional(),
    name: z.string(),
    organization_id: z.nullable(z.string()).optional(),
    external_customer_id: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
        "external_customer_id": "externalCustomerId",
    });
});
/** @internal */
exports.EventCreateExternalCustomer$outboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    timestamp: z.date().transform(v => v.toISOString()).optional(),
    name: z.string(),
    organizationId: z.nullable(z.string()).optional(),
    externalCustomerId: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
        externalCustomerId: "external_customer_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var EventCreateExternalCustomer$;
(function (EventCreateExternalCustomer$) {
    /** @deprecated use `EventCreateExternalCustomer$inboundSchema` instead. */
    EventCreateExternalCustomer$.inboundSchema = exports.EventCreateExternalCustomer$inboundSchema;
    /** @deprecated use `EventCreateExternalCustomer$outboundSchema` instead. */
    EventCreateExternalCustomer$.outboundSchema = exports.EventCreateExternalCustomer$outboundSchema;
})(EventCreateExternalCustomer$ || (exports.EventCreateExternalCustomer$ = EventCreateExternalCustomer$ = {}));
function eventCreateExternalCustomerToJSON(eventCreateExternalCustomer) {
    return JSON.stringify(exports.EventCreateExternalCustomer$outboundSchema.parse(eventCreateExternalCustomer));
}
function eventCreateExternalCustomerFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.EventCreateExternalCustomer$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EventCreateExternalCustomer' from JSON`);
}
//# sourceMappingURL=eventcreateexternalcustomer.js.map