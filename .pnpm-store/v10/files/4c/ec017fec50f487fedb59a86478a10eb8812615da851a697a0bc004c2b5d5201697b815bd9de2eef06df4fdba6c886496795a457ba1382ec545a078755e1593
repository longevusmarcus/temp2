/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomersGetRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const CustomersGetRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomersGetRequest$;
(function (CustomersGetRequest$) {
    /** @deprecated use `CustomersGetRequest$inboundSchema` instead. */
    CustomersGetRequest$.inboundSchema = CustomersGetRequest$inboundSchema;
    /** @deprecated use `CustomersGetRequest$outboundSchema` instead. */
    CustomersGetRequest$.outboundSchema = CustomersGetRequest$outboundSchema;
})(CustomersGetRequest$ || (CustomersGetRequest$ = {}));
export function customersGetRequestToJSON(customersGetRequest) {
    return JSON.stringify(CustomersGetRequest$outboundSchema.parse(customersGetRequest));
}
export function customersGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomersGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomersGetRequest' from JSON`);
}
//# sourceMappingURL=customersget.js.map