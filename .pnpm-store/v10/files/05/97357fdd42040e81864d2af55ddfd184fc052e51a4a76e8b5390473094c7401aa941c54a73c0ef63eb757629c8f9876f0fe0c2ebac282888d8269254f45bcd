/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const MetricsIntervalLimit$inboundSchema = z.object({
    max_days: z.number().int(),
}).transform((v) => {
    return remap$(v, {
        "max_days": "maxDays",
    });
});
/** @internal */
export const MetricsIntervalLimit$outboundSchema = z.object({
    maxDays: z.number().int(),
}).transform((v) => {
    return remap$(v, {
        maxDays: "max_days",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var MetricsIntervalLimit$;
(function (MetricsIntervalLimit$) {
    /** @deprecated use `MetricsIntervalLimit$inboundSchema` instead. */
    MetricsIntervalLimit$.inboundSchema = MetricsIntervalLimit$inboundSchema;
    /** @deprecated use `MetricsIntervalLimit$outboundSchema` instead. */
    MetricsIntervalLimit$.outboundSchema = MetricsIntervalLimit$outboundSchema;
})(MetricsIntervalLimit$ || (MetricsIntervalLimit$ = {}));
export function metricsIntervalLimitToJSON(metricsIntervalLimit) {
    return JSON.stringify(MetricsIntervalLimit$outboundSchema.parse(metricsIntervalLimit));
}
export function metricsIntervalLimitFromJSON(jsonString) {
    return safeParse(jsonString, (x) => MetricsIntervalLimit$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'MetricsIntervalLimit' from JSON`);
}
//# sourceMappingURL=metricsintervallimit.js.map