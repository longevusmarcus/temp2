/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomerOrderInvoice$inboundSchema = z.object({
    url: z.string(),
});
/** @internal */
export const CustomerOrderInvoice$outboundSchema = z.object({
    url: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerOrderInvoice$;
(function (CustomerOrderInvoice$) {
    /** @deprecated use `CustomerOrderInvoice$inboundSchema` instead. */
    CustomerOrderInvoice$.inboundSchema = CustomerOrderInvoice$inboundSchema;
    /** @deprecated use `CustomerOrderInvoice$outboundSchema` instead. */
    CustomerOrderInvoice$.outboundSchema = CustomerOrderInvoice$outboundSchema;
})(CustomerOrderInvoice$ || (CustomerOrderInvoice$ = {}));
export function customerOrderInvoiceToJSON(customerOrderInvoice) {
    return JSON.stringify(CustomerOrderInvoice$outboundSchema.parse(customerOrderInvoice));
}
export function customerOrderInvoiceFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerOrderInvoice$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerOrderInvoice' from JSON`);
}
//# sourceMappingURL=customerorderinvoice.js.map