/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { DiscountUpdate$inboundSchema, DiscountUpdate$outboundSchema, } from "../components/discountupdate.js";
/** @internal */
export const DiscountsUpdateRequest$inboundSchema = z.object({
    id: z.string(),
    DiscountUpdate: DiscountUpdate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "DiscountUpdate": "discountUpdate",
    });
});
/** @internal */
export const DiscountsUpdateRequest$outboundSchema = z.object({
    id: z.string(),
    discountUpdate: DiscountUpdate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        discountUpdate: "DiscountUpdate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DiscountsUpdateRequest$;
(function (DiscountsUpdateRequest$) {
    /** @deprecated use `DiscountsUpdateRequest$inboundSchema` instead. */
    DiscountsUpdateRequest$.inboundSchema = DiscountsUpdateRequest$inboundSchema;
    /** @deprecated use `DiscountsUpdateRequest$outboundSchema` instead. */
    DiscountsUpdateRequest$.outboundSchema = DiscountsUpdateRequest$outboundSchema;
})(DiscountsUpdateRequest$ || (DiscountsUpdateRequest$ = {}));
export function discountsUpdateRequestToJSON(discountsUpdateRequest) {
    return JSON.stringify(DiscountsUpdateRequest$outboundSchema.parse(discountsUpdateRequest));
}
export function discountsUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DiscountsUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DiscountsUpdateRequest' from JSON`);
}
//# sourceMappingURL=discountsupdate.js.map