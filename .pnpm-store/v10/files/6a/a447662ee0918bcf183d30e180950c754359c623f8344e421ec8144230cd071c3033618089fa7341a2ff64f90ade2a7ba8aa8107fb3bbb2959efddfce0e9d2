/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const FilePatch$inboundSchema = z.object({
    name: z.nullable(z.string()).optional(),
    version: z.nullable(z.string()).optional(),
});
/** @internal */
export const FilePatch$outboundSchema = z.object({
    name: z.nullable(z.string()).optional(),
    version: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilePatch$;
(function (FilePatch$) {
    /** @deprecated use `FilePatch$inboundSchema` instead. */
    FilePatch$.inboundSchema = FilePatch$inboundSchema;
    /** @deprecated use `FilePatch$outboundSchema` instead. */
    FilePatch$.outboundSchema = FilePatch$outboundSchema;
})(FilePatch$ || (FilePatch$ = {}));
export function filePatchToJSON(filePatch) {
    return JSON.stringify(FilePatch$outboundSchema.parse(filePatch));
}
export function filePatchFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilePatch$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilePatch' from JSON`);
}
//# sourceMappingURL=filepatch.js.map