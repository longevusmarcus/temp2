/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
export const Timeframe = {
    Year: "year",
    Month: "month",
    Day: "day",
};
/** @internal */
export const Timeframe$inboundSchema = z
    .nativeEnum(Timeframe);
/** @internal */
export const Timeframe$outboundSchema = Timeframe$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Timeframe$;
(function (Timeframe$) {
    /** @deprecated use `Timeframe$inboundSchema` instead. */
    Timeframe$.inboundSchema = Timeframe$inboundSchema;
    /** @deprecated use `Timeframe$outboundSchema` instead. */
    Timeframe$.outboundSchema = Timeframe$outboundSchema;
})(Timeframe$ || (Timeframe$ = {}));
/** @internal */
export const BenefitLicenseKeyExpirationProperties$inboundSchema = z.object({
    ttl: z.number().int(),
    timeframe: Timeframe$inboundSchema,
});
/** @internal */
export const BenefitLicenseKeyExpirationProperties$outboundSchema = z.object({
    ttl: z.number().int(),
    timeframe: Timeframe$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitLicenseKeyExpirationProperties$;
(function (BenefitLicenseKeyExpirationProperties$) {
    /** @deprecated use `BenefitLicenseKeyExpirationProperties$inboundSchema` instead. */
    BenefitLicenseKeyExpirationProperties$.inboundSchema = BenefitLicenseKeyExpirationProperties$inboundSchema;
    /** @deprecated use `BenefitLicenseKeyExpirationProperties$outboundSchema` instead. */
    BenefitLicenseKeyExpirationProperties$.outboundSchema = BenefitLicenseKeyExpirationProperties$outboundSchema;
})(BenefitLicenseKeyExpirationProperties$ || (BenefitLicenseKeyExpirationProperties$ = {}));
export function benefitLicenseKeyExpirationPropertiesToJSON(benefitLicenseKeyExpirationProperties) {
    return JSON.stringify(BenefitLicenseKeyExpirationProperties$outboundSchema.parse(benefitLicenseKeyExpirationProperties));
}
export function benefitLicenseKeyExpirationPropertiesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitLicenseKeyExpirationProperties$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitLicenseKeyExpirationProperties' from JSON`);
}
//# sourceMappingURL=benefitlicensekeyexpirationproperties.js.map