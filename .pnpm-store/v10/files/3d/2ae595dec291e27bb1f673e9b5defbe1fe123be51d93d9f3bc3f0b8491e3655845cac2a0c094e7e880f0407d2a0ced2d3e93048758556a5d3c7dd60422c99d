/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Address$inboundSchema, Address$outboundSchema, } from "./address.js";
/** @internal */
export const CustomerPortalCustomerUpdate$inboundSchema = z.object({
    email: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    billing_address: z.nullable(Address$inboundSchema).optional(),
    tax_id: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        "billing_address": "billingAddress",
        "tax_id": "taxId",
    });
});
/** @internal */
export const CustomerPortalCustomerUpdate$outboundSchema = z.object({
    email: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    billingAddress: z.nullable(Address$outboundSchema).optional(),
    taxId: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        billingAddress: "billing_address",
        taxId: "tax_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalCustomerUpdate$;
(function (CustomerPortalCustomerUpdate$) {
    /** @deprecated use `CustomerPortalCustomerUpdate$inboundSchema` instead. */
    CustomerPortalCustomerUpdate$.inboundSchema = CustomerPortalCustomerUpdate$inboundSchema;
    /** @deprecated use `CustomerPortalCustomerUpdate$outboundSchema` instead. */
    CustomerPortalCustomerUpdate$.outboundSchema = CustomerPortalCustomerUpdate$outboundSchema;
})(CustomerPortalCustomerUpdate$ || (CustomerPortalCustomerUpdate$ = {}));
export function customerPortalCustomerUpdateToJSON(customerPortalCustomerUpdate) {
    return JSON.stringify(CustomerPortalCustomerUpdate$outboundSchema.parse(customerPortalCustomerUpdate));
}
export function customerPortalCustomerUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalCustomerUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalCustomerUpdate' from JSON`);
}
//# sourceMappingURL=customerportalcustomerupdate.js.map