/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CheckoutUpdate$inboundSchema, CheckoutUpdate$outboundSchema, } from "../components/checkoutupdate.js";
/** @internal */
export const CheckoutsUpdateRequest$inboundSchema = z.object({
    id: z.string(),
    CheckoutUpdate: CheckoutUpdate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "CheckoutUpdate": "checkoutUpdate",
    });
});
/** @internal */
export const CheckoutsUpdateRequest$outboundSchema = z.object({
    id: z.string(),
    checkoutUpdate: CheckoutUpdate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        checkoutUpdate: "CheckoutUpdate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CheckoutsUpdateRequest$;
(function (CheckoutsUpdateRequest$) {
    /** @deprecated use `CheckoutsUpdateRequest$inboundSchema` instead. */
    CheckoutsUpdateRequest$.inboundSchema = CheckoutsUpdateRequest$inboundSchema;
    /** @deprecated use `CheckoutsUpdateRequest$outboundSchema` instead. */
    CheckoutsUpdateRequest$.outboundSchema = CheckoutsUpdateRequest$outboundSchema;
})(CheckoutsUpdateRequest$ || (CheckoutsUpdateRequest$ = {}));
export function checkoutsUpdateRequestToJSON(checkoutsUpdateRequest) {
    return JSON.stringify(CheckoutsUpdateRequest$outboundSchema.parse(checkoutsUpdateRequest));
}
export function checkoutsUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CheckoutsUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutsUpdateRequest' from JSON`);
}
//# sourceMappingURL=checkoutsupdate.js.map