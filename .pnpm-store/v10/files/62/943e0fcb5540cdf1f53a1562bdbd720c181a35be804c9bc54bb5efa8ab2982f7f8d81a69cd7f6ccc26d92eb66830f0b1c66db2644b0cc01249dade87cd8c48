/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ProductUpdate$inboundSchema, ProductUpdate$outboundSchema, } from "../components/productupdate.js";
/** @internal */
export const ProductsUpdateRequest$inboundSchema = z.object({
    id: z.string(),
    ProductUpdate: ProductUpdate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "ProductUpdate": "productUpdate",
    });
});
/** @internal */
export const ProductsUpdateRequest$outboundSchema = z.object({
    id: z.string(),
    productUpdate: ProductUpdate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        productUpdate: "ProductUpdate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ProductsUpdateRequest$;
(function (ProductsUpdateRequest$) {
    /** @deprecated use `ProductsUpdateRequest$inboundSchema` instead. */
    ProductsUpdateRequest$.inboundSchema = ProductsUpdateRequest$inboundSchema;
    /** @deprecated use `ProductsUpdateRequest$outboundSchema` instead. */
    ProductsUpdateRequest$.outboundSchema = ProductsUpdateRequest$outboundSchema;
})(ProductsUpdateRequest$ || (ProductsUpdateRequest$ = {}));
export function productsUpdateRequestToJSON(productsUpdateRequest) {
    return JSON.stringify(ProductsUpdateRequest$outboundSchema.parse(productsUpdateRequest));
}
export function productsUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ProductsUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductsUpdateRequest' from JSON`);
}
//# sourceMappingURL=productsupdate.js.map