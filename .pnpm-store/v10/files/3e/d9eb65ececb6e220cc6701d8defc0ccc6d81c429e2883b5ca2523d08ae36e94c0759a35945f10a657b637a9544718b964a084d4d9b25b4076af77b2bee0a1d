/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const LicenseKeysGetActivationRequest$inboundSchema = z.object({
    id: z.string(),
    activation_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "activation_id": "activationId",
    });
});
/** @internal */
export const LicenseKeysGetActivationRequest$outboundSchema = z.object({
    id: z.string(),
    activationId: z.string(),
}).transform((v) => {
    return remap$(v, {
        activationId: "activation_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var LicenseKeysGetActivationRequest$;
(function (LicenseKeysGetActivationRequest$) {
    /** @deprecated use `LicenseKeysGetActivationRequest$inboundSchema` instead. */
    LicenseKeysGetActivationRequest$.inboundSchema = LicenseKeysGetActivationRequest$inboundSchema;
    /** @deprecated use `LicenseKeysGetActivationRequest$outboundSchema` instead. */
    LicenseKeysGetActivationRequest$.outboundSchema = LicenseKeysGetActivationRequest$outboundSchema;
})(LicenseKeysGetActivationRequest$ || (LicenseKeysGetActivationRequest$ = {}));
export function licenseKeysGetActivationRequestToJSON(licenseKeysGetActivationRequest) {
    return JSON.stringify(LicenseKeysGetActivationRequest$outboundSchema.parse(licenseKeysGetActivationRequest));
}
export function licenseKeysGetActivationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => LicenseKeysGetActivationRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'LicenseKeysGetActivationRequest' from JSON`);
}
//# sourceMappingURL=licensekeysgetactivation.js.map