import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { SubscriptionRecurringInterval } from "./subscriptionrecurringinterval.js";
/**
 * A free recurring price for a product, i.e. a subscription.
 *
 * @remarks
 *
 * **Deprecated**: The recurring interval should be set on the product itself.
 */
export type LegacyRecurringProductPriceFree = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the price.
     */
    id: string;
    amountType?: "free" | undefined;
    /**
     * Whether the price is archived and no longer available.
     */
    isArchived: boolean;
    /**
     * The ID of the product owning the price.
     */
    productId: string;
    /**
     * The type of the price.
     */
    type?: "recurring" | undefined;
    recurringInterval: SubscriptionRecurringInterval;
    legacy?: true | undefined;
};
/** @internal */
export declare const LegacyRecurringProductPriceFree$inboundSchema: z.ZodType<LegacyRecurringProductPriceFree, z.ZodTypeDef, unknown>;
/** @internal */
export type LegacyRecurringProductPriceFree$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    amount_type: "free";
    is_archived: boolean;
    product_id: string;
    type: "recurring";
    recurring_interval: string;
    legacy: true;
};
/** @internal */
export declare const LegacyRecurringProductPriceFree$outboundSchema: z.ZodType<LegacyRecurringProductPriceFree$Outbound, z.ZodTypeDef, LegacyRecurringProductPriceFree>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace LegacyRecurringProductPriceFree$ {
    /** @deprecated use `LegacyRecurringProductPriceFree$inboundSchema` instead. */
    const inboundSchema: z.ZodType<LegacyRecurringProductPriceFree, z.ZodTypeDef, unknown>;
    /** @deprecated use `LegacyRecurringProductPriceFree$outboundSchema` instead. */
    const outboundSchema: z.ZodType<LegacyRecurringProductPriceFree$Outbound, z.ZodTypeDef, LegacyRecurringProductPriceFree>;
    /** @deprecated use `LegacyRecurringProductPriceFree$Outbound` instead. */
    type Outbound = LegacyRecurringProductPriceFree$Outbound;
}
export declare function legacyRecurringProductPriceFreeToJSON(legacyRecurringProductPriceFree: LegacyRecurringProductPriceFree): string;
export declare function legacyRecurringProductPriceFreeFromJSON(jsonString: string): SafeParseResult<LegacyRecurringProductPriceFree, SDKValidationError>;
//# sourceMappingURL=legacyrecurringproductpricefree.d.ts.map