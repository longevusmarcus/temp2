/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { CustomFieldSelectProperties$inboundSchema, CustomFieldSelectProperties$outboundSchema, } from "./customfieldselectproperties.js";
/** @internal */
export const CustomFieldUpdateSelectMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
export const CustomFieldUpdateSelectMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldUpdateSelectMetadata$;
(function (CustomFieldUpdateSelectMetadata$) {
    /** @deprecated use `CustomFieldUpdateSelectMetadata$inboundSchema` instead. */
    CustomFieldUpdateSelectMetadata$.inboundSchema = CustomFieldUpdateSelectMetadata$inboundSchema;
    /** @deprecated use `CustomFieldUpdateSelectMetadata$outboundSchema` instead. */
    CustomFieldUpdateSelectMetadata$.outboundSchema = CustomFieldUpdateSelectMetadata$outboundSchema;
})(CustomFieldUpdateSelectMetadata$ || (CustomFieldUpdateSelectMetadata$ = {}));
export function customFieldUpdateSelectMetadataToJSON(customFieldUpdateSelectMetadata) {
    return JSON.stringify(CustomFieldUpdateSelectMetadata$outboundSchema.parse(customFieldUpdateSelectMetadata));
}
export function customFieldUpdateSelectMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldUpdateSelectMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldUpdateSelectMetadata' from JSON`);
}
/** @internal */
export const CustomFieldUpdateSelect$inboundSchema = z.object({
    metadata: z.nullable(z.record(z.union([z.string(), z.number().int(), z.boolean()]))).optional(),
    name: z.nullable(z.string()).optional(),
    slug: z.nullable(z.string()).optional(),
    type: z.literal("select").optional(),
    properties: z.nullable(CustomFieldSelectProperties$inboundSchema).optional(),
});
/** @internal */
export const CustomFieldUpdateSelect$outboundSchema = z.object({
    metadata: z.nullable(z.record(z.union([z.string(), z.number().int(), z.boolean()]))).optional(),
    name: z.nullable(z.string()).optional(),
    slug: z.nullable(z.string()).optional(),
    type: z.literal("select").default("select"),
    properties: z.nullable(CustomFieldSelectProperties$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldUpdateSelect$;
(function (CustomFieldUpdateSelect$) {
    /** @deprecated use `CustomFieldUpdateSelect$inboundSchema` instead. */
    CustomFieldUpdateSelect$.inboundSchema = CustomFieldUpdateSelect$inboundSchema;
    /** @deprecated use `CustomFieldUpdateSelect$outboundSchema` instead. */
    CustomFieldUpdateSelect$.outboundSchema = CustomFieldUpdateSelect$outboundSchema;
})(CustomFieldUpdateSelect$ || (CustomFieldUpdateSelect$ = {}));
export function customFieldUpdateSelectToJSON(customFieldUpdateSelect) {
    return JSON.stringify(CustomFieldUpdateSelect$outboundSchema.parse(customFieldUpdateSelect));
}
export function customFieldUpdateSelectFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldUpdateSelect$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldUpdateSelect' from JSON`);
}
//# sourceMappingURL=customfieldupdateselect.js.map