/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { LicenseKeyRead$inboundSchema, LicenseKeyRead$outboundSchema, } from "./licensekeyread.js";
import { Pagination$inboundSchema, Pagination$outboundSchema, } from "./pagination.js";
/** @internal */
export const ListResourceLicenseKeyRead$inboundSchema = z.object({
    items: z.array(LicenseKeyRead$inboundSchema),
    pagination: Pagination$inboundSchema,
});
/** @internal */
export const ListResourceLicenseKeyRead$outboundSchema = z.object({
    items: z.array(LicenseKeyRead$outboundSchema),
    pagination: Pagination$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListResourceLicenseKeyRead$;
(function (ListResourceLicenseKeyRead$) {
    /** @deprecated use `ListResourceLicenseKeyRead$inboundSchema` instead. */
    ListResourceLicenseKeyRead$.inboundSchema = ListResourceLicenseKeyRead$inboundSchema;
    /** @deprecated use `ListResourceLicenseKeyRead$outboundSchema` instead. */
    ListResourceLicenseKeyRead$.outboundSchema = ListResourceLicenseKeyRead$outboundSchema;
})(ListResourceLicenseKeyRead$ || (ListResourceLicenseKeyRead$ = {}));
export function listResourceLicenseKeyReadToJSON(listResourceLicenseKeyRead) {
    return JSON.stringify(ListResourceLicenseKeyRead$outboundSchema.parse(listResourceLicenseKeyRead));
}
export function listResourceLicenseKeyReadFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListResourceLicenseKeyRead$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListResourceLicenseKeyRead' from JSON`);
}
//# sourceMappingURL=listresourcelicensekeyread.js.map