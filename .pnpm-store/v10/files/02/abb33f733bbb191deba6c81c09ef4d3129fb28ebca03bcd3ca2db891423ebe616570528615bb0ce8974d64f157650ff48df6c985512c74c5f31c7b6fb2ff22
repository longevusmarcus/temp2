/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ExternalOrganizationSortProperty$inboundSchema, ExternalOrganizationSortProperty$outboundSchema, } from "../components/externalorganizationsortproperty.js";
import { ListResourceExternalOrganization$inboundSchema, ListResourceExternalOrganization$outboundSchema, } from "../components/listresourceexternalorganization.js";
import { Platforms$inboundSchema, Platforms$outboundSchema, } from "../components/platforms.js";
/** @internal */
export const PlatformFilter$inboundSchema = z.union([Platforms$inboundSchema, z.array(Platforms$inboundSchema)]);
/** @internal */
export const PlatformFilter$outboundSchema = z.union([Platforms$outboundSchema, z.array(Platforms$outboundSchema)]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PlatformFilter$;
(function (PlatformFilter$) {
    /** @deprecated use `PlatformFilter$inboundSchema` instead. */
    PlatformFilter$.inboundSchema = PlatformFilter$inboundSchema;
    /** @deprecated use `PlatformFilter$outboundSchema` instead. */
    PlatformFilter$.outboundSchema = PlatformFilter$outboundSchema;
})(PlatformFilter$ || (PlatformFilter$ = {}));
export function platformFilterToJSON(platformFilter) {
    return JSON.stringify(PlatformFilter$outboundSchema.parse(platformFilter));
}
export function platformFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PlatformFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PlatformFilter' from JSON`);
}
/** @internal */
export const RepositoryNameFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const RepositoryNameFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RepositoryNameFilter$;
(function (RepositoryNameFilter$) {
    /** @deprecated use `RepositoryNameFilter$inboundSchema` instead. */
    RepositoryNameFilter$.inboundSchema = RepositoryNameFilter$inboundSchema;
    /** @deprecated use `RepositoryNameFilter$outboundSchema` instead. */
    RepositoryNameFilter$.outboundSchema = RepositoryNameFilter$outboundSchema;
})(RepositoryNameFilter$ || (RepositoryNameFilter$ = {}));
export function repositoryNameFilterToJSON(repositoryNameFilter) {
    return JSON.stringify(RepositoryNameFilter$outboundSchema.parse(repositoryNameFilter));
}
export function repositoryNameFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RepositoryNameFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RepositoryNameFilter' from JSON`);
}
/** @internal */
export const OrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const OrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrganizationIDFilter$;
(function (OrganizationIDFilter$) {
    /** @deprecated use `OrganizationIDFilter$inboundSchema` instead. */
    OrganizationIDFilter$.inboundSchema = OrganizationIDFilter$inboundSchema;
    /** @deprecated use `OrganizationIDFilter$outboundSchema` instead. */
    OrganizationIDFilter$.outboundSchema = OrganizationIDFilter$outboundSchema;
})(OrganizationIDFilter$ || (OrganizationIDFilter$ = {}));
export function organizationIDFilterToJSON(organizationIDFilter) {
    return JSON.stringify(OrganizationIDFilter$outboundSchema.parse(organizationIDFilter));
}
export function organizationIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrganizationIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrganizationIDFilter' from JSON`);
}
/** @internal */
export const ExternalOrganizationsListRequest$inboundSchema = z.object({
    platform: z.nullable(z.union([Platforms$inboundSchema, z.array(Platforms$inboundSchema)])).optional(),
    name: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(ExternalOrganizationSortProperty$inboundSchema))
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "organization_id": "organizationId",
    });
});
/** @internal */
export const ExternalOrganizationsListRequest$outboundSchema = z.object({
    platform: z.nullable(z.union([Platforms$outboundSchema, z.array(Platforms$outboundSchema)])).optional(),
    name: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(ExternalOrganizationSortProperty$outboundSchema))
        .optional(),
}).transform((v) => {
    return remap$(v, {
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ExternalOrganizationsListRequest$;
(function (ExternalOrganizationsListRequest$) {
    /** @deprecated use `ExternalOrganizationsListRequest$inboundSchema` instead. */
    ExternalOrganizationsListRequest$.inboundSchema = ExternalOrganizationsListRequest$inboundSchema;
    /** @deprecated use `ExternalOrganizationsListRequest$outboundSchema` instead. */
    ExternalOrganizationsListRequest$.outboundSchema = ExternalOrganizationsListRequest$outboundSchema;
})(ExternalOrganizationsListRequest$ || (ExternalOrganizationsListRequest$ = {}));
export function externalOrganizationsListRequestToJSON(externalOrganizationsListRequest) {
    return JSON.stringify(ExternalOrganizationsListRequest$outboundSchema.parse(externalOrganizationsListRequest));
}
export function externalOrganizationsListRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ExternalOrganizationsListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExternalOrganizationsListRequest' from JSON`);
}
/** @internal */
export const ExternalOrganizationsListResponse$inboundSchema = z.object({
    Result: ListResourceExternalOrganization$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Result": "result",
    });
});
/** @internal */
export const ExternalOrganizationsListResponse$outboundSchema = z.object({
    result: ListResourceExternalOrganization$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ExternalOrganizationsListResponse$;
(function (ExternalOrganizationsListResponse$) {
    /** @deprecated use `ExternalOrganizationsListResponse$inboundSchema` instead. */
    ExternalOrganizationsListResponse$.inboundSchema = ExternalOrganizationsListResponse$inboundSchema;
    /** @deprecated use `ExternalOrganizationsListResponse$outboundSchema` instead. */
    ExternalOrganizationsListResponse$.outboundSchema = ExternalOrganizationsListResponse$outboundSchema;
})(ExternalOrganizationsListResponse$ || (ExternalOrganizationsListResponse$ = {}));
export function externalOrganizationsListResponseToJSON(externalOrganizationsListResponse) {
    return JSON.stringify(ExternalOrganizationsListResponse$outboundSchema.parse(externalOrganizationsListResponse));
}
export function externalOrganizationsListResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ExternalOrganizationsListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExternalOrganizationsListResponse' from JSON`);
}
//# sourceMappingURL=externalorganizationslist.js.map