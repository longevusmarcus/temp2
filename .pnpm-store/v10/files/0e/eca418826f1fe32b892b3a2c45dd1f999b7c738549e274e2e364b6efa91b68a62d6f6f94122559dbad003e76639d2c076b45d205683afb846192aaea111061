/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CustomerSubscriptionUpdate$inboundSchema, CustomerSubscriptionUpdate$outboundSchema, } from "../components/customersubscriptionupdate.js";
/** @internal */
export const CustomerPortalSubscriptionsUpdateSecurity$inboundSchema = z.object({
    customer_session: z.string(),
}).transform((v) => {
    return remap$(v, {
        "customer_session": "customerSession",
    });
});
/** @internal */
export const CustomerPortalSubscriptionsUpdateSecurity$outboundSchema = z.object({
    customerSession: z.string(),
}).transform((v) => {
    return remap$(v, {
        customerSession: "customer_session",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalSubscriptionsUpdateSecurity$;
(function (CustomerPortalSubscriptionsUpdateSecurity$) {
    /** @deprecated use `CustomerPortalSubscriptionsUpdateSecurity$inboundSchema` instead. */
    CustomerPortalSubscriptionsUpdateSecurity$.inboundSchema = CustomerPortalSubscriptionsUpdateSecurity$inboundSchema;
    /** @deprecated use `CustomerPortalSubscriptionsUpdateSecurity$outboundSchema` instead. */
    CustomerPortalSubscriptionsUpdateSecurity$.outboundSchema = CustomerPortalSubscriptionsUpdateSecurity$outboundSchema;
})(CustomerPortalSubscriptionsUpdateSecurity$ || (CustomerPortalSubscriptionsUpdateSecurity$ = {}));
export function customerPortalSubscriptionsUpdateSecurityToJSON(customerPortalSubscriptionsUpdateSecurity) {
    return JSON.stringify(CustomerPortalSubscriptionsUpdateSecurity$outboundSchema.parse(customerPortalSubscriptionsUpdateSecurity));
}
export function customerPortalSubscriptionsUpdateSecurityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalSubscriptionsUpdateSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalSubscriptionsUpdateSecurity' from JSON`);
}
/** @internal */
export const CustomerPortalSubscriptionsUpdateRequest$inboundSchema = z.object({
    id: z.string(),
    CustomerSubscriptionUpdate: CustomerSubscriptionUpdate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "CustomerSubscriptionUpdate": "customerSubscriptionUpdate",
    });
});
/** @internal */
export const CustomerPortalSubscriptionsUpdateRequest$outboundSchema = z.object({
    id: z.string(),
    customerSubscriptionUpdate: CustomerSubscriptionUpdate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        customerSubscriptionUpdate: "CustomerSubscriptionUpdate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalSubscriptionsUpdateRequest$;
(function (CustomerPortalSubscriptionsUpdateRequest$) {
    /** @deprecated use `CustomerPortalSubscriptionsUpdateRequest$inboundSchema` instead. */
    CustomerPortalSubscriptionsUpdateRequest$.inboundSchema = CustomerPortalSubscriptionsUpdateRequest$inboundSchema;
    /** @deprecated use `CustomerPortalSubscriptionsUpdateRequest$outboundSchema` instead. */
    CustomerPortalSubscriptionsUpdateRequest$.outboundSchema = CustomerPortalSubscriptionsUpdateRequest$outboundSchema;
})(CustomerPortalSubscriptionsUpdateRequest$ || (CustomerPortalSubscriptionsUpdateRequest$ = {}));
export function customerPortalSubscriptionsUpdateRequestToJSON(customerPortalSubscriptionsUpdateRequest) {
    return JSON.stringify(CustomerPortalSubscriptionsUpdateRequest$outboundSchema.parse(customerPortalSubscriptionsUpdateRequest));
}
export function customerPortalSubscriptionsUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalSubscriptionsUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalSubscriptionsUpdateRequest' from JSON`);
}
//# sourceMappingURL=customerportalsubscriptionsupdate.js.map