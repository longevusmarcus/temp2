/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { subscriptionsExport } from "../funcs/subscriptionsExport.js";
import { subscriptionsGet } from "../funcs/subscriptionsGet.js";
import { subscriptionsList } from "../funcs/subscriptionsList.js";
import { subscriptionsRevoke } from "../funcs/subscriptionsRevoke.js";
import { subscriptionsUpdate } from "../funcs/subscriptionsUpdate.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
import { unwrapResultIterator } from "../types/operations.js";
export class Subscriptions extends ClientSDK {
    /**
     * List Subscriptions
     *
     * @remarks
     * List subscriptions.
     *
     * **Scopes**: `subscriptions:read` `subscriptions:write`
     */
    async list(request, options) {
        return unwrapResultIterator(subscriptionsList(this, request, options));
    }
    /**
     * Export Subscriptions
     *
     * @remarks
     * Export subscriptions as a CSV file.
     *
     * **Scopes**: `subscriptions:read` `subscriptions:write`
     */
    async export(request, options) {
        return unwrapAsync(subscriptionsExport(this, request, options));
    }
    /**
     * Get Subscription
     *
     * @remarks
     * Get a subscription by ID.
     *
     * **Scopes**: `subscriptions:write`
     */
    async get(request, options) {
        return unwrapAsync(subscriptionsGet(this, request, options));
    }
    /**
     * Update Subscription
     *
     * @remarks
     * Update a subscription.
     *
     * **Scopes**: `subscriptions:write`
     */
    async update(request, options) {
        return unwrapAsync(subscriptionsUpdate(this, request, options));
    }
    /**
     * Revoke Subscription
     *
     * @remarks
     * Revoke a subscription, i.e cancel immediately.
     *
     * **Scopes**: `subscriptions:write`
     */
    async revoke(request, options) {
        return unwrapAsync(subscriptionsRevoke(this, request, options));
    }
}
//# sourceMappingURL=subscriptions.js.map