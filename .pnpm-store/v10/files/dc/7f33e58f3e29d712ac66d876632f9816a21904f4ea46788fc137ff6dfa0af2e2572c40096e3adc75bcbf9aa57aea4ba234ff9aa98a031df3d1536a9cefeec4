"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BenefitsGrantsResponse$ = exports.BenefitsGrantsResponse$outboundSchema = exports.BenefitsGrantsResponse$inboundSchema = exports.BenefitsGrantsRequest$ = exports.BenefitsGrantsRequest$outboundSchema = exports.BenefitsGrantsRequest$inboundSchema = exports.QueryParamCustomerIDFilter$ = exports.QueryParamCustomerIDFilter$outboundSchema = exports.QueryParamCustomerIDFilter$inboundSchema = void 0;
exports.queryParamCustomerIDFilterToJSON = queryParamCustomerIDFilterToJSON;
exports.queryParamCustomerIDFilterFromJSON = queryParamCustomerIDFilterFromJSON;
exports.benefitsGrantsRequestToJSON = benefitsGrantsRequestToJSON;
exports.benefitsGrantsRequestFromJSON = benefitsGrantsRequestFromJSON;
exports.benefitsGrantsResponseToJSON = benefitsGrantsResponseToJSON;
exports.benefitsGrantsResponseFromJSON = benefitsGrantsResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const listresourcebenefitgrant_js_1 = require("../components/listresourcebenefitgrant.js");
/** @internal */
exports.QueryParamCustomerIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.QueryParamCustomerIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var QueryParamCustomerIDFilter$;
(function (QueryParamCustomerIDFilter$) {
    /** @deprecated use `QueryParamCustomerIDFilter$inboundSchema` instead. */
    QueryParamCustomerIDFilter$.inboundSchema = exports.QueryParamCustomerIDFilter$inboundSchema;
    /** @deprecated use `QueryParamCustomerIDFilter$outboundSchema` instead. */
    QueryParamCustomerIDFilter$.outboundSchema = exports.QueryParamCustomerIDFilter$outboundSchema;
})(QueryParamCustomerIDFilter$ || (exports.QueryParamCustomerIDFilter$ = QueryParamCustomerIDFilter$ = {}));
function queryParamCustomerIDFilterToJSON(queryParamCustomerIDFilter) {
    return JSON.stringify(exports.QueryParamCustomerIDFilter$outboundSchema.parse(queryParamCustomerIDFilter));
}
function queryParamCustomerIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.QueryParamCustomerIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamCustomerIDFilter' from JSON`);
}
/** @internal */
exports.BenefitsGrantsRequest$inboundSchema = z.object({
    id: z.string(),
    is_granted: z.nullable(z.boolean()).optional(),
    customer_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "is_granted": "isGranted",
        "customer_id": "customerId",
    });
});
/** @internal */
exports.BenefitsGrantsRequest$outboundSchema = z.object({
    id: z.string(),
    isGranted: z.nullable(z.boolean()).optional(),
    customerId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        isGranted: "is_granted",
        customerId: "customer_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BenefitsGrantsRequest$;
(function (BenefitsGrantsRequest$) {
    /** @deprecated use `BenefitsGrantsRequest$inboundSchema` instead. */
    BenefitsGrantsRequest$.inboundSchema = exports.BenefitsGrantsRequest$inboundSchema;
    /** @deprecated use `BenefitsGrantsRequest$outboundSchema` instead. */
    BenefitsGrantsRequest$.outboundSchema = exports.BenefitsGrantsRequest$outboundSchema;
})(BenefitsGrantsRequest$ || (exports.BenefitsGrantsRequest$ = BenefitsGrantsRequest$ = {}));
function benefitsGrantsRequestToJSON(benefitsGrantsRequest) {
    return JSON.stringify(exports.BenefitsGrantsRequest$outboundSchema.parse(benefitsGrantsRequest));
}
function benefitsGrantsRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.BenefitsGrantsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitsGrantsRequest' from JSON`);
}
/** @internal */
exports.BenefitsGrantsResponse$inboundSchema = z.object({
    Result: listresourcebenefitgrant_js_1.ListResourceBenefitGrant$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Result": "result",
    });
});
/** @internal */
exports.BenefitsGrantsResponse$outboundSchema = z.object({
    result: listresourcebenefitgrant_js_1.ListResourceBenefitGrant$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BenefitsGrantsResponse$;
(function (BenefitsGrantsResponse$) {
    /** @deprecated use `BenefitsGrantsResponse$inboundSchema` instead. */
    BenefitsGrantsResponse$.inboundSchema = exports.BenefitsGrantsResponse$inboundSchema;
    /** @deprecated use `BenefitsGrantsResponse$outboundSchema` instead. */
    BenefitsGrantsResponse$.outboundSchema = exports.BenefitsGrantsResponse$outboundSchema;
})(BenefitsGrantsResponse$ || (exports.BenefitsGrantsResponse$ = BenefitsGrantsResponse$ = {}));
function benefitsGrantsResponseToJSON(benefitsGrantsResponse) {
    return JSON.stringify(exports.BenefitsGrantsResponse$outboundSchema.parse(benefitsGrantsResponse));
}
function benefitsGrantsResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.BenefitsGrantsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitsGrantsResponse' from JSON`);
}
//# sourceMappingURL=benefitsgrants.js.map