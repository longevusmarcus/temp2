import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { DownloadableFileRead, DownloadableFileRead$Outbound } from "../components/downloadablefileread.js";
import { FilePatch, FilePatch$Outbound } from "../components/filepatch.js";
import { OrganizationAvatarFileRead, OrganizationAvatarFileRead$Outbound } from "../components/organizationavatarfileread.js";
import { ProductMediaFileRead, ProductMediaFileRead$Outbound } from "../components/productmediafileread.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type FilesUpdateRequest = {
    /**
     * The file ID.
     */
    id: string;
    filePatch: FilePatch;
};
/**
 * File updated.
 */
export type FilesUpdateResponseFilesUpdate = (DownloadableFileRead & {
    service: "downloadable";
}) | (ProductMediaFileRead & {
    service: "product_media";
}) | (OrganizationAvatarFileRead & {
    service: "organization_avatar";
});
/** @internal */
export declare const FilesUpdateRequest$inboundSchema: z.ZodType<FilesUpdateRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type FilesUpdateRequest$Outbound = {
    id: string;
    FilePatch: FilePatch$Outbound;
};
/** @internal */
export declare const FilesUpdateRequest$outboundSchema: z.ZodType<FilesUpdateRequest$Outbound, z.ZodTypeDef, FilesUpdateRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilesUpdateRequest$ {
    /** @deprecated use `FilesUpdateRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilesUpdateRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilesUpdateRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilesUpdateRequest$Outbound, z.ZodTypeDef, FilesUpdateRequest>;
    /** @deprecated use `FilesUpdateRequest$Outbound` instead. */
    type Outbound = FilesUpdateRequest$Outbound;
}
export declare function filesUpdateRequestToJSON(filesUpdateRequest: FilesUpdateRequest): string;
export declare function filesUpdateRequestFromJSON(jsonString: string): SafeParseResult<FilesUpdateRequest, SDKValidationError>;
/** @internal */
export declare const FilesUpdateResponseFilesUpdate$inboundSchema: z.ZodType<FilesUpdateResponseFilesUpdate, z.ZodTypeDef, unknown>;
/** @internal */
export type FilesUpdateResponseFilesUpdate$Outbound = (DownloadableFileRead$Outbound & {
    service: "downloadable";
}) | (ProductMediaFileRead$Outbound & {
    service: "product_media";
}) | (OrganizationAvatarFileRead$Outbound & {
    service: "organization_avatar";
});
/** @internal */
export declare const FilesUpdateResponseFilesUpdate$outboundSchema: z.ZodType<FilesUpdateResponseFilesUpdate$Outbound, z.ZodTypeDef, FilesUpdateResponseFilesUpdate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilesUpdateResponseFilesUpdate$ {
    /** @deprecated use `FilesUpdateResponseFilesUpdate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilesUpdateResponseFilesUpdate, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilesUpdateResponseFilesUpdate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilesUpdateResponseFilesUpdate$Outbound, z.ZodTypeDef, FilesUpdateResponseFilesUpdate>;
    /** @deprecated use `FilesUpdateResponseFilesUpdate$Outbound` instead. */
    type Outbound = FilesUpdateResponseFilesUpdate$Outbound;
}
export declare function filesUpdateResponseFilesUpdateToJSON(filesUpdateResponseFilesUpdate: FilesUpdateResponseFilesUpdate): string;
export declare function filesUpdateResponseFilesUpdateFromJSON(jsonString: string): SafeParseResult<FilesUpdateResponseFilesUpdate, SDKValidationError>;
//# sourceMappingURL=filesupdate.d.ts.map