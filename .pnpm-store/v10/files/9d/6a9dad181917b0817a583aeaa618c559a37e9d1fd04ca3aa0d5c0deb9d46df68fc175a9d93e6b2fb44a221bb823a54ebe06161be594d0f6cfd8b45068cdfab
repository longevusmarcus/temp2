/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomerBenefitGrantDownloadablesUpdate$inboundSchema = z.object({
    benefit_type: z.literal("downloadables").optional(),
}).transform((v) => {
    return remap$(v, {
        "benefit_type": "benefitType",
    });
});
/** @internal */
export const CustomerBenefitGrantDownloadablesUpdate$outboundSchema = z.object({
    benefitType: z.literal("downloadables").default("downloadables"),
}).transform((v) => {
    return remap$(v, {
        benefitType: "benefit_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerBenefitGrantDownloadablesUpdate$;
(function (CustomerBenefitGrantDownloadablesUpdate$) {
    /** @deprecated use `CustomerBenefitGrantDownloadablesUpdate$inboundSchema` instead. */
    CustomerBenefitGrantDownloadablesUpdate$.inboundSchema = CustomerBenefitGrantDownloadablesUpdate$inboundSchema;
    /** @deprecated use `CustomerBenefitGrantDownloadablesUpdate$outboundSchema` instead. */
    CustomerBenefitGrantDownloadablesUpdate$.outboundSchema = CustomerBenefitGrantDownloadablesUpdate$outboundSchema;
})(CustomerBenefitGrantDownloadablesUpdate$ || (CustomerBenefitGrantDownloadablesUpdate$ = {}));
export function customerBenefitGrantDownloadablesUpdateToJSON(customerBenefitGrantDownloadablesUpdate) {
    return JSON.stringify(CustomerBenefitGrantDownloadablesUpdate$outboundSchema.parse(customerBenefitGrantDownloadablesUpdate));
}
export function customerBenefitGrantDownloadablesUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerBenefitGrantDownloadablesUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerBenefitGrantDownloadablesUpdate' from JSON`);
}
//# sourceMappingURL=customerbenefitgrantdownloadablesupdate.js.map