/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const OrderInvoice$inboundSchema = z.object({
    url: z.string(),
});
/** @internal */
export const OrderInvoice$outboundSchema = z.object({
    url: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrderInvoice$;
(function (OrderInvoice$) {
    /** @deprecated use `OrderInvoice$inboundSchema` instead. */
    OrderInvoice$.inboundSchema = OrderInvoice$inboundSchema;
    /** @deprecated use `OrderInvoice$outboundSchema` instead. */
    OrderInvoice$.outboundSchema = OrderInvoice$outboundSchema;
})(OrderInvoice$ || (OrderInvoice$ = {}));
export function orderInvoiceToJSON(orderInvoice) {
    return JSON.stringify(OrderInvoice$outboundSchema.parse(orderInvoice));
}
export function orderInvoiceFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrderInvoice$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrderInvoice' from JSON`);
}
//# sourceMappingURL=orderinvoice.js.map