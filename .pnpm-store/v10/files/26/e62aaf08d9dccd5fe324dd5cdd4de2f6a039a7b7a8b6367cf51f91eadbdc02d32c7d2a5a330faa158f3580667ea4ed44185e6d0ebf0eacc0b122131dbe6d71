import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { Address, Address$Outbound } from "./address.js";
import { DiscountFixedOnceForeverDurationBase, DiscountFixedOnceForeverDurationBase$Outbound } from "./discountfixedonceforeverdurationbase.js";
import { DiscountFixedRepeatDurationBase, DiscountFixedRepeatDurationBase$Outbound } from "./discountfixedrepeatdurationbase.js";
import { DiscountPercentageOnceForeverDurationBase, DiscountPercentageOnceForeverDurationBase$Outbound } from "./discountpercentageonceforeverdurationbase.js";
import { DiscountPercentageRepeatDurationBase, DiscountPercentageRepeatDurationBase$Outbound } from "./discountpercentagerepeatdurationbase.js";
import { LegacyRecurringProductPrice, LegacyRecurringProductPrice$Outbound } from "./legacyrecurringproductprice.js";
import { OrderBillingReason } from "./orderbillingreason.js";
import { OrderCustomer, OrderCustomer$Outbound } from "./ordercustomer.js";
import { OrderItemSchema, OrderItemSchema$Outbound } from "./orderitemschema.js";
import { OrderProduct, OrderProduct$Outbound } from "./orderproduct.js";
import { OrderStatus } from "./orderstatus.js";
import { OrderSubscription, OrderSubscription$Outbound } from "./ordersubscription.js";
import { OrderUser, OrderUser$Outbound } from "./orderuser.js";
import { ProductPrice, ProductPrice$Outbound } from "./productprice.js";
export type OrderMetadata = string | number | boolean;
export type OrderCustomFieldData = string | number | boolean | Date;
/**
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type OrderProductPrice = LegacyRecurringProductPrice | ProductPrice;
export type OrderDiscount = DiscountPercentageOnceForeverDurationBase | DiscountFixedOnceForeverDurationBase | DiscountPercentageRepeatDurationBase | DiscountFixedRepeatDurationBase;
export type Order = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the object.
     */
    id: string;
    metadata: {
        [k: string]: string | number | boolean;
    };
    /**
     * Key-value object storing custom field values.
     */
    customFieldData?: {
        [k: string]: string | number | boolean | Date | null;
    } | undefined;
    status: OrderStatus;
    /**
     * Whether the order has been paid for.
     */
    paid: boolean;
    /**
     * Amount in cents, before discounts and taxes.
     */
    subtotalAmount: number;
    /**
     * Discount amount in cents.
     */
    discountAmount: number;
    /**
     * Amount in cents, after discounts but before taxes.
     */
    netAmount: number;
    /**
     * Amount in cents, after discounts but before taxes.
     *
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    amount: number;
    /**
     * Sales tax amount in cents.
     */
    taxAmount: number;
    /**
     * Amount in cents, after discounts and taxes.
     */
    totalAmount: number;
    /**
     * Amount refunded in cents.
     */
    refundedAmount: number;
    /**
     * Sales tax refunded in cents.
     */
    refundedTaxAmount: number;
    currency: string;
    billingReason: OrderBillingReason;
    billingAddress: Address | null;
    customerId: string;
    productId: string;
    /**
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    productPriceId: string;
    discountId: string | null;
    subscriptionId: string | null;
    checkoutId: string | null;
    customer: OrderCustomer;
    /**
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    userId: string;
    user: OrderUser;
    product: OrderProduct;
    /**
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    productPrice: LegacyRecurringProductPrice | ProductPrice;
    discount: DiscountPercentageOnceForeverDurationBase | DiscountFixedOnceForeverDurationBase | DiscountPercentageRepeatDurationBase | DiscountFixedRepeatDurationBase | null;
    subscription: OrderSubscription | null;
    /**
     * Line items composing the order.
     */
    items: Array<OrderItemSchema>;
};
/** @internal */
export declare const OrderMetadata$inboundSchema: z.ZodType<OrderMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type OrderMetadata$Outbound = string | number | boolean;
/** @internal */
export declare const OrderMetadata$outboundSchema: z.ZodType<OrderMetadata$Outbound, z.ZodTypeDef, OrderMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrderMetadata$ {
    /** @deprecated use `OrderMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrderMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrderMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrderMetadata$Outbound, z.ZodTypeDef, OrderMetadata>;
    /** @deprecated use `OrderMetadata$Outbound` instead. */
    type Outbound = OrderMetadata$Outbound;
}
export declare function orderMetadataToJSON(orderMetadata: OrderMetadata): string;
export declare function orderMetadataFromJSON(jsonString: string): SafeParseResult<OrderMetadata, SDKValidationError>;
/** @internal */
export declare const OrderCustomFieldData$inboundSchema: z.ZodType<OrderCustomFieldData, z.ZodTypeDef, unknown>;
/** @internal */
export type OrderCustomFieldData$Outbound = string | number | boolean | string;
/** @internal */
export declare const OrderCustomFieldData$outboundSchema: z.ZodType<OrderCustomFieldData$Outbound, z.ZodTypeDef, OrderCustomFieldData>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrderCustomFieldData$ {
    /** @deprecated use `OrderCustomFieldData$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrderCustomFieldData, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrderCustomFieldData$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrderCustomFieldData$Outbound, z.ZodTypeDef, OrderCustomFieldData>;
    /** @deprecated use `OrderCustomFieldData$Outbound` instead. */
    type Outbound = OrderCustomFieldData$Outbound;
}
export declare function orderCustomFieldDataToJSON(orderCustomFieldData: OrderCustomFieldData): string;
export declare function orderCustomFieldDataFromJSON(jsonString: string): SafeParseResult<OrderCustomFieldData, SDKValidationError>;
/** @internal */
export declare const OrderProductPrice$inboundSchema: z.ZodType<OrderProductPrice, z.ZodTypeDef, unknown>;
/** @internal */
export type OrderProductPrice$Outbound = LegacyRecurringProductPrice$Outbound | ProductPrice$Outbound;
/** @internal */
export declare const OrderProductPrice$outboundSchema: z.ZodType<OrderProductPrice$Outbound, z.ZodTypeDef, OrderProductPrice>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrderProductPrice$ {
    /** @deprecated use `OrderProductPrice$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrderProductPrice, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrderProductPrice$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrderProductPrice$Outbound, z.ZodTypeDef, OrderProductPrice>;
    /** @deprecated use `OrderProductPrice$Outbound` instead. */
    type Outbound = OrderProductPrice$Outbound;
}
export declare function orderProductPriceToJSON(orderProductPrice: OrderProductPrice): string;
export declare function orderProductPriceFromJSON(jsonString: string): SafeParseResult<OrderProductPrice, SDKValidationError>;
/** @internal */
export declare const OrderDiscount$inboundSchema: z.ZodType<OrderDiscount, z.ZodTypeDef, unknown>;
/** @internal */
export type OrderDiscount$Outbound = DiscountPercentageOnceForeverDurationBase$Outbound | DiscountFixedOnceForeverDurationBase$Outbound | DiscountPercentageRepeatDurationBase$Outbound | DiscountFixedRepeatDurationBase$Outbound;
/** @internal */
export declare const OrderDiscount$outboundSchema: z.ZodType<OrderDiscount$Outbound, z.ZodTypeDef, OrderDiscount>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrderDiscount$ {
    /** @deprecated use `OrderDiscount$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrderDiscount, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrderDiscount$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrderDiscount$Outbound, z.ZodTypeDef, OrderDiscount>;
    /** @deprecated use `OrderDiscount$Outbound` instead. */
    type Outbound = OrderDiscount$Outbound;
}
export declare function orderDiscountToJSON(orderDiscount: OrderDiscount): string;
export declare function orderDiscountFromJSON(jsonString: string): SafeParseResult<OrderDiscount, SDKValidationError>;
/** @internal */
export declare const Order$inboundSchema: z.ZodType<Order, z.ZodTypeDef, unknown>;
/** @internal */
export type Order$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    metadata: {
        [k: string]: string | number | boolean;
    };
    custom_field_data?: {
        [k: string]: string | number | boolean | string | null;
    } | undefined;
    status: string;
    paid: boolean;
    subtotal_amount: number;
    discount_amount: number;
    net_amount: number;
    amount: number;
    tax_amount: number;
    total_amount: number;
    refunded_amount: number;
    refunded_tax_amount: number;
    currency: string;
    billing_reason: string;
    billing_address: Address$Outbound | null;
    customer_id: string;
    product_id: string;
    product_price_id: string;
    discount_id: string | null;
    subscription_id: string | null;
    checkout_id: string | null;
    customer: OrderCustomer$Outbound;
    user_id: string;
    user: OrderUser$Outbound;
    product: OrderProduct$Outbound;
    product_price: LegacyRecurringProductPrice$Outbound | ProductPrice$Outbound;
    discount: DiscountPercentageOnceForeverDurationBase$Outbound | DiscountFixedOnceForeverDurationBase$Outbound | DiscountPercentageRepeatDurationBase$Outbound | DiscountFixedRepeatDurationBase$Outbound | null;
    subscription: OrderSubscription$Outbound | null;
    items: Array<OrderItemSchema$Outbound>;
};
/** @internal */
export declare const Order$outboundSchema: z.ZodType<Order$Outbound, z.ZodTypeDef, Order>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Order$ {
    /** @deprecated use `Order$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Order, z.ZodTypeDef, unknown>;
    /** @deprecated use `Order$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Order$Outbound, z.ZodTypeDef, Order>;
    /** @deprecated use `Order$Outbound` instead. */
    type Outbound = Order$Outbound;
}
export declare function orderToJSON(order: Order): string;
export declare function orderFromJSON(jsonString: string): SafeParseResult<Order, SDKValidationError>;
//# sourceMappingURL=order.d.ts.map