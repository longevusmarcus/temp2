import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { CustomerBenefitGrantCustomUpdate, CustomerBenefitGrantCustomUpdate$Outbound } from "./customerbenefitgrantcustomupdate.js";
import { CustomerBenefitGrantDiscordUpdate, CustomerBenefitGrantDiscordUpdate$Outbound } from "./customerbenefitgrantdiscordupdate.js";
import { CustomerBenefitGrantDownloadablesUpdate, CustomerBenefitGrantDownloadablesUpdate$Outbound } from "./customerbenefitgrantdownloadablesupdate.js";
import { CustomerBenefitGrantGitHubRepositoryUpdate, CustomerBenefitGrantGitHubRepositoryUpdate$Outbound } from "./customerbenefitgrantgithubrepositoryupdate.js";
import { CustomerBenefitGrantLicenseKeysUpdate, CustomerBenefitGrantLicenseKeysUpdate$Outbound } from "./customerbenefitgrantlicensekeysupdate.js";
export type CustomerBenefitGrantUpdate = (CustomerBenefitGrantCustomUpdate & {
    benefitType: "custom";
}) | (CustomerBenefitGrantDownloadablesUpdate & {
    benefitType: "downloadables";
}) | (CustomerBenefitGrantLicenseKeysUpdate & {
    benefitType: "license_keys";
}) | (CustomerBenefitGrantDiscordUpdate & {
    benefitType: "discord";
}) | (CustomerBenefitGrantGitHubRepositoryUpdate & {
    benefitType: "github_repository";
});
/** @internal */
export declare const CustomerBenefitGrantUpdate$inboundSchema: z.ZodType<CustomerBenefitGrantUpdate, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerBenefitGrantUpdate$Outbound = (CustomerBenefitGrantCustomUpdate$Outbound & {
    benefit_type: "custom";
}) | (CustomerBenefitGrantDownloadablesUpdate$Outbound & {
    benefit_type: "downloadables";
}) | (CustomerBenefitGrantLicenseKeysUpdate$Outbound & {
    benefit_type: "license_keys";
}) | (CustomerBenefitGrantDiscordUpdate$Outbound & {
    benefit_type: "discord";
}) | (CustomerBenefitGrantGitHubRepositoryUpdate$Outbound & {
    benefit_type: "github_repository";
});
/** @internal */
export declare const CustomerBenefitGrantUpdate$outboundSchema: z.ZodType<CustomerBenefitGrantUpdate$Outbound, z.ZodTypeDef, CustomerBenefitGrantUpdate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerBenefitGrantUpdate$ {
    /** @deprecated use `CustomerBenefitGrantUpdate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerBenefitGrantUpdate, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerBenefitGrantUpdate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerBenefitGrantUpdate$Outbound, z.ZodTypeDef, CustomerBenefitGrantUpdate>;
    /** @deprecated use `CustomerBenefitGrantUpdate$Outbound` instead. */
    type Outbound = CustomerBenefitGrantUpdate$Outbound;
}
export declare function customerBenefitGrantUpdateToJSON(customerBenefitGrantUpdate: CustomerBenefitGrantUpdate): string;
export declare function customerBenefitGrantUpdateFromJSON(jsonString: string): SafeParseResult<CustomerBenefitGrantUpdate, SDKValidationError>;
//# sourceMappingURL=customerbenefitgrantupdate.d.ts.map