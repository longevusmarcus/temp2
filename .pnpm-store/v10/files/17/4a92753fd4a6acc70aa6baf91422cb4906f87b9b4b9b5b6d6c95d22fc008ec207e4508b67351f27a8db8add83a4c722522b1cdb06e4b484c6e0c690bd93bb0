/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomerSubscriptionUpdateProduct$inboundSchema = z.object({
    product_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "product_id": "productId",
    });
});
/** @internal */
export const CustomerSubscriptionUpdateProduct$outboundSchema = z.object({
    productId: z.string(),
}).transform((v) => {
    return remap$(v, {
        productId: "product_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerSubscriptionUpdateProduct$;
(function (CustomerSubscriptionUpdateProduct$) {
    /** @deprecated use `CustomerSubscriptionUpdateProduct$inboundSchema` instead. */
    CustomerSubscriptionUpdateProduct$.inboundSchema = CustomerSubscriptionUpdateProduct$inboundSchema;
    /** @deprecated use `CustomerSubscriptionUpdateProduct$outboundSchema` instead. */
    CustomerSubscriptionUpdateProduct$.outboundSchema = CustomerSubscriptionUpdateProduct$outboundSchema;
})(CustomerSubscriptionUpdateProduct$ || (CustomerSubscriptionUpdateProduct$ = {}));
export function customerSubscriptionUpdateProductToJSON(customerSubscriptionUpdateProduct) {
    return JSON.stringify(CustomerSubscriptionUpdateProduct$outboundSchema.parse(customerSubscriptionUpdateProduct));
}
export function customerSubscriptionUpdateProductFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerSubscriptionUpdateProduct$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerSubscriptionUpdateProduct' from JSON`);
}
//# sourceMappingURL=customersubscriptionupdateproduct.js.map