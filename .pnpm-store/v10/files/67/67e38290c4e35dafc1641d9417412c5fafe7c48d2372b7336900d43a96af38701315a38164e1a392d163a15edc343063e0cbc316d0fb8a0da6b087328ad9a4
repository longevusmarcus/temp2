import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CustomerBenefitGrantCustomUpdate = {
    benefitType?: "custom" | undefined;
};
/** @internal */
export declare const CustomerBenefitGrantCustomUpdate$inboundSchema: z.ZodType<CustomerBenefitGrantCustomUpdate, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerBenefitGrantCustomUpdate$Outbound = {
    benefit_type: "custom";
};
/** @internal */
export declare const CustomerBenefitGrantCustomUpdate$outboundSchema: z.ZodType<CustomerBenefitGrantCustomUpdate$Outbound, z.ZodTypeDef, CustomerBenefitGrantCustomUpdate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerBenefitGrantCustomUpdate$ {
    /** @deprecated use `CustomerBenefitGrantCustomUpdate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerBenefitGrantCustomUpdate, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerBenefitGrantCustomUpdate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerBenefitGrantCustomUpdate$Outbound, z.ZodTypeDef, CustomerBenefitGrantCustomUpdate>;
    /** @deprecated use `CustomerBenefitGrantCustomUpdate$Outbound` instead. */
    type Outbound = CustomerBenefitGrantCustomUpdate$Outbound;
}
export declare function customerBenefitGrantCustomUpdateToJSON(customerBenefitGrantCustomUpdate: CustomerBenefitGrantCustomUpdate): string;
export declare function customerBenefitGrantCustomUpdateFromJSON(jsonString: string): SafeParseResult<CustomerBenefitGrantCustomUpdate, SDKValidationError>;
//# sourceMappingURL=customerbenefitgrantcustomupdate.d.ts.map