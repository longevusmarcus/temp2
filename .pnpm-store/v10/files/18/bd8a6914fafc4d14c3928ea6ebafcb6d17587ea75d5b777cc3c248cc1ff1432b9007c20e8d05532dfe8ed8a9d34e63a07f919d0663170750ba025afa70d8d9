/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CustomFieldSortProperty$inboundSchema, CustomFieldSortProperty$outboundSchema, } from "../components/customfieldsortproperty.js";
import { CustomFieldType$inboundSchema, CustomFieldType$outboundSchema, } from "../components/customfieldtype.js";
import { ListResourceCustomField$inboundSchema, ListResourceCustomField$outboundSchema, } from "../components/listresourcecustomfield.js";
/** @internal */
export const CustomFieldsListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const CustomFieldsListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldsListQueryParamOrganizationIDFilter$;
(function (CustomFieldsListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `CustomFieldsListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    CustomFieldsListQueryParamOrganizationIDFilter$.inboundSchema = CustomFieldsListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `CustomFieldsListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    CustomFieldsListQueryParamOrganizationIDFilter$.outboundSchema = CustomFieldsListQueryParamOrganizationIDFilter$outboundSchema;
})(CustomFieldsListQueryParamOrganizationIDFilter$ || (CustomFieldsListQueryParamOrganizationIDFilter$ = {}));
export function customFieldsListQueryParamOrganizationIDFilterToJSON(customFieldsListQueryParamOrganizationIDFilter) {
    return JSON.stringify(CustomFieldsListQueryParamOrganizationIDFilter$outboundSchema.parse(customFieldsListQueryParamOrganizationIDFilter));
}
export function customFieldsListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldsListQueryParamOrganizationIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldsListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
export const CustomFieldTypeFilter$inboundSchema = z.union([
    CustomFieldType$inboundSchema,
    z.array(CustomFieldType$inboundSchema),
]);
/** @internal */
export const CustomFieldTypeFilter$outboundSchema = z.union([
    CustomFieldType$outboundSchema,
    z.array(CustomFieldType$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldTypeFilter$;
(function (CustomFieldTypeFilter$) {
    /** @deprecated use `CustomFieldTypeFilter$inboundSchema` instead. */
    CustomFieldTypeFilter$.inboundSchema = CustomFieldTypeFilter$inboundSchema;
    /** @deprecated use `CustomFieldTypeFilter$outboundSchema` instead. */
    CustomFieldTypeFilter$.outboundSchema = CustomFieldTypeFilter$outboundSchema;
})(CustomFieldTypeFilter$ || (CustomFieldTypeFilter$ = {}));
export function customFieldTypeFilterToJSON(customFieldTypeFilter) {
    return JSON.stringify(CustomFieldTypeFilter$outboundSchema.parse(customFieldTypeFilter));
}
export function customFieldTypeFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldTypeFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldTypeFilter' from JSON`);
}
/** @internal */
export const CustomFieldsListRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    query: z.nullable(z.string()).optional(),
    type_filter: z.nullable(z.union([
        CustomFieldType$inboundSchema,
        z.array(CustomFieldType$inboundSchema),
    ])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(CustomFieldSortProperty$inboundSchema))
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "organization_id": "organizationId",
        "type_filter": "typeFilter",
    });
});
/** @internal */
export const CustomFieldsListRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    query: z.nullable(z.string()).optional(),
    typeFilter: z.nullable(z.union([
        CustomFieldType$outboundSchema,
        z.array(CustomFieldType$outboundSchema),
    ])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(CustomFieldSortProperty$outboundSchema))
        .optional(),
}).transform((v) => {
    return remap$(v, {
        organizationId: "organization_id",
        typeFilter: "type_filter",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldsListRequest$;
(function (CustomFieldsListRequest$) {
    /** @deprecated use `CustomFieldsListRequest$inboundSchema` instead. */
    CustomFieldsListRequest$.inboundSchema = CustomFieldsListRequest$inboundSchema;
    /** @deprecated use `CustomFieldsListRequest$outboundSchema` instead. */
    CustomFieldsListRequest$.outboundSchema = CustomFieldsListRequest$outboundSchema;
})(CustomFieldsListRequest$ || (CustomFieldsListRequest$ = {}));
export function customFieldsListRequestToJSON(customFieldsListRequest) {
    return JSON.stringify(CustomFieldsListRequest$outboundSchema.parse(customFieldsListRequest));
}
export function customFieldsListRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldsListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldsListRequest' from JSON`);
}
/** @internal */
export const CustomFieldsListResponse$inboundSchema = z.object({
    Result: ListResourceCustomField$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Result": "result",
    });
});
/** @internal */
export const CustomFieldsListResponse$outboundSchema = z.object({
    result: ListResourceCustomField$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldsListResponse$;
(function (CustomFieldsListResponse$) {
    /** @deprecated use `CustomFieldsListResponse$inboundSchema` instead. */
    CustomFieldsListResponse$.inboundSchema = CustomFieldsListResponse$inboundSchema;
    /** @deprecated use `CustomFieldsListResponse$outboundSchema` instead. */
    CustomFieldsListResponse$.outboundSchema = CustomFieldsListResponse$outboundSchema;
})(CustomFieldsListResponse$ || (CustomFieldsListResponse$ = {}));
export function customFieldsListResponseToJSON(customFieldsListResponse) {
    return JSON.stringify(CustomFieldsListResponse$outboundSchema.parse(customFieldsListResponse));
}
export function customFieldsListResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldsListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldsListResponse' from JSON`);
}
//# sourceMappingURL=customfieldslist.js.map