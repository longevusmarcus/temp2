"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RefundsListResponse$ = exports.RefundsListResponse$outboundSchema = exports.RefundsListResponse$inboundSchema = exports.RefundsListRequest$ = exports.RefundsListRequest$outboundSchema = exports.RefundsListRequest$inboundSchema = exports.RefundsListQueryParamCustomerIDFilter$ = exports.RefundsListQueryParamCustomerIDFilter$outboundSchema = exports.RefundsListQueryParamCustomerIDFilter$inboundSchema = exports.SubscriptionIDFilter$ = exports.SubscriptionIDFilter$outboundSchema = exports.SubscriptionIDFilter$inboundSchema = exports.OrderIDFilter$ = exports.OrderIDFilter$outboundSchema = exports.OrderIDFilter$inboundSchema = exports.RefundsListQueryParamOrganizationIDFilter$ = exports.RefundsListQueryParamOrganizationIDFilter$outboundSchema = exports.RefundsListQueryParamOrganizationIDFilter$inboundSchema = exports.RefundIDFilter$ = exports.RefundIDFilter$outboundSchema = exports.RefundIDFilter$inboundSchema = void 0;
exports.refundIDFilterToJSON = refundIDFilterToJSON;
exports.refundIDFilterFromJSON = refundIDFilterFromJSON;
exports.refundsListQueryParamOrganizationIDFilterToJSON = refundsListQueryParamOrganizationIDFilterToJSON;
exports.refundsListQueryParamOrganizationIDFilterFromJSON = refundsListQueryParamOrganizationIDFilterFromJSON;
exports.orderIDFilterToJSON = orderIDFilterToJSON;
exports.orderIDFilterFromJSON = orderIDFilterFromJSON;
exports.subscriptionIDFilterToJSON = subscriptionIDFilterToJSON;
exports.subscriptionIDFilterFromJSON = subscriptionIDFilterFromJSON;
exports.refundsListQueryParamCustomerIDFilterToJSON = refundsListQueryParamCustomerIDFilterToJSON;
exports.refundsListQueryParamCustomerIDFilterFromJSON = refundsListQueryParamCustomerIDFilterFromJSON;
exports.refundsListRequestToJSON = refundsListRequestToJSON;
exports.refundsListRequestFromJSON = refundsListRequestFromJSON;
exports.refundsListResponseToJSON = refundsListResponseToJSON;
exports.refundsListResponseFromJSON = refundsListResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const listresourcerefund_js_1 = require("../components/listresourcerefund.js");
const refundsortproperty_js_1 = require("../components/refundsortproperty.js");
/** @internal */
exports.RefundIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.RefundIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RefundIDFilter$;
(function (RefundIDFilter$) {
    /** @deprecated use `RefundIDFilter$inboundSchema` instead. */
    RefundIDFilter$.inboundSchema = exports.RefundIDFilter$inboundSchema;
    /** @deprecated use `RefundIDFilter$outboundSchema` instead. */
    RefundIDFilter$.outboundSchema = exports.RefundIDFilter$outboundSchema;
})(RefundIDFilter$ || (exports.RefundIDFilter$ = RefundIDFilter$ = {}));
function refundIDFilterToJSON(refundIDFilter) {
    return JSON.stringify(exports.RefundIDFilter$outboundSchema.parse(refundIDFilter));
}
function refundIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.RefundIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RefundIDFilter' from JSON`);
}
/** @internal */
exports.RefundsListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.RefundsListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RefundsListQueryParamOrganizationIDFilter$;
(function (RefundsListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `RefundsListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    RefundsListQueryParamOrganizationIDFilter$.inboundSchema = exports.RefundsListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `RefundsListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    RefundsListQueryParamOrganizationIDFilter$.outboundSchema = exports.RefundsListQueryParamOrganizationIDFilter$outboundSchema;
})(RefundsListQueryParamOrganizationIDFilter$ || (exports.RefundsListQueryParamOrganizationIDFilter$ = RefundsListQueryParamOrganizationIDFilter$ = {}));
function refundsListQueryParamOrganizationIDFilterToJSON(refundsListQueryParamOrganizationIDFilter) {
    return JSON.stringify(exports.RefundsListQueryParamOrganizationIDFilter$outboundSchema.parse(refundsListQueryParamOrganizationIDFilter));
}
function refundsListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.RefundsListQueryParamOrganizationIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RefundsListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
exports.OrderIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.OrderIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrderIDFilter$;
(function (OrderIDFilter$) {
    /** @deprecated use `OrderIDFilter$inboundSchema` instead. */
    OrderIDFilter$.inboundSchema = exports.OrderIDFilter$inboundSchema;
    /** @deprecated use `OrderIDFilter$outboundSchema` instead. */
    OrderIDFilter$.outboundSchema = exports.OrderIDFilter$outboundSchema;
})(OrderIDFilter$ || (exports.OrderIDFilter$ = OrderIDFilter$ = {}));
function orderIDFilterToJSON(orderIDFilter) {
    return JSON.stringify(exports.OrderIDFilter$outboundSchema.parse(orderIDFilter));
}
function orderIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.OrderIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrderIDFilter' from JSON`);
}
/** @internal */
exports.SubscriptionIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.SubscriptionIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SubscriptionIDFilter$;
(function (SubscriptionIDFilter$) {
    /** @deprecated use `SubscriptionIDFilter$inboundSchema` instead. */
    SubscriptionIDFilter$.inboundSchema = exports.SubscriptionIDFilter$inboundSchema;
    /** @deprecated use `SubscriptionIDFilter$outboundSchema` instead. */
    SubscriptionIDFilter$.outboundSchema = exports.SubscriptionIDFilter$outboundSchema;
})(SubscriptionIDFilter$ || (exports.SubscriptionIDFilter$ = SubscriptionIDFilter$ = {}));
function subscriptionIDFilterToJSON(subscriptionIDFilter) {
    return JSON.stringify(exports.SubscriptionIDFilter$outboundSchema.parse(subscriptionIDFilter));
}
function subscriptionIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.SubscriptionIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriptionIDFilter' from JSON`);
}
/** @internal */
exports.RefundsListQueryParamCustomerIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.RefundsListQueryParamCustomerIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RefundsListQueryParamCustomerIDFilter$;
(function (RefundsListQueryParamCustomerIDFilter$) {
    /** @deprecated use `RefundsListQueryParamCustomerIDFilter$inboundSchema` instead. */
    RefundsListQueryParamCustomerIDFilter$.inboundSchema = exports.RefundsListQueryParamCustomerIDFilter$inboundSchema;
    /** @deprecated use `RefundsListQueryParamCustomerIDFilter$outboundSchema` instead. */
    RefundsListQueryParamCustomerIDFilter$.outboundSchema = exports.RefundsListQueryParamCustomerIDFilter$outboundSchema;
})(RefundsListQueryParamCustomerIDFilter$ || (exports.RefundsListQueryParamCustomerIDFilter$ = RefundsListQueryParamCustomerIDFilter$ = {}));
function refundsListQueryParamCustomerIDFilterToJSON(refundsListQueryParamCustomerIDFilter) {
    return JSON.stringify(exports.RefundsListQueryParamCustomerIDFilter$outboundSchema.parse(refundsListQueryParamCustomerIDFilter));
}
function refundsListQueryParamCustomerIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.RefundsListQueryParamCustomerIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RefundsListQueryParamCustomerIDFilter' from JSON`);
}
/** @internal */
exports.RefundsListRequest$inboundSchema = z.object({
    id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    order_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    subscription_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    customer_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    succeeded: z.nullable(z.boolean()).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(refundsortproperty_js_1.RefundSortProperty$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
        "order_id": "orderId",
        "subscription_id": "subscriptionId",
        "customer_id": "customerId",
    });
});
/** @internal */
exports.RefundsListRequest$outboundSchema = z.object({
    id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    orderId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    subscriptionId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    customerId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    succeeded: z.nullable(z.boolean()).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(refundsortproperty_js_1.RefundSortProperty$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
        orderId: "order_id",
        subscriptionId: "subscription_id",
        customerId: "customer_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RefundsListRequest$;
(function (RefundsListRequest$) {
    /** @deprecated use `RefundsListRequest$inboundSchema` instead. */
    RefundsListRequest$.inboundSchema = exports.RefundsListRequest$inboundSchema;
    /** @deprecated use `RefundsListRequest$outboundSchema` instead. */
    RefundsListRequest$.outboundSchema = exports.RefundsListRequest$outboundSchema;
})(RefundsListRequest$ || (exports.RefundsListRequest$ = RefundsListRequest$ = {}));
function refundsListRequestToJSON(refundsListRequest) {
    return JSON.stringify(exports.RefundsListRequest$outboundSchema.parse(refundsListRequest));
}
function refundsListRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.RefundsListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RefundsListRequest' from JSON`);
}
/** @internal */
exports.RefundsListResponse$inboundSchema = z.object({
    Result: listresourcerefund_js_1.ListResourceRefund$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Result": "result",
    });
});
/** @internal */
exports.RefundsListResponse$outboundSchema = z.object({
    result: listresourcerefund_js_1.ListResourceRefund$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RefundsListResponse$;
(function (RefundsListResponse$) {
    /** @deprecated use `RefundsListResponse$inboundSchema` instead. */
    RefundsListResponse$.inboundSchema = exports.RefundsListResponse$inboundSchema;
    /** @deprecated use `RefundsListResponse$outboundSchema` instead. */
    RefundsListResponse$.outboundSchema = exports.RefundsListResponse$outboundSchema;
})(RefundsListResponse$ || (exports.RefundsListResponse$ = RefundsListResponse$ = {}));
function refundsListResponseToJSON(refundsListResponse) {
    return JSON.stringify(exports.RefundsListResponse$outboundSchema.parse(refundsListResponse));
}
function refundsListResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.RefundsListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RefundsListResponse' from JSON`);
}
//# sourceMappingURL=refundslist.js.map