/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { DiscountSortProperty$inboundSchema, DiscountSortProperty$outboundSchema, } from "../components/discountsortproperty.js";
import { ListResourceDiscount$inboundSchema, ListResourceDiscount$outboundSchema, } from "../components/listresourcediscount.js";
/** @internal */
export const DiscountsListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const DiscountsListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DiscountsListQueryParamOrganizationIDFilter$;
(function (DiscountsListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `DiscountsListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    DiscountsListQueryParamOrganizationIDFilter$.inboundSchema = DiscountsListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `DiscountsListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    DiscountsListQueryParamOrganizationIDFilter$.outboundSchema = DiscountsListQueryParamOrganizationIDFilter$outboundSchema;
})(DiscountsListQueryParamOrganizationIDFilter$ || (DiscountsListQueryParamOrganizationIDFilter$ = {}));
export function discountsListQueryParamOrganizationIDFilterToJSON(discountsListQueryParamOrganizationIDFilter) {
    return JSON.stringify(DiscountsListQueryParamOrganizationIDFilter$outboundSchema.parse(discountsListQueryParamOrganizationIDFilter));
}
export function discountsListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DiscountsListQueryParamOrganizationIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DiscountsListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
export const DiscountsListRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    query: z.nullable(z.string()).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(DiscountSortProperty$inboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        "organization_id": "organizationId",
    });
});
/** @internal */
export const DiscountsListRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    query: z.nullable(z.string()).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(DiscountSortProperty$outboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DiscountsListRequest$;
(function (DiscountsListRequest$) {
    /** @deprecated use `DiscountsListRequest$inboundSchema` instead. */
    DiscountsListRequest$.inboundSchema = DiscountsListRequest$inboundSchema;
    /** @deprecated use `DiscountsListRequest$outboundSchema` instead. */
    DiscountsListRequest$.outboundSchema = DiscountsListRequest$outboundSchema;
})(DiscountsListRequest$ || (DiscountsListRequest$ = {}));
export function discountsListRequestToJSON(discountsListRequest) {
    return JSON.stringify(DiscountsListRequest$outboundSchema.parse(discountsListRequest));
}
export function discountsListRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DiscountsListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DiscountsListRequest' from JSON`);
}
/** @internal */
export const DiscountsListResponse$inboundSchema = z.object({
    Result: ListResourceDiscount$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Result": "result",
    });
});
/** @internal */
export const DiscountsListResponse$outboundSchema = z.object({
    result: ListResourceDiscount$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DiscountsListResponse$;
(function (DiscountsListResponse$) {
    /** @deprecated use `DiscountsListResponse$inboundSchema` instead. */
    DiscountsListResponse$.inboundSchema = DiscountsListResponse$inboundSchema;
    /** @deprecated use `DiscountsListResponse$outboundSchema` instead. */
    DiscountsListResponse$.outboundSchema = DiscountsListResponse$outboundSchema;
})(DiscountsListResponse$ || (DiscountsListResponse$ = {}));
export function discountsListResponseToJSON(discountsListResponse) {
    return JSON.stringify(DiscountsListResponse$outboundSchema.parse(discountsListResponse));
}
export function discountsListResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DiscountsListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DiscountsListResponse' from JSON`);
}
//# sourceMappingURL=discountslist.js.map