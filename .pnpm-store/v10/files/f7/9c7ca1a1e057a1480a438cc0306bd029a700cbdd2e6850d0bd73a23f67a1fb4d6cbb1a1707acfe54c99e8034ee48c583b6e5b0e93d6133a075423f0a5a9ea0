/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const BenefitCustomProperties$inboundSchema = z.object({
    note: z.nullable(z.string()),
});
/** @internal */
export const BenefitCustomProperties$outboundSchema = z.object({
    note: z.nullable(z.string()),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitCustomProperties$;
(function (BenefitCustomProperties$) {
    /** @deprecated use `BenefitCustomProperties$inboundSchema` instead. */
    BenefitCustomProperties$.inboundSchema = BenefitCustomProperties$inboundSchema;
    /** @deprecated use `BenefitCustomProperties$outboundSchema` instead. */
    BenefitCustomProperties$.outboundSchema = BenefitCustomProperties$outboundSchema;
})(BenefitCustomProperties$ || (BenefitCustomProperties$ = {}));
export function benefitCustomPropertiesToJSON(benefitCustomProperties) {
    return JSON.stringify(BenefitCustomProperties$outboundSchema.parse(benefitCustomProperties));
}
export function benefitCustomPropertiesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitCustomProperties$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitCustomProperties' from JSON`);
}
//# sourceMappingURL=benefitcustomproperties.js.map