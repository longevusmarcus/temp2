/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Event$inboundSchema, Event$outboundSchema, } from "./event.js";
import { Pagination$inboundSchema, Pagination$outboundSchema, } from "./pagination.js";
/** @internal */
export const ListResourceEvent$inboundSchema = z.object({
    items: z.array(Event$inboundSchema),
    pagination: Pagination$inboundSchema,
});
/** @internal */
export const ListResourceEvent$outboundSchema = z.object({
    items: z.array(Event$outboundSchema),
    pagination: Pagination$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListResourceEvent$;
(function (ListResourceEvent$) {
    /** @deprecated use `ListResourceEvent$inboundSchema` instead. */
    ListResourceEvent$.inboundSchema = ListResourceEvent$inboundSchema;
    /** @deprecated use `ListResourceEvent$outboundSchema` instead. */
    ListResourceEvent$.outboundSchema = ListResourceEvent$outboundSchema;
})(ListResourceEvent$ || (ListResourceEvent$ = {}));
export function listResourceEventToJSON(listResourceEvent) {
    return JSON.stringify(ListResourceEvent$outboundSchema.parse(listResourceEvent));
}
export function listResourceEventFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListResourceEvent$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListResourceEvent' from JSON`);
}
//# sourceMappingURL=listresourceevent.js.map