/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { SubscriptionUpdate$inboundSchema, SubscriptionUpdate$outboundSchema, } from "../components/subscriptionupdate.js";
/** @internal */
export const SubscriptionsUpdateRequest$inboundSchema = z.object({
    id: z.string(),
    SubscriptionUpdate: SubscriptionUpdate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "SubscriptionUpdate": "subscriptionUpdate",
    });
});
/** @internal */
export const SubscriptionsUpdateRequest$outboundSchema = z.object({
    id: z.string(),
    subscriptionUpdate: SubscriptionUpdate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        subscriptionUpdate: "SubscriptionUpdate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SubscriptionsUpdateRequest$;
(function (SubscriptionsUpdateRequest$) {
    /** @deprecated use `SubscriptionsUpdateRequest$inboundSchema` instead. */
    SubscriptionsUpdateRequest$.inboundSchema = SubscriptionsUpdateRequest$inboundSchema;
    /** @deprecated use `SubscriptionsUpdateRequest$outboundSchema` instead. */
    SubscriptionsUpdateRequest$.outboundSchema = SubscriptionsUpdateRequest$outboundSchema;
})(SubscriptionsUpdateRequest$ || (SubscriptionsUpdateRequest$ = {}));
export function subscriptionsUpdateRequestToJSON(subscriptionsUpdateRequest) {
    return JSON.stringify(SubscriptionsUpdateRequest$outboundSchema.parse(subscriptionsUpdateRequest));
}
export function subscriptionsUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SubscriptionsUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriptionsUpdateRequest' from JSON`);
}
//# sourceMappingURL=subscriptionsupdate.js.map