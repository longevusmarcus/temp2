import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { MeterQuantity, MeterQuantity$Outbound } from "./meterquantity.js";
export type MeterQuantities = {
    quantities: Array<MeterQuantity>;
};
/** @internal */
export declare const MeterQuantities$inboundSchema: z.ZodType<MeterQuantities, z.ZodTypeDef, unknown>;
/** @internal */
export type MeterQuantities$Outbound = {
    quantities: Array<MeterQuantity$Outbound>;
};
/** @internal */
export declare const MeterQuantities$outboundSchema: z.ZodType<MeterQuantities$Outbound, z.ZodTypeDef, MeterQuantities>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace MeterQuantities$ {
    /** @deprecated use `MeterQuantities$inboundSchema` instead. */
    const inboundSchema: z.ZodType<MeterQuantities, z.ZodTypeDef, unknown>;
    /** @deprecated use `MeterQuantities$outboundSchema` instead. */
    const outboundSchema: z.ZodType<MeterQuantities$Outbound, z.ZodTypeDef, MeterQuantities>;
    /** @deprecated use `MeterQuantities$Outbound` instead. */
    type Outbound = MeterQuantities$Outbound;
}
export declare function meterQuantitiesToJSON(meterQuantities: MeterQuantities): string;
export declare function meterQuantitiesFromJSON(jsonString: string): SafeParseResult<MeterQuantities, SDKValidationError>;
//# sourceMappingURL=meterquantities.d.ts.map