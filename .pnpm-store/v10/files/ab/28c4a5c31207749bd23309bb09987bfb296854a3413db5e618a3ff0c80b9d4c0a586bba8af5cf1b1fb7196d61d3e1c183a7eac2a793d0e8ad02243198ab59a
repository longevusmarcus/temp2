/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { S3FileUploadCompletedPart$inboundSchema, S3FileUploadCompletedPart$outboundSchema, } from "./s3fileuploadcompletedpart.js";
/** @internal */
export const FileUploadCompleted$inboundSchema = z.object({
    id: z.string(),
    path: z.string(),
    parts: z.array(S3FileUploadCompletedPart$inboundSchema),
});
/** @internal */
export const FileUploadCompleted$outboundSchema = z.object({
    id: z.string(),
    path: z.string(),
    parts: z.array(S3FileUploadCompletedPart$outboundSchema),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FileUploadCompleted$;
(function (FileUploadCompleted$) {
    /** @deprecated use `FileUploadCompleted$inboundSchema` instead. */
    FileUploadCompleted$.inboundSchema = FileUploadCompleted$inboundSchema;
    /** @deprecated use `FileUploadCompleted$outboundSchema` instead. */
    FileUploadCompleted$.outboundSchema = FileUploadCompleted$outboundSchema;
})(FileUploadCompleted$ || (FileUploadCompleted$ = {}));
export function fileUploadCompletedToJSON(fileUploadCompleted) {
    return JSON.stringify(FileUploadCompleted$outboundSchema.parse(fileUploadCompleted));
}
export function fileUploadCompletedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FileUploadCompleted$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FileUploadCompleted' from JSON`);
}
//# sourceMappingURL=fileuploadcompleted.js.map