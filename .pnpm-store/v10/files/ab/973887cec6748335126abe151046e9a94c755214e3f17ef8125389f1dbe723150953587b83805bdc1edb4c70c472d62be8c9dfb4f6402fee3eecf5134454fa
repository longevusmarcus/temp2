/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const S3FileCreatePart$inboundSchema = z.object({
    number: z.number().int(),
    chunk_start: z.number().int(),
    chunk_end: z.number().int(),
    checksum_sha256_base64: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        "chunk_start": "chunkStart",
        "chunk_end": "chunkEnd",
        "checksum_sha256_base64": "checksumSha256Base64",
    });
});
/** @internal */
export const S3FileCreatePart$outboundSchema = z.object({
    number: z.number().int(),
    chunkStart: z.number().int(),
    chunkEnd: z.number().int(),
    checksumSha256Base64: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        chunkStart: "chunk_start",
        chunkEnd: "chunk_end",
        checksumSha256Base64: "checksum_sha256_base64",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var S3FileCreatePart$;
(function (S3FileCreatePart$) {
    /** @deprecated use `S3FileCreatePart$inboundSchema` instead. */
    S3FileCreatePart$.inboundSchema = S3FileCreatePart$inboundSchema;
    /** @deprecated use `S3FileCreatePart$outboundSchema` instead. */
    S3FileCreatePart$.outboundSchema = S3FileCreatePart$outboundSchema;
})(S3FileCreatePart$ || (S3FileCreatePart$ = {}));
export function s3FileCreatePartToJSON(s3FileCreatePart) {
    return JSON.stringify(S3FileCreatePart$outboundSchema.parse(s3FileCreatePart));
}
export function s3FileCreatePartFromJSON(jsonString) {
    return safeParse(jsonString, (x) => S3FileCreatePart$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'S3FileCreatePart' from JSON`);
}
//# sourceMappingURL=s3filecreatepart.js.map