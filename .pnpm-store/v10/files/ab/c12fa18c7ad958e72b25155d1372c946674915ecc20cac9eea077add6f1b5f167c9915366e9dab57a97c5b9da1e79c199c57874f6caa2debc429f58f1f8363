"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FilterClause$ = exports.FilterClause$outboundSchema = exports.FilterClause$inboundSchema = exports.Value$ = exports.Value$outboundSchema = exports.Value$inboundSchema = void 0;
exports.valueToJSON = valueToJSON;
exports.valueFromJSON = valueFromJSON;
exports.filterClauseToJSON = filterClauseToJSON;
exports.filterClauseFromJSON = filterClauseFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
const filteroperator_js_1 = require("./filteroperator.js");
/** @internal */
exports.Value$inboundSchema = z
    .union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
exports.Value$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Value$;
(function (Value$) {
    /** @deprecated use `Value$inboundSchema` instead. */
    Value$.inboundSchema = exports.Value$inboundSchema;
    /** @deprecated use `Value$outboundSchema` instead. */
    Value$.outboundSchema = exports.Value$outboundSchema;
})(Value$ || (exports.Value$ = Value$ = {}));
function valueToJSON(value) {
    return JSON.stringify(exports.Value$outboundSchema.parse(value));
}
function valueFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Value$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Value' from JSON`);
}
/** @internal */
exports.FilterClause$inboundSchema = z.object({
    property: z.string(),
    operator: filteroperator_js_1.FilterOperator$inboundSchema,
    value: z.union([z.string(), z.number().int(), z.boolean()]),
});
/** @internal */
exports.FilterClause$outboundSchema = z.object({
    property: z.string(),
    operator: filteroperator_js_1.FilterOperator$outboundSchema,
    value: z.union([z.string(), z.number().int(), z.boolean()]),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FilterClause$;
(function (FilterClause$) {
    /** @deprecated use `FilterClause$inboundSchema` instead. */
    FilterClause$.inboundSchema = exports.FilterClause$inboundSchema;
    /** @deprecated use `FilterClause$outboundSchema` instead. */
    FilterClause$.outboundSchema = exports.FilterClause$outboundSchema;
})(FilterClause$ || (exports.FilterClause$ = FilterClause$ = {}));
function filterClauseToJSON(filterClause) {
    return JSON.stringify(exports.FilterClause$outboundSchema.parse(filterClause));
}
function filterClauseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FilterClause$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterClause' from JSON`);
}
//# sourceMappingURL=filterclause.js.map