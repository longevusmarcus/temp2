"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExternalOrganizationsListResponse$ = exports.ExternalOrganizationsListResponse$outboundSchema = exports.ExternalOrganizationsListResponse$inboundSchema = exports.ExternalOrganizationsListRequest$ = exports.ExternalOrganizationsListRequest$outboundSchema = exports.ExternalOrganizationsListRequest$inboundSchema = exports.OrganizationIDFilter$ = exports.OrganizationIDFilter$outboundSchema = exports.OrganizationIDFilter$inboundSchema = exports.RepositoryNameFilter$ = exports.RepositoryNameFilter$outboundSchema = exports.RepositoryNameFilter$inboundSchema = exports.PlatformFilter$ = exports.PlatformFilter$outboundSchema = exports.PlatformFilter$inboundSchema = void 0;
exports.platformFilterToJSON = platformFilterToJSON;
exports.platformFilterFromJSON = platformFilterFromJSON;
exports.repositoryNameFilterToJSON = repositoryNameFilterToJSON;
exports.repositoryNameFilterFromJSON = repositoryNameFilterFromJSON;
exports.organizationIDFilterToJSON = organizationIDFilterToJSON;
exports.organizationIDFilterFromJSON = organizationIDFilterFromJSON;
exports.externalOrganizationsListRequestToJSON = externalOrganizationsListRequestToJSON;
exports.externalOrganizationsListRequestFromJSON = externalOrganizationsListRequestFromJSON;
exports.externalOrganizationsListResponseToJSON = externalOrganizationsListResponseToJSON;
exports.externalOrganizationsListResponseFromJSON = externalOrganizationsListResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const externalorganizationsortproperty_js_1 = require("../components/externalorganizationsortproperty.js");
const listresourceexternalorganization_js_1 = require("../components/listresourceexternalorganization.js");
const platforms_js_1 = require("../components/platforms.js");
/** @internal */
exports.PlatformFilter$inboundSchema = z.union([platforms_js_1.Platforms$inboundSchema, z.array(platforms_js_1.Platforms$inboundSchema)]);
/** @internal */
exports.PlatformFilter$outboundSchema = z.union([platforms_js_1.Platforms$outboundSchema, z.array(platforms_js_1.Platforms$outboundSchema)]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PlatformFilter$;
(function (PlatformFilter$) {
    /** @deprecated use `PlatformFilter$inboundSchema` instead. */
    PlatformFilter$.inboundSchema = exports.PlatformFilter$inboundSchema;
    /** @deprecated use `PlatformFilter$outboundSchema` instead. */
    PlatformFilter$.outboundSchema = exports.PlatformFilter$outboundSchema;
})(PlatformFilter$ || (exports.PlatformFilter$ = PlatformFilter$ = {}));
function platformFilterToJSON(platformFilter) {
    return JSON.stringify(exports.PlatformFilter$outboundSchema.parse(platformFilter));
}
function platformFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PlatformFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PlatformFilter' from JSON`);
}
/** @internal */
exports.RepositoryNameFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.RepositoryNameFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RepositoryNameFilter$;
(function (RepositoryNameFilter$) {
    /** @deprecated use `RepositoryNameFilter$inboundSchema` instead. */
    RepositoryNameFilter$.inboundSchema = exports.RepositoryNameFilter$inboundSchema;
    /** @deprecated use `RepositoryNameFilter$outboundSchema` instead. */
    RepositoryNameFilter$.outboundSchema = exports.RepositoryNameFilter$outboundSchema;
})(RepositoryNameFilter$ || (exports.RepositoryNameFilter$ = RepositoryNameFilter$ = {}));
function repositoryNameFilterToJSON(repositoryNameFilter) {
    return JSON.stringify(exports.RepositoryNameFilter$outboundSchema.parse(repositoryNameFilter));
}
function repositoryNameFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.RepositoryNameFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RepositoryNameFilter' from JSON`);
}
/** @internal */
exports.OrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.OrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrganizationIDFilter$;
(function (OrganizationIDFilter$) {
    /** @deprecated use `OrganizationIDFilter$inboundSchema` instead. */
    OrganizationIDFilter$.inboundSchema = exports.OrganizationIDFilter$inboundSchema;
    /** @deprecated use `OrganizationIDFilter$outboundSchema` instead. */
    OrganizationIDFilter$.outboundSchema = exports.OrganizationIDFilter$outboundSchema;
})(OrganizationIDFilter$ || (exports.OrganizationIDFilter$ = OrganizationIDFilter$ = {}));
function organizationIDFilterToJSON(organizationIDFilter) {
    return JSON.stringify(exports.OrganizationIDFilter$outboundSchema.parse(organizationIDFilter));
}
function organizationIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.OrganizationIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrganizationIDFilter' from JSON`);
}
/** @internal */
exports.ExternalOrganizationsListRequest$inboundSchema = z.object({
    platform: z.nullable(z.union([platforms_js_1.Platforms$inboundSchema, z.array(platforms_js_1.Platforms$inboundSchema)])).optional(),
    name: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(externalorganizationsortproperty_js_1.ExternalOrganizationSortProperty$inboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
    });
});
/** @internal */
exports.ExternalOrganizationsListRequest$outboundSchema = z.object({
    platform: z.nullable(z.union([platforms_js_1.Platforms$outboundSchema, z.array(platforms_js_1.Platforms$outboundSchema)])).optional(),
    name: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(externalorganizationsortproperty_js_1.ExternalOrganizationSortProperty$outboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ExternalOrganizationsListRequest$;
(function (ExternalOrganizationsListRequest$) {
    /** @deprecated use `ExternalOrganizationsListRequest$inboundSchema` instead. */
    ExternalOrganizationsListRequest$.inboundSchema = exports.ExternalOrganizationsListRequest$inboundSchema;
    /** @deprecated use `ExternalOrganizationsListRequest$outboundSchema` instead. */
    ExternalOrganizationsListRequest$.outboundSchema = exports.ExternalOrganizationsListRequest$outboundSchema;
})(ExternalOrganizationsListRequest$ || (exports.ExternalOrganizationsListRequest$ = ExternalOrganizationsListRequest$ = {}));
function externalOrganizationsListRequestToJSON(externalOrganizationsListRequest) {
    return JSON.stringify(exports.ExternalOrganizationsListRequest$outboundSchema.parse(externalOrganizationsListRequest));
}
function externalOrganizationsListRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ExternalOrganizationsListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExternalOrganizationsListRequest' from JSON`);
}
/** @internal */
exports.ExternalOrganizationsListResponse$inboundSchema = z.object({
    Result: listresourceexternalorganization_js_1.ListResourceExternalOrganization$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Result": "result",
    });
});
/** @internal */
exports.ExternalOrganizationsListResponse$outboundSchema = z.object({
    result: listresourceexternalorganization_js_1.ListResourceExternalOrganization$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ExternalOrganizationsListResponse$;
(function (ExternalOrganizationsListResponse$) {
    /** @deprecated use `ExternalOrganizationsListResponse$inboundSchema` instead. */
    ExternalOrganizationsListResponse$.inboundSchema = exports.ExternalOrganizationsListResponse$inboundSchema;
    /** @deprecated use `ExternalOrganizationsListResponse$outboundSchema` instead. */
    ExternalOrganizationsListResponse$.outboundSchema = exports.ExternalOrganizationsListResponse$outboundSchema;
})(ExternalOrganizationsListResponse$ || (exports.ExternalOrganizationsListResponse$ = ExternalOrganizationsListResponse$ = {}));
function externalOrganizationsListResponseToJSON(externalOrganizationsListResponse) {
    return JSON.stringify(exports.ExternalOrganizationsListResponse$outboundSchema.parse(externalOrganizationsListResponse));
}
function externalOrganizationsListResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ExternalOrganizationsListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExternalOrganizationsListResponse' from JSON`);
}
//# sourceMappingURL=externalorganizationslist.js.map