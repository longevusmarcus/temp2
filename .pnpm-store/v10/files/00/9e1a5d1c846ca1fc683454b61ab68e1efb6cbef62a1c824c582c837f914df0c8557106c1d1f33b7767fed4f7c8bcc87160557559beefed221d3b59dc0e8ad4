/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CustomFieldDateProperties$inboundSchema, CustomFieldDateProperties$outboundSchema, } from "./customfielddateproperties.js";
/** @internal */
export const CustomFieldCreateDateMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/** @internal */
export const CustomFieldCreateDateMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldCreateDateMetadata$;
(function (CustomFieldCreateDateMetadata$) {
    /** @deprecated use `CustomFieldCreateDateMetadata$inboundSchema` instead. */
    CustomFieldCreateDateMetadata$.inboundSchema = CustomFieldCreateDateMetadata$inboundSchema;
    /** @deprecated use `CustomFieldCreateDateMetadata$outboundSchema` instead. */
    CustomFieldCreateDateMetadata$.outboundSchema = CustomFieldCreateDateMetadata$outboundSchema;
})(CustomFieldCreateDateMetadata$ || (CustomFieldCreateDateMetadata$ = {}));
export function customFieldCreateDateMetadataToJSON(customFieldCreateDateMetadata) {
    return JSON.stringify(CustomFieldCreateDateMetadata$outboundSchema.parse(customFieldCreateDateMetadata));
}
export function customFieldCreateDateMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldCreateDateMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldCreateDateMetadata' from JSON`);
}
/** @internal */
export const CustomFieldCreateDate$inboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    type: z.literal("date").optional(),
    slug: z.string(),
    name: z.string(),
    organization_id: z.nullable(z.string()).optional(),
    properties: CustomFieldDateProperties$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "organization_id": "organizationId",
    });
});
/** @internal */
export const CustomFieldCreateDate$outboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean()]))
        .optional(),
    type: z.literal("date").default("date"),
    slug: z.string(),
    name: z.string(),
    organizationId: z.nullable(z.string()).optional(),
    properties: CustomFieldDateProperties$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomFieldCreateDate$;
(function (CustomFieldCreateDate$) {
    /** @deprecated use `CustomFieldCreateDate$inboundSchema` instead. */
    CustomFieldCreateDate$.inboundSchema = CustomFieldCreateDate$inboundSchema;
    /** @deprecated use `CustomFieldCreateDate$outboundSchema` instead. */
    CustomFieldCreateDate$.outboundSchema = CustomFieldCreateDate$outboundSchema;
})(CustomFieldCreateDate$ || (CustomFieldCreateDate$ = {}));
export function customFieldCreateDateToJSON(customFieldCreateDate) {
    return JSON.stringify(CustomFieldCreateDate$outboundSchema.parse(customFieldCreateDate));
}
export function customFieldCreateDateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomFieldCreateDate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomFieldCreateDate' from JSON`);
}
//# sourceMappingURL=customfieldcreatedate.js.map