/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ListResourceOAuth2Client$inboundSchema, ListResourceOAuth2Client$outboundSchema, } from "../components/listresourceoauth2client.js";
/** @internal */
export const Oauth2ClientsListRequest$inboundSchema = z.object({
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
});
/** @internal */
export const Oauth2ClientsListRequest$outboundSchema = z.object({
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Oauth2ClientsListRequest$;
(function (Oauth2ClientsListRequest$) {
    /** @deprecated use `Oauth2ClientsListRequest$inboundSchema` instead. */
    Oauth2ClientsListRequest$.inboundSchema = Oauth2ClientsListRequest$inboundSchema;
    /** @deprecated use `Oauth2ClientsListRequest$outboundSchema` instead. */
    Oauth2ClientsListRequest$.outboundSchema = Oauth2ClientsListRequest$outboundSchema;
})(Oauth2ClientsListRequest$ || (Oauth2ClientsListRequest$ = {}));
export function oauth2ClientsListRequestToJSON(oauth2ClientsListRequest) {
    return JSON.stringify(Oauth2ClientsListRequest$outboundSchema.parse(oauth2ClientsListRequest));
}
export function oauth2ClientsListRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Oauth2ClientsListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Oauth2ClientsListRequest' from JSON`);
}
/** @internal */
export const Oauth2ClientsListResponse$inboundSchema = z.object({
    Result: ListResourceOAuth2Client$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Result": "result",
    });
});
/** @internal */
export const Oauth2ClientsListResponse$outboundSchema = z.object({
    result: ListResourceOAuth2Client$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Oauth2ClientsListResponse$;
(function (Oauth2ClientsListResponse$) {
    /** @deprecated use `Oauth2ClientsListResponse$inboundSchema` instead. */
    Oauth2ClientsListResponse$.inboundSchema = Oauth2ClientsListResponse$inboundSchema;
    /** @deprecated use `Oauth2ClientsListResponse$outboundSchema` instead. */
    Oauth2ClientsListResponse$.outboundSchema = Oauth2ClientsListResponse$outboundSchema;
})(Oauth2ClientsListResponse$ || (Oauth2ClientsListResponse$ = {}));
export function oauth2ClientsListResponseToJSON(oauth2ClientsListResponse) {
    return JSON.stringify(Oauth2ClientsListResponse$outboundSchema.parse(oauth2ClientsListResponse));
}
export function oauth2ClientsListResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Oauth2ClientsListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Oauth2ClientsListResponse' from JSON`);
}
//# sourceMappingURL=oauth2clientslist.js.map