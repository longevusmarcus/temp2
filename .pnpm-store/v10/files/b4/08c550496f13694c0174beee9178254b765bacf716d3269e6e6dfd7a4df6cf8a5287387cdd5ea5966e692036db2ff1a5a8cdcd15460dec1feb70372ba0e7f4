/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { DiscountFixedOnceForeverDurationCreate$inboundSchema, DiscountFixedOnceForeverDurationCreate$outboundSchema, } from "./discountfixedonceforeverdurationcreate.js";
import { DiscountFixedRepeatDurationCreate$inboundSchema, DiscountFixedRepeatDurationCreate$outboundSchema, } from "./discountfixedrepeatdurationcreate.js";
import { DiscountPercentageOnceForeverDurationCreate$inboundSchema, DiscountPercentageOnceForeverDurationCreate$outboundSchema, } from "./discountpercentageonceforeverdurationcreate.js";
import { DiscountPercentageRepeatDurationCreate$inboundSchema, DiscountPercentageRepeatDurationCreate$outboundSchema, } from "./discountpercentagerepeatdurationcreate.js";
/** @internal */
export const DiscountCreate$inboundSchema = z.union([
    DiscountPercentageOnceForeverDurationCreate$inboundSchema,
    DiscountFixedOnceForeverDurationCreate$inboundSchema,
    DiscountPercentageRepeatDurationCreate$inboundSchema,
    DiscountFixedRepeatDurationCreate$inboundSchema,
]);
/** @internal */
export const DiscountCreate$outboundSchema = z.union([
    DiscountPercentageOnceForeverDurationCreate$outboundSchema,
    DiscountFixedOnceForeverDurationCreate$outboundSchema,
    DiscountPercentageRepeatDurationCreate$outboundSchema,
    DiscountFixedRepeatDurationCreate$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DiscountCreate$;
(function (DiscountCreate$) {
    /** @deprecated use `DiscountCreate$inboundSchema` instead. */
    DiscountCreate$.inboundSchema = DiscountCreate$inboundSchema;
    /** @deprecated use `DiscountCreate$outboundSchema` instead. */
    DiscountCreate$.outboundSchema = DiscountCreate$outboundSchema;
})(DiscountCreate$ || (DiscountCreate$ = {}));
export function discountCreateToJSON(discountCreate) {
    return JSON.stringify(DiscountCreate$outboundSchema.parse(discountCreate));
}
export function discountCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DiscountCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DiscountCreate' from JSON`);
}
//# sourceMappingURL=discountcreate.js.map