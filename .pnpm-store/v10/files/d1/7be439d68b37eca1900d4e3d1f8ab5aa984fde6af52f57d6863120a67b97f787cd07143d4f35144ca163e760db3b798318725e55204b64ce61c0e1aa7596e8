/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Subscription$inboundSchema, Subscription$outboundSchema, } from "./subscription.js";
/** @internal */
export const WebhookSubscriptionUncanceledPayload$inboundSchema = z.object({
    type: z.literal("subscription.uncanceled").optional(),
    data: Subscription$inboundSchema,
});
/** @internal */
export const WebhookSubscriptionUncanceledPayload$outboundSchema = z.object({
    type: z.literal("subscription.uncanceled").default("subscription.uncanceled"),
    data: Subscription$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookSubscriptionUncanceledPayload$;
(function (WebhookSubscriptionUncanceledPayload$) {
    /** @deprecated use `WebhookSubscriptionUncanceledPayload$inboundSchema` instead. */
    WebhookSubscriptionUncanceledPayload$.inboundSchema = WebhookSubscriptionUncanceledPayload$inboundSchema;
    /** @deprecated use `WebhookSubscriptionUncanceledPayload$outboundSchema` instead. */
    WebhookSubscriptionUncanceledPayload$.outboundSchema = WebhookSubscriptionUncanceledPayload$outboundSchema;
})(WebhookSubscriptionUncanceledPayload$ || (WebhookSubscriptionUncanceledPayload$ = {}));
export function webhookSubscriptionUncanceledPayloadToJSON(webhookSubscriptionUncanceledPayload) {
    return JSON.stringify(WebhookSubscriptionUncanceledPayload$outboundSchema.parse(webhookSubscriptionUncanceledPayload));
}
export function webhookSubscriptionUncanceledPayloadFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookSubscriptionUncanceledPayload$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookSubscriptionUncanceledPayload' from JSON`);
}
//# sourceMappingURL=webhooksubscriptionuncanceledpayload.js.map