/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomerPortalOAuthAccount$inboundSchema = z.object({
    account_id: z.string(),
    account_username: z.nullable(z.string()),
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "account_username": "accountUsername",
    });
});
/** @internal */
export const CustomerPortalOAuthAccount$outboundSchema = z.object({
    accountId: z.string(),
    accountUsername: z.nullable(z.string()),
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        accountUsername: "account_username",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalOAuthAccount$;
(function (CustomerPortalOAuthAccount$) {
    /** @deprecated use `CustomerPortalOAuthAccount$inboundSchema` instead. */
    CustomerPortalOAuthAccount$.inboundSchema = CustomerPortalOAuthAccount$inboundSchema;
    /** @deprecated use `CustomerPortalOAuthAccount$outboundSchema` instead. */
    CustomerPortalOAuthAccount$.outboundSchema = CustomerPortalOAuthAccount$outboundSchema;
})(CustomerPortalOAuthAccount$ || (CustomerPortalOAuthAccount$ = {}));
export function customerPortalOAuthAccountToJSON(customerPortalOAuthAccount) {
    return JSON.stringify(CustomerPortalOAuthAccount$outboundSchema.parse(customerPortalOAuthAccount));
}
export function customerPortalOAuthAccountFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalOAuthAccount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalOAuthAccount' from JSON`);
}
//# sourceMappingURL=customerportaloauthaccount.js.map