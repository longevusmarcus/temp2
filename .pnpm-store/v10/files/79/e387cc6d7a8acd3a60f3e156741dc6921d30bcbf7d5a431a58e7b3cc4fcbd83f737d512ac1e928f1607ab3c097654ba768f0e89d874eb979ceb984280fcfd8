/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { RepositoryProfileSettingsUpdate$inboundSchema, RepositoryProfileSettingsUpdate$outboundSchema, } from "./repositoryprofilesettingsupdate.js";
/** @internal */
export const RepositoryUpdate$inboundSchema = z.object({
    profile_settings: z.nullable(RepositoryProfileSettingsUpdate$inboundSchema)
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "profile_settings": "profileSettings",
    });
});
/** @internal */
export const RepositoryUpdate$outboundSchema = z.object({
    profileSettings: z.nullable(RepositoryProfileSettingsUpdate$outboundSchema)
        .optional(),
}).transform((v) => {
    return remap$(v, {
        profileSettings: "profile_settings",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RepositoryUpdate$;
(function (RepositoryUpdate$) {
    /** @deprecated use `RepositoryUpdate$inboundSchema` instead. */
    RepositoryUpdate$.inboundSchema = RepositoryUpdate$inboundSchema;
    /** @deprecated use `RepositoryUpdate$outboundSchema` instead. */
    RepositoryUpdate$.outboundSchema = RepositoryUpdate$outboundSchema;
})(RepositoryUpdate$ || (RepositoryUpdate$ = {}));
export function repositoryUpdateToJSON(repositoryUpdate) {
    return JSON.stringify(RepositoryUpdate$outboundSchema.parse(repositoryUpdate));
}
export function repositoryUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RepositoryUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RepositoryUpdate' from JSON`);
}
//# sourceMappingURL=repositoryupdate.js.map