import { PolarCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import { Checkout } from "../models/components/checkout.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/errors/httpclienterrors.js";
import { HTTPValidationError } from "../models/errors/httpvalidationerror.js";
import { ResourceNotFound } from "../models/errors/resourcenotfound.js";
import { SDKError } from "../models/errors/sdkerror.js";
import { SDKValidationError } from "../models/errors/sdkvalidationerror.js";
import { CheckoutsGetRequest } from "../models/operations/checkoutsget.js";
import { APIPromise } from "../types/async.js";
import { Result } from "../types/fp.js";
/**
 * Get Checkout Session
 *
 * @remarks
 * Get a checkout session by ID.
 *
 * **Scopes**: `checkouts:read` `checkouts:write`
 */
export declare function checkoutsGet(client: PolarCore, request: CheckoutsGetRequest, options?: RequestOptions): APIPromise<Result<Checkout, ResourceNotFound | HTTPValidationError | SDKError | SDKValidationError | UnexpectedClientError | InvalidRequestError | RequestAbortedError | RequestTimeoutError | ConnectionError>>;
//# sourceMappingURL=checkoutsGet.d.ts.map